#include <a_samp>
#include <a_players>
Pac0AnTidEamx20()
{
    new a[][] =
    {
        "Unarmed (Fist)",
        "Brass K"
    };
    #pragma unused a
}

#include <sscanf>
#include <lethaldudb2>
#include <streamer>
#include <mSelection>
#pragma tabsize 0
#pragma dynamic 150000
#include <nex-ac>
#include <anti_dialoghide>
#include <colores_warblood>
#include <defines_1_warblood>
#include <variables_warblood>
#include <funciones_warblood>
#include <td-notification>




#define MAX_OBSERVERS 50 // Máximo de observadores por jugador

#pragma warning disable 239, 214, 217

#undef MAX_PLAYERS
#define MAX_PLAYERS 1000
#undef MAX_ACTORS
#define MAX_ACTORS 800

new Observando[MAX_PLAYERS][MAX_OBSERVERS]; // Matriz para almacenar los observadores de cada jugador
new Float:PosicionX, Float:PosicionY, Float:PosicionZ;

new Skin_Zombie[MAX_PLAYERS];
new Skin_Humano[MAX_PLAYERS];

new ZombieVariable[MAX_PLAYERS];
new bool:MessageShown[MAX_PLAYERS][2]; // Array para rastrear el estado del mensaje mostrado

static pvehicleid[MAX_PLAYERS]; 
static pmodelid[MAX_PLAYERS]; 

#define 			function%0(%1) 							forward %0(%1); public %0(%1)
#define 			PlayerToPoint(%1,%2,%3,%4,%5)  			IsPlayerInRangeOfPoint(%2,%1,%3,%4,%5)


static skinlist1 = mS_INVALID_LISTID;
static skinlist2 = mS_INVALID_LISTID;
static skinlist3 = mS_INVALID_LISTID;
static skinlist4 = mS_INVALID_LISTID;

    new meleeWeapons[] = {
        4,   // Cuchillo
        5,   // Palo de golf
        6,   // Bate de beisbol
        7    // Palanca
    };

#define DIALOG_NOTIFICACION 463


#define DEALER_X 2437.6340
#define DEALER_Y -1759.7843
#define DEALER_Z 14.7158
#define DISTANCE_THRESHOLD 5.0

//forward BorrarCajas();

new Text:AvisoSopechosoTD[3];

#define DIALOG_TOPS 2941
#define COLOR_MERCENARIO 0x33CCFFAA
#define COLOR_EXTERMINADOR 0xFF9900AA
#define DIALOG_TRANSFORMACION 5926
#define DIALOG_DEALER 9881
#define DIALOG_MOCHILA 9882
#define DIALOG_NEMESIS_CMD 2951
#define TEAM_NEMESIS 66

//ruleta
new g_probVerde_infinity = 1;
new g_probMismoColor_infinity = 18;

new g_probVerde_deluxe = 1;
new g_probMismoColor_deluxe = 18;

new g_probVerde_normal = 1;
new g_probMismoColor_normal = 18;
enum PlayerData
{
	Registered,
	LoggedIn,
	pVip,
	Hide,
	Level,
	CLAN_TIENE,
	RANGO_PLAYER,
	LEERACTIVADO_PLAYER,
	KILLS_PLAYER,
	EXTASIS_PLAYER_2,
	LSD_PLAYER_2,
	FENTANILO_PLAYER_2,
	GHB_PLAYER_2,
	ALUCINOGENO_PLAYER,
	HEROINA_PLAYER,
	INHALANTES_PLAYER,
	KETAMINA_PLAYER,
	KHAT_PLAYER,
	BONUS_PLAYER,
	KRATOM_PLAYER,
	MISION1_PLAYER,
	MISION2_PLAYER,
	PUNTOS_PLAYER_2,
    CONQUISTAS_PLAYER,
	CLAN_TIENELIDER,
	CLAN_TIENEREP,
	EXTERMINADOR_TIENE,
	VIP_TIENE,
	VIP_EXPIRATION,
	#if EnableTwoRcon == true
	MaxRcon,
	#endif
	Muted,
	Caps,
	Jailed,
	JailTime,
	Frozen,
	FreezeTime,
	Kills,
	Deaths,
	hours,
	mins,
	secs,
	pVisivel,   // variable npc
	pBarulho,    // variable npc
	tSpawnZ = 120,    // variable npc
	pVida,        // var npc
	Sangrando,
	TotalTime,
	ConnectTime,
 	MuteWarnings,
	Warnings,
	Spawned,
	TimesSpawned,
	God,
	GodCar,
	DoorsLocked,
	SpamCount,
	SpamTime,
	blip,
	blipS,
	pColour,
	pCar,
	SpecID,
	SpecType,
	bool:AllowedIn,
	FailLogin,
};

new PlayerInfo[MAX_PLAYERS][PlayerData],
  //  AccType[128],
	//iColor,
	ADpm[MAX_PLAYERS];


enum ServerData
{
	MaxPing,
	ReadPMs,
	ReadCmds,
	MaxAdminLevel,
	AdminOnlySkins,
	AdminSkin,
	AdminSkin2,
	NameKick,
	PartNameKick,
	AntiBot,
	AntiSpam,
 	AntiSwear,
 	NoCaps,
	Locked,
	Password[128],
	GiveWeap,
	GiveMoney,
	ConnectMessages,
	AdminCmdMsg,
	AutoLogin,
	MaxMuteWarnings,
	DisableChat,
	MustLogin,
	MustRegister,
};
new ServerInfo[ServerData];

enum VariablesData
{
	MID_MASACRE,
	SWO_MASACRE,
	SD_MASACRE,
	GOD_MASACRE,
	GOD_CONQUISTAS,
	SD_CONQUISTAS,
	SWO_CONQUISTAS,
	SINCLAN_MASACRE,	
};
new VariablesInfo[VariablesData];

// Menus
#if defined USE_MENUS
new Menu:LMainMenu, Menu:AdminEnable, Menu:AdminDisable,
    Menu:LVehicles, Menu:twodoor, Menu:fourdoor, Menu:fastcar, Menu:Othercars,
	Menu:bikes, Menu:boats, Menu:planes, Menu:helicopters,
    Menu:XWeapons, Menu:XWeaponsBig, Menu:XWeaponsSmall, Menu:XWeaponsMore,
    Menu:LWeather,Menu:LTime,
    Menu:LTuneMenu, Menu:PaintMenu, Menu:LCars, Menu:LCars2,
    Menu:LTele, Menu:LasVenturasMenu, Menu:LosSantosMenu, Menu:SanFierroMenu,
	Menu:DesertMenu, Menu:FlintMenu, Menu:MountChiliadMenu,	Menu:InteriorsMenu;
#endif



enum rankingEnum
{
player_Score,
player_ID
}

//ZONAS CONQUISTABLES
/*enum eClans
{
    CLAN_LTC,
    CLAN_WE,
    CLAN_SIN_CLAN,
    CLAN_SIN_CONQUISTAR
};*/

enum eZone
{
    Float:zMinX,
    Float:zMinY,
    Float:zMaxX,
    Float:zMaxY,
    zTeam
}
new ZoneInfo[][eZone] = {
{1501.7156372070312, -1465.1334533691406, 1537.7156372070312, -1412.1334533691406, CLAN_SIN_CONQUISTAR },
{1390.7044677734375, -1443.130615234375, 1426.7044677734375, -1390.130615234375, CLAN_SIN_CONQUISTAR },
{1716.5, -1453.5, 1844.5, -1295.5, CLAN_SIN_CONQUISTAR },
{1059.0001220703125, -1555.000015258789, 1189.0001220703125, -1428.000015258789, CLAN_SIN_CONQUISTAR },
{1058.9686889648438, -1281.9913787841797, 1220.9686889648438, -1148.9913787841797, CLAN_SIN_CONQUISTAR },
{790.9630126953125, -1317.9913787841797, 941.9630126953125, -1147.9913787841797, CLAN_SIN_CONQUISTAR },
{662.9400939941406, -1503.9770812988281, 779.9400939941406, -1431.9770812988281, CLAN_SIN_CONQUISTAR },
{1712.70166015625, -2330.7443237304688, 1801.70166015625, -2240.7443237304688, CLAN_SIN_CONQUISTAR },
{1578.6987915039062, -2330.7386474609375, 1667.6987915039062, -2240.7386474609375, CLAN_SIN_CONQUISTAR },
{2421.6817626953125, -2115.715850830078, 2478.6817626953125, -2063.715850830078, CLAN_SIN_CONQUISTAR },
{2488.6760864257812, -2115.7073364257812, 2545.6760864257812, -2063.7073364257812, CLAN_SIN_CONQUISTAR },
{1218.911865234375, -1841.9714965820312, 1290.911865234375, -1772.9714965820312, CLAN_SIN_CONQUISTAR },
{1041.9061889648438, -1787.9686584472656, 1113.9061889648438, -1718.9686584472656, CLAN_SIN_CONQUISTAR },
{1337.9005126953125, -1776.9629516601562, 1381.9005126953125, -1737.9629516601562, CLAN_SIN_CONQUISTAR },
{2214.5224609375, -1465.9456634521484, 2282.5224609375, -1400.9456634521484, CLAN_SIN_CONQUISTAR },
///
{1077.75, -2088.24609375, 1305.75, -1987.24609375, CLAN_SIN_CONQUISTAR },
{340.71875, -2103.21484375, 419.71875, -2033.21484375, CLAN_SIN_CONQUISTAR },
{304.71875, -1827.234375, 374.71875, -1765.234375, CLAN_SIN_CONQUISTAR },
{-125.1, -1615.49609375, -25.1, -1515.49609375, CLAN_SIN_CONQUISTAR },
{2667.94921875, -2501.453125, 2767.94921875, -2401.453125, CLAN_SIN_CONQUISTAR },
{2471.99609375, -2683.49609375, 2532.99609375, -2635.49609375, CLAN_SIN_CONQUISTAR },
{2014.98046875, -2887.4921875, 2082.98046875, -2824.4921875, CLAN_SIN_CONQUISTAR },
{1865.98046875, -2886.4921875, 1933.98046875, -2823.4921875, CLAN_SIN_CONQUISTAR },
{1694.9921875, -2884.484375, 1776.9921875, -2821.484375, CLAN_SIN_CONQUISTAR },
{1520.1, -2847.49609375, 1597.1, -2793.49609375, CLAN_SIN_CONQUISTAR },
{1548.1, -2980.49609375, 1648.1, -2880.49609375, CLAN_SIN_CONQUISTAR },
{2203.9921875, -2953.49609375, 2243.9921875, -2913.49609375, CLAN_SIN_CONQUISTAR },
{2185.1, -2864.49609375, 2285.1, -2764.49609375, CLAN_SIN_CONQUISTAR },
{1880.75, -1108.49609375, 1942.75, -1048.49609375, CLAN_SIN_CONQUISTAR },
{1977.75, -1140.49609375, 2036.75, -1065.49609375, CLAN_SIN_CONQUISTAR },
{1384.75, -933.49609375, 1463.75, -869.49609375, CLAN_SIN_CONQUISTAR },
{1211.75, -845.49609375, 1311.75, -745.49609375, CLAN_SIN_CONQUISTAR },
{1083.75, -1389.49609375, 1183.75, -1289.49609375, CLAN_SIN_CONQUISTAR },
{1485.75, -1403.49609375, 1585.75, -1303.49609375, CLAN_SIN_CONQUISTAR },
{1429.75, -1712.49609375, 1529.75, -1612.49609375, CLAN_SIN_CONQUISTAR },
{1175.25, -1691.49609375, 1275.25, -1591.49609375, CLAN_SIN_CONQUISTAR },
{1745.24609375, -1939.48046875, 1810.24609375, -1878.48046875, CLAN_SIN_CONQUISTAR },
{1824.1, -2150.24609375, 1924.1, -2050.24609375, CLAN_SIN_CONQUISTAR },
{2919.99609375, -2292.22265625, 2985.99609375, -2231.22265625, CLAN_SIN_CONQUISTAR },
{2799.75, -2916.24609375, 2899.75, -2816.24609375, CLAN_SIN_CONQUISTAR },
{163.75, -2726.24609375, 263.75, -2626.24609375, CLAN_SIN_CONQUISTAR },
{212.75, -2466.24609375, 312.75, -2366.24609375, CLAN_SIN_CONQUISTAR },
{433.75, -2628.24609375, 533.75, -2528.24609375, CLAN_SIN_CONQUISTAR },
{460.75, -2428.24609375, 560.75, -2328.24609375, CLAN_SIN_CONQUISTAR },
{616.75, -2518.24609375, 716.75, -2418.24609375, CLAN_SIN_CONQUISTAR },
{686.75, -2364.24609375, 786.75, -2264.24609375, CLAN_SIN_CONQUISTAR },
{615.75, -2746.24609375, 715.75, -2646.24609375, CLAN_SIN_CONQUISTAR },
{782.75, -2627.24609375, 882.75, -2527.24609375, CLAN_SIN_CONQUISTAR },
{266.75, -2297.24609375, 366.75, -2197.24609375, CLAN_SIN_CONQUISTAR },
{490.75, -2248.24609375, 590.75, -2148.24609375, CLAN_SIN_CONQUISTAR },
{845.7421875, -2456.234375, 935.7421875, -2384.234375, CLAN_SIN_CONQUISTAR },
{919.75, -2615.24609375, 1019.75, -2515.24609375, CLAN_SIN_CONQUISTAR },
{798.75, -2994.23046875, 871.75, -2928.23046875, CLAN_SIN_CONQUISTAR },
{396.75, -2881.24609375, 496.75, -2781.24609375, CLAN_SIN_CONQUISTAR },
{39.75, -2180.24609375, 94.75, -2115.24609375, CLAN_SIN_CONQUISTAR },
{19.75, -2353.24609375, 119.75, -2253.24609375, CLAN_SIN_CONQUISTAR },
{-108.2578125, -2038.24609375, -8.2578125, -1938.24609375, CLAN_SIN_CONQUISTAR },
{-280.25, -1808.24609375, -180.25, -1708.24609375, CLAN_SIN_CONQUISTAR },
{2114.25, -1652.24609375, 2214.25, -1552.24609375, CLAN_SIN_CONQUISTAR },
{2556.25, -1362.24609375, 2656.25, -1262.24609375, CLAN_SIN_CONQUISTAR },
{2776.75, -1429.22265625, 2831.75, -1374.22265625, CLAN_SIN_CONQUISTAR },
{2404.74609375, -1026.2421875, 2504.74609375, -983.2421875, CLAN_SIN_CONQUISTAR },
{2532.74609375, -1054.23828125, 2579.74609375, -1011.23828125, CLAN_SIN_CONQUISTAR },
{2073.7421875, -1383.49609375, 2173.7421875, -1283.49609375, CLAN_SIN_CONQUISTAR },
{2309.75, -1377.49609375, 2452.75, -1166.49609375, CLAN_SIN_CONQUISTAR },
{2712.75, -2143.49609375, 2812.75, -2043.49609375, CLAN_SIN_CONQUISTAR },
{2932.73828125, -1771.21875, 2987.73828125, -1716.21875, CLAN_SIN_CONQUISTAR },
{2933.734375, -1988.2109375, 2988.734375, -1933.2109375, CLAN_SIN_CONQUISTAR },
{2922.73046875, -2139.203125, 2977.73046875, -2084.203125, CLAN_SIN_CONQUISTAR },
{2929.73828125, -1220.21875, 2984.73828125, -1165.21875, CLAN_SIN_CONQUISTAR },
{2936.7265625, -1435.21484375, 2991.7265625, -1380.21484375, CLAN_SIN_CONQUISTAR },
{2923.71875, -1615.21484375, 2978.71875, -1560.21484375, CLAN_SIN_CONQUISTAR },
{-118.75, -1202.24609375, -18.75, -1102.24609375, CLAN_SIN_CONQUISTAR },
{-434.5, -1015.23046875, -364.5, -926.23046875, CLAN_SIN_CONQUISTAR },
{-435.5, -1482.24609375, -335.5, -1382.24609375, CLAN_SIN_CONQUISTAR },
{-601.5, -1521.24609375, -552.5, -1459.24609375, CLAN_SIN_CONQUISTAR },
{-683.5, -2022.99609375, -583.5, -1922.99609375, CLAN_SIN_CONQUISTAR },
{-1051.5, -2188.99609375, -808.5, -1990.99609375, CLAN_SIN_CONQUISTAR },
{-1269.5234375, -2377.98046875, -1179.5234375, -2277.98046875, CLAN_SIN_CONQUISTAR },
{-688.53125, -2954.96875, -598.53125, -2854.96875, CLAN_SIN_CONQUISTAR },
{-1295.55859375, -1950.93359375, -1250.55859375, -1915.93359375, CLAN_SIN_CONQUISTAR },
{-1323.56640625, -1864.91796875, -1278.56640625, -1829.91796875, CLAN_SIN_CONQUISTAR },
{311.1, -1552.74609375, 411.1, -1452.74609375, CLAN_SIN_CONQUISTAR },
{180.1, -1259.74609375, 280.1, -1159.74609375, CLAN_SIN_CONQUISTAR },
{437.9921875, -1167.734375, 537.9921875, -1067.734375, CLAN_SIN_CONQUISTAR },
{670.1, -1073.74609375, 770.1, -973.74609375, CLAN_SIN_CONQUISTAR },
{732.75, -532.98828125, 792.75, -481.98828125, CLAN_SIN_CONQUISTAR },
{585.5, -599.74609375, 650.5, -524.74609375, CLAN_SIN_CONQUISTAR },
{706.484375, -611.73828125, 795.484375, -548.73828125, CLAN_SIN_CONQUISTAR },
{-2212.25, -2324.49609375, -2112.25, -2224.49609375, CLAN_SIN_CONQUISTAR },
{-2279.265625, -2509.4921875, -2179.265625, -2409.4921875, CLAN_SIN_CONQUISTAR },
{-2102.27734375, -2575.4921875, -2002.27734375, -2475.4921875, CLAN_SIN_CONQUISTAR },
{-2847.29296875, -2640.4765625, -2622.29296875, -2234.4765625, CLAN_SIN_CONQUISTAR },
{-2161.1, -1600.49609375, -2061.1, -1500.49609375, CLAN_SIN_CONQUISTAR },
{-2238.015625, -1818.48828125, -2138.015625, -1718.48828125, CLAN_SIN_CONQUISTAR },
{-1908.02734375, -1682.4765625, -1808.02734375, -1582.4765625, CLAN_SIN_CONQUISTAR },
{-1692.04296875, -2262.4609375, -1592.04296875, -2162.4609375, CLAN_SIN_CONQUISTAR },
{-2873.06640625, -1667.4609375, -2773.06640625, -1567.4609375, CLAN_SIN_CONQUISTAR },
{-2883.06640625, -1499.4609375, -2783.06640625, -1399.4609375, CLAN_SIN_CONQUISTAR },
{-2858.06640625, -1357.453125, -2758.06640625, -1257.453125, CLAN_SIN_CONQUISTAR },
{-2120.06640625, -986.44140625, -1936.06640625, -722.44140625, CLAN_SIN_CONQUISTAR },
{-2574.1, -693.74609375, -2474.1, -593.74609375, CLAN_SIN_CONQUISTAR },
{-2440.00390625, -638.73046875, -2340.00390625, -538.73046875, CLAN_SIN_CONQUISTAR },
{-2811.03515625, 44.28515625, -2711.03515625, 144.28515625, CLAN_SIN_CONQUISTAR },
{-2701.046875, 45.28515625, -2601.046875, 145.28515625, CLAN_SIN_CONQUISTAR },
{-2798.046875, -401.71484375, -2698.046875, -301.71484375, CLAN_SIN_CONQUISTAR },
{-2124.03515625, -260.703125, -2024.03515625, -160.703125, CLAN_SIN_CONQUISTAR },
{-2380.04296875, 93.296875, -2280.04296875, 193.296875, CLAN_SIN_CONQUISTAR },
{-2767.05859375, 318.30078125, -2667.05859375, 418.30078125, CLAN_SIN_CONQUISTAR },
{-2008.0703125, 224.30078125, -1908.0703125, 324.30078125, CLAN_SIN_CONQUISTAR },
{-1993.09375, 415.32421875, -1860.09375, 561.32421875, CLAN_SIN_CONQUISTAR },
{-1904.140625, 343.35546875, -1787.140625, 369.35546875, CLAN_SIN_CONQUISTAR },
{-2467.125, 619.33203125, -2443.125, 645.33203125, CLAN_SIN_CONQUISTAR },
{-2056.125, 633.33203125, -2032.125, 659.33203125, CLAN_SIN_CONQUISTAR },
{-2731.1, 856.50390625, -2631.1, 956.50390625, CLAN_SIN_CONQUISTAR },
{-2129.1, 857.50390625, -2029.1, 957.50390625, CLAN_SIN_CONQUISTAR },
{-1855.00390625, 1011.515625, -1755.00390625, 1111.515625, CLAN_SIN_CONQUISTAR },
{-2523.1, 1049.50390625, -2423.1, 1149.50390625, CLAN_SIN_CONQUISTAR },
{-2225.1, 1153.50390625, -2125.1, 1253.50390625, CLAN_SIN_CONQUISTAR },
{-1586.1, 1132.50390625, -1486.1, 1232.50390625, CLAN_SIN_CONQUISTAR },
{-1518.1, 875.5078125, -1418.1, 975.5078125, CLAN_SIN_CONQUISTAR },
{-2457.1, 1496.50390625, -2357.1, 1596.50390625, CLAN_SIN_CONQUISTAR },
{-2600.1, 2914.00390625, -2542.1, 2947.00390625, CLAN_SIN_CONQUISTAR },
{-2889.1, 2891.0078125, -2861.1, 2911.0078125, CLAN_SIN_CONQUISTAR },
{-2940.00390625, 2852.015625, -2912.00390625, 2872.015625, CLAN_SIN_CONQUISTAR },
{-2960.01953125, 2784.03125, -2932.01953125, 2804.03125, CLAN_SIN_CONQUISTAR },
{-2980.01953125, 2734.04296875, -2952.01953125, 2754.04296875, CLAN_SIN_CONQUISTAR },
{-2936.01953125, 2627.04296875, -2908.01953125, 2647.04296875, CLAN_SIN_CONQUISTAR },
{-2941.03515625, 2560.05078125, -2913.03515625, 2580.05078125, CLAN_SIN_CONQUISTAR },
{-2912.03515625, 2592.05859375, -2884.03515625, 2612.05859375, CLAN_SIN_CONQUISTAR },
{-2612.0625, 2065.0859375, -2584.0625, 2090.0859375, CLAN_SIN_CONQUISTAR },
{-2919.05078125, 2088.0703125, -2891.05078125, 2108.0703125, CLAN_SIN_CONQUISTAR },
{-2310.0859375, 1814.10546875, -2141.0859375, 2036.10546875, CLAN_SIN_CONQUISTAR },
{-1843.10546875, 1416.125, -1719.10546875, 1553.125, CLAN_SIN_CONQUISTAR },
{-1507.1171875, 1347.1328125, -1453.1171875, 1399.1328125, CLAN_SIN_CONQUISTAR },
{-1493.1, 1468.00390625, -1353.1, 1513.00390625, CLAN_SIN_CONQUISTAR },
{-1156.5, -777.49609375, -955.5, -571.49609375, CLAN_SIN_CONQUISTAR },
{-595.5, -566.49609375, -495.5, -466.49609375, CLAN_SIN_CONQUISTAR },
{72.25, -107.74609375, 172.25, -7.74609375, CLAN_SIN_CONQUISTAR },
{-64.75390625, -352.734375, 35.24609375, -252.734375, CLAN_SIN_CONQUISTAR },
{151.234375, -300.734375, 251.234375, -200.734375, CLAN_SIN_CONQUISTAR },
{-620.5, -124.49609375, -520.5, -24.49609375, CLAN_SIN_CONQUISTAR },
{-510.50390625, -236.484375, -410.50390625, -136.484375, CLAN_SIN_CONQUISTAR },
{1250.25, 243.25390625, 1350.25, 343.25390625, CLAN_SIN_CONQUISTAR },
{685.7421875, 235.5078125, 785.7421875, 335.5078125, CLAN_SIN_CONQUISTAR },
{1902.75, 162.50390625, 2002.75, 262.50390625, CLAN_SIN_CONQUISTAR },
{1429.75, 699.75390625, 1529.75, 799.75390625, CLAN_SIN_CONQUISTAR },
{1612.75, 941.75390625, 1712.75, 1041.75390625, CLAN_SIN_CONQUISTAR },
{1637.75, 670.75390625, 1737.75, 770.75390625, CLAN_SIN_CONQUISTAR },
{958.73828125, 961.76171875, 1198.73828125, 1170.76171875, CLAN_SIN_CONQUISTAR },
{59.74609375, 1411.7578125, 159.74609375, 1511.7578125, CLAN_SIN_CONQUISTAR },
{552.75, 1622.75390625, 652.75, 1722.75390625, CLAN_SIN_CONQUISTAR },
{544.75, 1194.75390625, 644.75, 1294.75390625, CLAN_SIN_CONQUISTAR },
{-438.01953125, 1359.76171875, -203.01953125, 1671.76171875, CLAN_SIN_CONQUISTAR },
{94.98046875, 1780.7734375, 344.98046875, 1953.7734375, CLAN_SIN_CONQUISTAR },
{-451.01171875, 2187.76171875, -351.01171875, 2287.76171875, CLAN_SIN_CONQUISTAR },
{181.9921875, 2421.76171875, 442.9921875, 2596.76171875, CLAN_SIN_CONQUISTAR },
{-310.1, 2700.01953125, -233.1, 2800.01953125, CLAN_SIN_CONQUISTAR },
{-300.1, 2588.00390625, -200.1, 2688.00390625, CLAN_SIN_CONQUISTAR },
{-604.015625, 2549.01953125, -504.015625, 2649.01953125, CLAN_SIN_CONQUISTAR },
{-919.1, 2724.00390625, -712.1, 2806.00390625, CLAN_SIN_CONQUISTAR },
{-1127.01171875, 2972.1, -1014.01171875, 3000.1, CLAN_SIN_CONQUISTAR },
{-967.01171875, 2969.1, -854.01171875, 2997.1, CLAN_SIN_CONQUISTAR },
{-769.01171875, 2972.1, -656.01171875, 3000.1, CLAN_SIN_CONQUISTAR },
{-153.0234375, 2969.1, -40.0234375, 2997.1, CLAN_SIN_CONQUISTAR },
{370.97265625, 2959.01171875, 483.97265625, 2987.01171875, CLAN_SIN_CONQUISTAR },
{892.75, 2294.25390625, 992.75, 2394.25390625, CLAN_SIN_CONQUISTAR },
{1190.7421875, 1808.265625, 1238.7421875, 2056.265625, CLAN_SIN_CONQUISTAR },
{874.75, 2070.25390625, 974.75, 2170.25390625, CLAN_SIN_CONQUISTAR },
{1083.75, 2135.25, 1183.75, 2235.25, CLAN_SIN_CONQUISTAR },
{1908.5, 2657.00390625, 2008.5, 2757.00390625, CLAN_SIN_CONQUISTAR },
{2545.48046875, 1850.0078125, 2645.48046875, 1950.0078125, CLAN_SIN_CONQUISTAR },
{2383.73046875, 1220.01953125, 2483.73046875, 1320.01953125, CLAN_SIN_CONQUISTAR },
{2058.75, 1369.5, 2158.75, 1469.5, CLAN_SIN_CONQUISTAR },
{2062.75, 955.25390625, 2357.75, 1200.25390625, CLAN_SIN_CONQUISTAR },
{2306.75, -699.49609375, 2406.75, -599.49609375, CLAN_SIN_CONQUISTAR }

};
new ZoneID[sizeof(ZoneInfo)];
#define TAKEOVER_TIME 80 // tiempo nescesario en la zona
#define MIN_MEMBERS_TO_START_WAR 1 // min para conquistar una zona

new Clans[] = {
    CLAN_SD,
    CLAN_SWO,
	CLAN_GOD,
    CLAN_SIN_CLAN,
    CLAN_SIN_CONQUISTAR
};


#define HOLDING(%0) ((newkeys & (%0)) == (%0))
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

//Configuration (YOU MAY EDIT THIS SECTION)
#define MAX_ZOMBIES 1//Maximum amount of zombies to spawn. (Default: 25)

//#define ZOMBIE_SKIN 162//Zombie skin id. (Default: 162)
#define ZOMBIE_COLOUR 0xFFFFFF00//Zombie colour. (Default: Red)
#define ZOMBIE_DAMAGE 1//Zombie damage. (Default: 20)
#define ZOMBIE_DETECT 40//Zombie detection range. (Default: 25)
new Zinc_RandSkinZombie[]=
{
	78,79,132,134,135,136,137,159,160,
	162,168,196,200,209,212,213,218,230,
	239,264
};



#define TEAM_HUMANOS 0
#define TEAM_ZOMBIES 2
#define TEAM_LEGION 3
#define TEAM_CENTINELAS 4
#define MAX_BODIES 500

//DO NOT EDIT BELOW THIS LINE!!!
#define MAX_MOVEMENT 6
#define MAX_ROAM 10

#define RUNNER_ZOMBIE 0
#define SPRINTER_ZOMBIE 1
#define WALK_ZOMBIE 2

forward OnZombieCreate();
forward OnZombieUpdate();

forward ResetDetectRange(playerid);
forward ResetZombieKill(playerid);

forward RemoveZombieBody(npcid);

forward RemoveDeadBody(npcid);

new Float:ZombieSpawns[][4] =
{
	//LS
	{793.1649, -1845.7291, 7.2300},
	{1057.3574, -1278.8195, 13.5498}, 
	{921.9029, -1104.4760, 23.7633},
	{1351.5192, -1283.8026, 12.3604}, 
	{1202.3400, -1564.2152, 12.5289}, 
	{2807.9282,-1176.8883,25.3805,173.6018}, // North in east beach - near apartments
	{2552.5417,-958.0850,82.6345,280.2542}, // Random house north of Las Colinas
	{2232.1309,-1159.5679,25.8906,103.2939}, // Jefferson motel
	{2388.1003,-1279.8933,25.1291,94.3321}, // House south of pig pen
	{2481.1885,-1536.7186,24.1467,273.4944}, // East LS - near clucking bell and car wash
	{2495.0720,-1687.5278,13.5150,359.6696}, // Outside CJ's house - lots of cars nearby
	{2306.8252,-1675.4340,13.9221,2.6271}, // House in ganton - lots of cars nearby
	{2191.8403,-1455.8251,25.5391,267.9925}, // House in south jefferson - lots of cars nearby
	{1830.1359,-1092.1849,23.8656,94.0113}, // Mulholland intersection carpark
	{2015.3630,-1717.2535,13.5547,93.3655}, // Idlewood house
	{1654.7091,-1656.8516,22.5156,177.9729}, // Right next to PD
	{1127.6726,-2037.4873,69.8059,271.5750}, // Conference Center
	{1508.6849,-1059.0846,25.0625,1.8058}, // Across the street of BANK - lots of cars in intersection carpark
	{1421.0819,-885.3383,50.6531,3.6516}, // Outside house in vinewood
	{1133.8237,-1272.1558,13.5469,192.4113}, // Near hospital
	{1235.2196,-1608.6111,13.5469,181.2655}, // Backalley west of mainstreet
	{590.4648,-1252.2269,18.2116,25.0473}, // Outside "BAnk of San Andreas"
	{842.5260,-1007.7679,28.4185,213.9953}, // North of Graveyard
	{911.9332,-1232.6490,16.9766,5.2999}, // LS Film Studio
	{477.6021,-1496.6207,20.4345,266.9252}, // Rodeo Place
	{255.4621,-1366.3256,53.1094,312.0852}, // Outside propery in richman
	{281.5446,-1261.4562,73.9319,305.0017}, // Another richman property
	{790.1918,-839.8533,60.6328,191.9514}, // Mulholland house
	{1299.1859,-801.4249,84.1406,269.5274}, // Maddoggs
	{1240.3170,-2036.6886,59.9575,276.4659}, // Verdant Bluffs
	{2215.5181,-2627.8174,13.5469,273.7786}, // Ocean docks 1
	{2509.4346,-2637.6543,13.6453,358.3565}, // Ocean Docks spawn 2*/
{1146.9098,-1266.9692,13.7205}, //
{1193.1113,-1203.9023,19.5846}, //

{1270.3960,-1285.1410,13.3533}, //
{1287.1229,-1278.0302,13.8038}, //
{1358.5311,-1320.9355,13.3906}, //

{1591.5355,-1669.3927,5.8823}, //
{1609.5145,-1679.3682,6.2188}, //
{1590.9706,-1591.6372,13.3828}, //
{1643.0918,-1539.6516,13.5712}, //
{1655.2252,-1489.3582,13.3828}, //
{1644.3336,-1454.9043,13.5469}, //
{1654.5082,-1399.7567,13.5469}, //
{1607.9657,-1380.4758,14.6297}, //
{1597.5093,-1369.1653,15.6684}, //
{1515.9596,-1385.1187,14.0409}, //
{1511.8297,-1339.0912,13.9172}, //
{1537.3629,-1262.7216,17.4090}, //
{1520.7893,-1212.5328,21.0859}, //
{1522.5737,-1166.1783,24.0781}, //
{1569.8494,-1162.8485,24.4268}, //
{1550.5402,-1163.4701,24.4411}, //
{1639.5319,-1065.1542,23.8984}, //
{1620.8530,-1028.6147,23.8984}, //
{1669.4928,-997.0919,24.0573}, //
{1741.0894,-1100.1422,24.0781}, //
{1784.2571,-1117.8373,24.0859},
{1796.1573,-1155.8900,28.8516}, //
{1717.7388,-1177.5123,23.6573}, //
{1688.2422,-1256.3334,14.8066}, //


//{2706.3762,-2065.3464,13.0582},


//{2718.7896,-2098.5056,11.1306},
//{2733.0708,-2053.0667,13.0502},
{2779.4109,-2048.0142,11.8562},
{2787.7007,-2073.0686,12.7935},
{2818.5752,-2085.6533,10.9297},
{2784.8674,-2021.0653,13.5620},

{2640.0459,-1750.7137,10.7215},
{2641.1604,-1724.4955,10.7335},
{2606.1897,-1728.5183,12.3855},
{2578.0232,-1737.4646,13.5469},
{2546.9651,-1724.2981,13.5469},
{2526.6406,-1743.4406,13.3828},
{2510.5513,-1683.8292,13.5300},
{2490.1316,-1683.4152,13.3364},
{2479.0588,-1676.5599,13.3368},
{2490.8188,-1667.8350,13.3438},
{2499.0247,-1656.0688,13.3966},
{2480.1423,-1652.5204,13.4688},

//{2378.6787,-1646.1216,13.5328},
{2387.8022,-1684.2761,15.4874},
{2394.6218,-1673.5491,14.7596},
{2365.2834,-1646.4233,13.5469},
{2358.3843,-1643.7465,14.9611},
{2347.8286,-1639.6830,14.8296},
{2340.8667,-1602.0516,17.3535},
{2346.6670,-1586.4834,21.5012},
{2341.4275,-1559.2070,23.8516},
{2349.6055,-1479.9714,24.0000},
{2330.0190,-1439.7424,24.0000},
{2347.6602,-1403.7103,23.9903} //

 //






};


enum server_data
{
	server_zombies,
	server_zombietimer
};
new DataServer[server_data];

enum zombie_data
{
	zombie_species,
	zombie_victim,
	zombie_roam,
	zombie_movement
};
new ZombieData[MAX_ZOMBIES][zombie_data];

enum victim_data
{
	victim_detect,
	victim_timer,
	victim_status,
	victim_kill
};
new VictimData[MAX_PLAYERS][victim_data];

enum body_data
{
	body_id,
	body_model,
	Float:body_x,
	Float:body_y,
	Float:body_z,
	Float:body_r,
	Float:body_dist,
	Float:body_angle,
	body_world,
	body_timer,
	bool:body_active
}

new DeadBodyData[MAX_BODIES][body_data];




new ZoneAttacker[sizeof(ZoneInfo)] = {-1, ...};
new ZoneAttackTime[sizeof(ZoneInfo)];
new ZoneCaptureTime[sizeof(ZoneInfo)];
///////////////////////////////////




ShowMenuLogin(playerid)
{
  //  ClearChatbox(playerid);
    PlayerTextDrawShow(playerid, Login0[playerid]);
	PlayerTextDrawShow(playerid, Login1[playerid]);
	PlayerTextDrawShow(playerid, Login2[playerid]);
	//PlayerTextDrawShow(playerid, Login3[playerid]);
	PlayerTextDrawShow(playerid, Login4[playerid]);
	PlayerTextDrawShow(playerid, Login5[playerid]);
	return 1;
}

HideMenuLogin(playerid)
{
    PlayerTextDrawHide(playerid, Login0[playerid]);
    PlayerTextDrawHide(playerid, Login1[playerid]);
    PlayerTextDrawHide(playerid, Login2[playerid]);
   // PlayerTextDrawHide(playerid, Login3[playerid]);
    PlayerTextDrawHide(playerid, Login4[playerid]);
    PlayerTextDrawHide(playerid, Login5[playerid]);
	return 1;
}


//==============================================================================
	main()
	{
	print("    GAMEMODE DESDE 0 PROGRAMADA POR	");
	print("            		Pac0               ");
	print("        LAdmin () SISTEMA ADMIN POR    ");
	print("      Lethal / Modificado por Pac0   ");
	}
//==============================================================================

new legalmods[48][22] = {
        {400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
        {404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
        {491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
        {492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
        {500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
        {517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
        {518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
        {527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
        {534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
        {535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
        {536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
        {540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
        {542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
        {547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
        {550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
        {551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
        {558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
        {559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
        {560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
        {561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
        {562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
        {565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
        {567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
        {575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
        {600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
    };

//==============================================================================



/*public OnRNPCDeath(npcid, killerid, reason)
{
	
    ELOY9N_GivePlayerMoney(killerid,100);
    GameTextForPlayer(killerid, "~g~+1 ~w~score ~n~~g~+$100", 4000, 4);
	SetPlayerScore(killerid, GetPlayerScore(killerid) + 1);
}*/


public OnGameModeInit()
{
	DisableInteriorEnterExits();
	Pac0AnTidEamx20();
	UsePlayerPedAnims();
	
    new playersConnected = GetPlayerPoolSize(); // Almacenamos la cantidad de jugadores conectados
    new botActivity[64]; // Creamos una variable para almacenar la cadena final
    
    format(botActivity, sizeof(botActivity), "War Blood - Jugadores: %d", playersConnected); // Formateamos la cadena con el número de jugadores conectados
    



   for(new i = 0; i < MAX_ZOMBIES; i++)
	{
	    ZombieData[i][zombie_species] = RUNNER_ZOMBIE;
	    ZombieData[i][zombie_victim] = INVALID_PLAYER_ID;
	    ZombieData[i][zombie_movement] = 0;
	}

	DataServer[server_zombies] = 0;
	DataServer[server_zombietimer] = SetTimer("OnZombieCreate", 80, true);//Just incase, as some servers require you to do this.

	SetTimer("OnZombieUpdate", 1000, true);





    g_probVerde_infinity = 1;
    g_probMismoColor_infinity = 18;	
    g_probVerde_deluxe = 1;
    g_probMismoColor_deluxe = 18;	

    g_probVerde_normal = 1;
    g_probMismoColor_normal = 18;			
    SetTimer("ZoneTimer", 1000, true);
    SetTimer("RandomMsg", 1020000, 1);//<---- 12500 is not 69.4444 Hours, it's 250 seconds
	SetTimer("ReseteoZonas", 10200000, 1);
//	SetTimer("BorrarCajasTimer", 9000, true);

    ShowNameTags(1);
    SetTimer("toNothing", 60000, true);
	SetTimer("oneSecond", 999, true);

	if(!fexist("ladmin/"))
	{
	    print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin");
		return 1;
	}
	if(!fexist("ladmin/logs/"))
	{
	    print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/logs");
		return 1;
	}
	if(!fexist("ladmin/config/"))
	{
	    print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/config");
		return 1;
	}
	if(!fexist("ladmin/users/"))
	{
	    print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/users");
		return 1;
	}
	
	UpdateConfig();
	VariablesServer();
	

	#if defined DISPLAY_CONFIG
	ConfigInConsole();
	#endif
	
//===================== [ The Menus ]===========================//
	#if defined USE_MENUS

	LMainMenu = CreateMenu("Main Menu", 2,  55.0, 200.0, 100.0, 80.0); 
	SetMenuColumnHeader(LMainMenu, 0, "Choose an option below");
	AddMenuItem(LMainMenu, 0, "Enable");
	AddMenuItem(LMainMenu, 0, "Disable");
    AddMenuItem(LMainMenu, 0, "Server Weather");
    AddMenuItem(LMainMenu, 0, "Server Time");
 	AddMenuItem(LMainMenu, 0, "All Vehicles");
	AddMenuItem(LMainMenu, 0, "Admin Cars");
	AddMenuItem(LMainMenu, 0, "Tuning Menu");
	AddMenuItem(LMainMenu, 0, "Choose Weapon");
	AddMenuItem(LMainMenu, 0, "Teleports");
	AddMenuItem(LMainMenu, 0, "Exit Menu");//

	AdminEnable = CreateMenu("~b~Configuration ~g~ Menu",2, 55.0, 200.0, 150.0, 80.0);
	SetMenuColumnHeader(AdminEnable, 0, "Enable");
	AddMenuItem(AdminEnable, 0, "Anti Swear");
	AddMenuItem(AdminEnable, 0, "Bad Name Kick");
	AddMenuItem(AdminEnable, 0, "Anti Spam");
	AddMenuItem(AdminEnable, 0, "Ping Kick");
	AddMenuItem(AdminEnable, 0, "Read Cmds");
	AddMenuItem(AdminEnable, 0, "Read PMs");
	AddMenuItem(AdminEnable, 0, "Capital Letters");
	AddMenuItem(AdminEnable, 0, "ConnectMessages");
	AddMenuItem(AdminEnable, 0, "AdminCmdMessages");
	AddMenuItem(AdminEnable, 0, "Auto Login");
	AddMenuItem(AdminEnable, 0, "Return");

	AdminDisable = CreateMenu("~b~Configuration ~g~ Menu",2, 55.0, 200.0, 150.0, 80.0);
	SetMenuColumnHeader(AdminDisable, 0, "Disable");
	AddMenuItem(AdminDisable, 0, "Anti Swear");
	AddMenuItem(AdminDisable, 0, "Bad Name Kick");
	AddMenuItem(AdminDisable, 0, "Anti Spam");
	AddMenuItem(AdminDisable, 0, "Ping Kick");
	AddMenuItem(AdminDisable, 0, "Read Cmds");
	AddMenuItem(AdminDisable, 0, "Read PMs");
	AddMenuItem(AdminDisable, 0, "Capital Letters");
	AddMenuItem(AdminDisable, 0, "ConnectMessages");
	AddMenuItem(AdminDisable, 0, "AdminCmdMessages");
	AddMenuItem(AdminDisable, 0, "Auto Login");
	AddMenuItem(AdminDisable, 0, "Return");
	
	LWeather = CreateMenu("~b~Weather ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0); 
	SetMenuColumnHeader(LWeather, 0, "Set Weather");
	AddMenuItem(LWeather, 0, "Clear Blue Sky");
	AddMenuItem(LWeather, 0, "Sand Storm");
	AddMenuItem(LWeather, 0, "Thunderstorm");
	AddMenuItem(LWeather, 0, "Foggy");
	AddMenuItem(LWeather, 0, "Cloudy");
	AddMenuItem(LWeather, 0, "High Tide");
	AddMenuItem(LWeather, 0, "Purple Sky");
	AddMenuItem(LWeather, 0, "Black/White Sky");
	AddMenuItem(LWeather, 0, "Dark, Green Sky");
	AddMenuItem(LWeather, 0, "Heatwave");
	AddMenuItem(LWeather,0,"Return");

	LTime = CreateMenu("~b~Time ~g~ Menu", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LTime, 0, "Set Time");
	AddMenuItem(LTime, 0, "Morning");
	AddMenuItem(LTime, 0, "Mid day");
	AddMenuItem(LTime, 0, "Afternoon");
	AddMenuItem(LTime, 0, "Evening");
	AddMenuItem(LTime, 0, "Midnight");
    AddMenuItem(LTime, 0, "Return");

	LCars = CreateMenu("~b~LethaL ~g~Cars", 2,  55.0, 150.0, 100.0, 80.0);
	SetMenuColumnHeader(LCars, 0, "Choose a car");
	AddMenuItem(LCars, 0, "Turismo");
	AddMenuItem(LCars, 0, "Bandito");
	AddMenuItem(LCars, 0, "Vortex");
	AddMenuItem(LCars, 0, "NRG");
	AddMenuItem(LCars, 0, "S.W.A.T");
    AddMenuItem(LCars, 0, "Hunter");
    AddMenuItem(LCars, 0, "Jetmax (boat)");
    AddMenuItem(LCars, 0, "Rhino");
    AddMenuItem(LCars, 0, "Monster Truck");
    AddMenuItem(LCars, 0, "Sea Sparrow");
    AddMenuItem(LCars, 0, "More");
	AddMenuItem(LCars, 0, "Return");

	LCars2 = CreateMenu("~b~LethaL ~g~Cars", 2,  55.0, 150.0, 100.0, 80.0);
	SetMenuColumnHeader(LCars2, 0, "Choose a car");
	AddMenuItem(LCars2, 0, "Dumper");
    AddMenuItem(LCars2, 0, "RC Tank");
    AddMenuItem(LCars2, 0, "RC Bandit");
    AddMenuItem(LCars2, 0, "RC Baron");
    AddMenuItem(LCars2, 0, "RC Goblin");
    AddMenuItem(LCars2, 0, "RC Raider");
    AddMenuItem(LCars2, 0, "RC Cam");
    AddMenuItem(LCars2, 0, "Tram");
	AddMenuItem(LCars2, 0, "Return");
	
	LTuneMenu = CreateMenu("~b~Tuning ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LTuneMenu, 0, "Add to car");
	AddMenuItem(LTuneMenu,0,"NOS");
	AddMenuItem(LTuneMenu,0,"Hydraulics");
	AddMenuItem(LTuneMenu,0,"Wire Wheels");
	AddMenuItem(LTuneMenu,0,"Twist Wheels");
	AddMenuItem(LTuneMenu,0,"Access Wheels");
	AddMenuItem(LTuneMenu,0,"Mega Wheels");
	AddMenuItem(LTuneMenu,0,"Import Wheels");
	AddMenuItem(LTuneMenu,0,"Atomic Wheels");
	AddMenuItem(LTuneMenu,0,"Offroad Wheels");
	AddMenuItem(LTuneMenu,0,"Classic Wheels");
	AddMenuItem(LTuneMenu,0,"Paint Jobs");
	AddMenuItem(LTuneMenu,0,"Return");
	
	PaintMenu = CreateMenu("~b~Paint Job ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(PaintMenu, 0, "Choose paint");
	AddMenuItem(PaintMenu,0,"Paint Job 1");
	AddMenuItem(PaintMenu,0,"Paint Job 2");
	AddMenuItem(PaintMenu,0,"Paint Job 3");
	AddMenuItem(PaintMenu,0,"Paint Job 4");
	AddMenuItem(PaintMenu,0,"Paint Job 5");
	AddMenuItem(PaintMenu,0,"Black");
	AddMenuItem(PaintMenu,0,"White");
	AddMenuItem(PaintMenu,0,"Blue");
	AddMenuItem(PaintMenu,0,"Pink");
	AddMenuItem(PaintMenu,0,"Return");
	
	LVehicles = CreateMenu("~b~Vehicles ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LVehicles, 0, "Choose a car");
	AddMenuItem(LVehicles,0,"2-door Cars");
	AddMenuItem(LVehicles,0,"4-door Cars");
	AddMenuItem(LVehicles,0,"Fast Cars");
	AddMenuItem(LVehicles,0,"Other Vehicles");
	AddMenuItem(LVehicles,0,"Bikes");
	AddMenuItem(LVehicles,0,"Boats");
	AddMenuItem(LVehicles,0,"Planes");
	AddMenuItem(LVehicles,0,"Helicopters");
	AddMenuItem(LVehicles,0,"Return");

 	twodoor = CreateMenu("~b~2-door Cars",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(twodoor, 0, "Choose a car");
	AddMenuItem(twodoor,0,"Feltzer");//533
	AddMenuItem(twodoor,0,"Stallion");//139
	AddMenuItem(twodoor,0,"Windsor");//555
	AddMenuItem(twodoor,0,"Bobcat");//422
	AddMenuItem(twodoor,0,"Yosemite");//554
	AddMenuItem(twodoor,0,"Broadway");//575
	AddMenuItem(twodoor,0,"Blade");//536
	AddMenuItem(twodoor,0,"Slamvan");//535
	AddMenuItem(twodoor,0,"Tornado");//576
	AddMenuItem(twodoor,0,"Bravura");//401
	AddMenuItem(twodoor,0,"Fortune");//526
	AddMenuItem(twodoor,0,"Return");

 	fourdoor = CreateMenu("~b~4-door Cars",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(fourdoor, 0, "Choose a car");
	AddMenuItem(fourdoor,0,"Perenniel");//404
	AddMenuItem(fourdoor,0,"Tahoma");//566
	AddMenuItem(fourdoor,0,"Voodoo");//412
	AddMenuItem(fourdoor,0,"Admiral");//445
	AddMenuItem(fourdoor,0,"Elegant");//507
	AddMenuItem(fourdoor,0,"Glendale");//466
	AddMenuItem(fourdoor,0,"Intruder");//546
	AddMenuItem(fourdoor,0,"Merit");//551
	AddMenuItem(fourdoor,0,"Oceanic");//467
	AddMenuItem(fourdoor,0,"Premier");//426
	AddMenuItem(fourdoor,0,"Sentinel");//405
	AddMenuItem(fourdoor,0,"Return");

 	fastcar = CreateMenu("~b~Fast Cars",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(fastcar, 0, "Choose a car");
	AddMenuItem(fastcar,0,"Comet");//480
	AddMenuItem(fastcar,0,"Buffalo");//402
	AddMenuItem(fastcar,0,"Cheetah");//415
	AddMenuItem(fastcar,0,"Euros");//587
	AddMenuItem(fastcar,0,"Hotring Racer");//494
	AddMenuItem(fastcar,0,"Infernus");//411
	AddMenuItem(fastcar,0,"Phoenix");//603
	AddMenuItem(fastcar,0,"Super GT");//506
	AddMenuItem(fastcar,0,"Turismo");//451
	AddMenuItem(fastcar,0,"ZR-350");//477
	AddMenuItem(fastcar,0,"Bullet");//541
	AddMenuItem(fastcar,0,"Return");

 	Othercars = CreateMenu("~b~Other Vehicles",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(Othercars, 0, "Choose a car?");
	AddMenuItem(Othercars,0,"Monster Truck");//556
	AddMenuItem(Othercars,0,"Trashmaster");//408
	AddMenuItem(Othercars,0,"Bus");//431
	AddMenuItem(Othercars,0,"Coach");//437
	AddMenuItem(Othercars,0,"Enforcer");//427
	AddMenuItem(Othercars,0,"Rhino (Tank)");//432
	AddMenuItem(Othercars,0,"S.W.A.T.Truck");//601
	AddMenuItem(Othercars,0,"Cement Truck");//524
	AddMenuItem(Othercars,0,"Flatbed");//455
	AddMenuItem(Othercars,0,"BF Injection");//424
	AddMenuItem(Othercars,0,"Dune");//573
	AddMenuItem(Othercars,0,"Return");

 	bikes = CreateMenu("~b~Bikes",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(bikes, 0, "Choose a bike");
	AddMenuItem(bikes,0,"BF-400");
	AddMenuItem(bikes,0,"BMX");
	AddMenuItem(bikes,0,"Faggio");
	AddMenuItem(bikes,0,"FCR-900");
	AddMenuItem(bikes,0,"Freeway");
	AddMenuItem(bikes,0,"NRG-500");
	AddMenuItem(bikes,0,"PCJ-600");
	AddMenuItem(bikes,0,"Pizzaboy");
	AddMenuItem(bikes,0,"Quad");
	AddMenuItem(bikes,0,"Sanchez");
	AddMenuItem(bikes,0,"Wayfarer");
	AddMenuItem(bikes,0,"Return");

 	boats = CreateMenu("~b~Boats",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(boats, 0, "Choose a boat");
	AddMenuItem(boats,0,"Coastguard");//472
	AddMenuItem(boats,0,"Dingy");//473
	AddMenuItem(boats,0,"Jetmax");//493
	AddMenuItem(boats,0,"Launch");//595
	AddMenuItem(boats,0,"Marquis");//484
	AddMenuItem(boats,0,"Predator");//430
	AddMenuItem(boats,0,"Reefer");//453
	AddMenuItem(boats,0,"Speeder");//452
	AddMenuItem(boats,0,"Squallo");//446
	AddMenuItem(boats,0,"Tropic");//454
	AddMenuItem(boats,0,"Return");

 	planes = CreateMenu("~b~Planes",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(planes, 0, "Choose a plane");
	AddMenuItem(planes,0,"Andromada");//592
	AddMenuItem(planes,0,"AT400");//577
	AddMenuItem(planes,0,"Beagle");//511
	AddMenuItem(planes,0,"Cropduster");//512
	AddMenuItem(planes,0,"Dodo");//593
	AddMenuItem(planes,0,"Hydra");//520
	AddMenuItem(planes,0,"Nevada");//553
	AddMenuItem(planes,0,"Rustler");//476
	AddMenuItem(planes,0,"Shamal");//519
	AddMenuItem(planes,0,"Skimmer");//460
	AddMenuItem(planes,0,"Stuntplane");//513
	AddMenuItem(planes,0,"Return");

	helicopters = CreateMenu("~b~Helicopters",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(helicopters, 0, "Choose a helicopter");
	AddMenuItem(helicopters,0,"Cargobob");//
	AddMenuItem(helicopters,0,"Hunter");//
	AddMenuItem(helicopters,0,"Leviathan");//
	AddMenuItem(helicopters,0,"Maverick");//
	AddMenuItem(helicopters,0,"News Chopper");//
	AddMenuItem(helicopters,0,"Police Maverick");//
	AddMenuItem(helicopters,0,"Raindance");//
	AddMenuItem(helicopters,0,"Seasparrow");//
	AddMenuItem(helicopters,0,"Sparrow");//
	AddMenuItem(helicopters,0,"Return");

 	XWeapons = CreateMenu("~b~Weapons ~g~Main Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeapons, 0, "Choose a weapon");
	AddMenuItem(XWeapons,0,"Desert Eagle");//0
	AddMenuItem(XWeapons,0,"M4");
	AddMenuItem(XWeapons,0,"Sawnoff Shotgun");
	AddMenuItem(XWeapons,0,"Combat Shotgun");
	AddMenuItem(XWeapons,0,"UZI");
	AddMenuItem(XWeapons,0,"Rocket Launcher");
	AddMenuItem(XWeapons,0,"Minigun");//6
	AddMenuItem(XWeapons,0,"Sniper Rifle");
	AddMenuItem(XWeapons,0,"Big Weapons");
	AddMenuItem(XWeapons,0,"Small Weapons");//9
	AddMenuItem(XWeapons,0,"More");
	AddMenuItem(XWeapons,0,"Return");//11

 	XWeaponsBig = CreateMenu("~b~Weapons ~g~Big Weapons",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeaponsBig, 0, "Choose a weapon");
	AddMenuItem(XWeaponsBig,0,"Shotgun");
	AddMenuItem(XWeaponsBig,0,"AK-47");
	AddMenuItem(XWeaponsBig,0,"Country Rifle");
	AddMenuItem(XWeaponsBig,0,"HS Rocket Launcher");
	AddMenuItem(XWeaponsBig,0,"Flamethrower");
	AddMenuItem(XWeaponsBig,0,"SMG");
	AddMenuItem(XWeaponsBig,0,"TEC9");
	AddMenuItem(XWeaponsBig,0,"Return");

 	XWeaponsSmall = CreateMenu("~b~Weapons ~g~Small Weapons",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeaponsBig, 0, "Choose a weapon");
	AddMenuItem(XWeaponsSmall,0,"9mm");
	AddMenuItem(XWeaponsSmall,0,"Silenced 9mm");
	AddMenuItem(XWeaponsSmall,0,"Molotov Cocktail");
	AddMenuItem(XWeaponsSmall,0,"Fire Extinguisher");
	AddMenuItem(XWeaponsSmall,0,"Spraycan");
	AddMenuItem(XWeaponsSmall,0,"Frag Grenades");
	AddMenuItem(XWeaponsSmall,0,"Katana");
	AddMenuItem(XWeaponsSmall,0,"Chainsaw");
	AddMenuItem(XWeaponsSmall,0,"Return");

 	XWeaponsMore = CreateMenu("~b~Weapons ~g~More Weapons",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeaponsBig, 0, "Choose a weapon");
	AddMenuItem(XWeaponsMore,0,"Jetpack");
	AddMenuItem(XWeaponsMore,0,"Knife");
	AddMenuItem(XWeaponsMore,0,"Flowers");
	AddMenuItem(XWeaponsMore,0,"Camera");
	AddMenuItem(XWeaponsMore,0,"Pool Cue");
	AddMenuItem(XWeaponsMore,0,"Baseball Bat");
	AddMenuItem(XWeaponsMore,0,"Golf Club");
	AddMenuItem(XWeaponsMore,0,"MAX AMMO");
	AddMenuItem(XWeaponsMore,0,"Return");

	LTele = CreateMenu("Teleports", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LTele, 0, "Teleport to where?");
	AddMenuItem(LTele, 0, "Las Venturas");//0
	AddMenuItem(LTele, 0, "Los Santos");//1
	AddMenuItem(LTele, 0, "San Fierro");//2
	AddMenuItem(LTele, 0, "The Desert");//3
	AddMenuItem(LTele, 0, "Flint Country");//4
	AddMenuItem(LTele, 0, "Mount Chiliad");//5
	AddMenuItem(LTele, 0, "Interiors");//6
	AddMenuItem(LTele, 0, "Return");//8

	LasVenturasMenu = CreateMenu("Las Venturas", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LasVenturasMenu, 0, "Teleport to where?");
	AddMenuItem(LasVenturasMenu, 0, "The Strip");//0
	AddMenuItem(LasVenturasMenu, 0, "Come-A-Lot");//1
	AddMenuItem(LasVenturasMenu, 0, "LV Airport");//2
	AddMenuItem(LasVenturasMenu, 0, "KACC Military Fuels");//3
	AddMenuItem(LasVenturasMenu, 0, "Yellow Bell Golf Club");//4
	AddMenuItem(LasVenturasMenu, 0, "Baseball Pitch");//5
	AddMenuItem(LasVenturasMenu, 0, "Return");//6

	LosSantosMenu = CreateMenu("Los Santos", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LosSantosMenu, 0, "Teleport to where?");
	AddMenuItem(LosSantosMenu, 0, "Ganton");//0
	AddMenuItem(LosSantosMenu, 0, "LS Airport");//1
	AddMenuItem(LosSantosMenu, 0, "Ocean Docks");//2
	AddMenuItem(LosSantosMenu, 0, "Pershing Square");//3
	AddMenuItem(LosSantosMenu, 0, "Verdant Bluffs");//4
	AddMenuItem(LosSantosMenu, 0, "Santa Maria Beach");//5
	AddMenuItem(LosSantosMenu, 0, "Mulholland");//6
	AddMenuItem(LosSantosMenu, 0, "Richman");//7
	AddMenuItem(LosSantosMenu, 0, "Return");//8

	SanFierroMenu = CreateMenu("San Fierro", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(SanFierroMenu, 0, "Teleport to where?");
	AddMenuItem(SanFierroMenu, 0, "SF Station");//0
	AddMenuItem(SanFierroMenu, 0, "SF Airport");//1
	AddMenuItem(SanFierroMenu, 0, "Ocean Flats");//2
	AddMenuItem(SanFierroMenu, 0, "Avispa Country Club");//3
	AddMenuItem(SanFierroMenu, 0, "Easter Basin (docks)");//4
	AddMenuItem(SanFierroMenu, 0, "Esplanade North");//5
	AddMenuItem(SanFierroMenu, 0, "Battery Point");//6
	AddMenuItem(SanFierroMenu, 0, "Return");//7

	DesertMenu = CreateMenu("The Desert", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(DesertMenu, 0, "Teleport to where?");
	AddMenuItem(DesertMenu, 0, "Aircraft Graveyard");//0
	AddMenuItem(DesertMenu, 0, "Area 51");//1
	AddMenuItem(DesertMenu, 0, "The Big Ear");//2
	AddMenuItem(DesertMenu, 0, "The Sherman Dam");//3
	AddMenuItem(DesertMenu, 0, "Las Barrancas");//4
	AddMenuItem(DesertMenu, 0, "El Quebrados");//5
	AddMenuItem(DesertMenu, 0, "Octane Springs");//6
	AddMenuItem(DesertMenu, 0, "Return");//7

	FlintMenu = CreateMenu("Flint Country", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(FlintMenu, 0, "Teleport to where?");
	AddMenuItem(FlintMenu, 0, "The Lake");//0
	AddMenuItem(FlintMenu, 0, "Leafy Hollow");//1
	AddMenuItem(FlintMenu, 0, "The Farm");//2
	AddMenuItem(FlintMenu, 0, "Shady Cabin");//3
	AddMenuItem(FlintMenu, 0, "Flint Range");//4
	AddMenuItem(FlintMenu, 0, "Becon Hill");//5
	AddMenuItem(FlintMenu, 0, "Fallen Tree");//6
	AddMenuItem(FlintMenu, 0, "Return");//7

	MountChiliadMenu = CreateMenu("Mount Chiliad", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(MountChiliadMenu, 0, "Teleport to where?");
	AddMenuItem(MountChiliadMenu, 0, "Chiliad Jump");//0
	AddMenuItem(MountChiliadMenu, 0, "Bottom Of Chiliad");//1
	AddMenuItem(MountChiliadMenu, 0, "Highest Point");//2
	AddMenuItem(MountChiliadMenu, 0, "Chiliad Path");//3
	AddMenuItem(MountChiliadMenu, 0, "Return");//7

	InteriorsMenu = CreateMenu("Interiors", 2,  55.0, 200.0, 130.0, 80.0);
	SetMenuColumnHeader(InteriorsMenu, 0, "Teleport to where?");
	AddMenuItem(InteriorsMenu, 0, "Planning Department");//0
	AddMenuItem(InteriorsMenu, 0, "LV PD");//1
	AddMenuItem(InteriorsMenu, 0, "Pizza Stack");//2
	AddMenuItem(InteriorsMenu, 0, "RC Battlefield");//3
	AddMenuItem(InteriorsMenu, 0, "Caligula's Casino");//4
	AddMenuItem(InteriorsMenu, 0, "Big Smoke's Crack Palace");//5
	AddMenuItem(InteriorsMenu, 0, "Madd Dogg's Mansion");//6
	AddMenuItem(InteriorsMenu, 0, "Dirtbike Stadium");//7
	AddMenuItem(InteriorsMenu, 0, "Vice Stadium (duel)");//8
	AddMenuItem(InteriorsMenu, 0, "Ammu-nation");//9
	AddMenuItem(InteriorsMenu, 0, "Atrium");//7
	AddMenuItem(InteriorsMenu, 0, "Return");//8
	#endif
	
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) OnPlayerConnect(i);
	for(new i = 1; i < MAX_CHAT_LINES; i++) Chat[i] = "<none>";
	for(new i = 1; i < MAX_REPORTS; i++) Reports[i] = "<none>";
	
	TimeServer = SetTimer("TimerServer",5000,1);
	
	AddPlayerClass(287,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 1
	AddPlayerClass(159,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 2
	AddPlayerClass(110,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 3
	AddPlayerClass(104,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 4
	AddPlayerClass(56,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 5
	AddPlayerClass(21,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 6
	AddPlayerClass(22,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 7
	AddPlayerClass(23,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 8
	AddPlayerClass(116,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 9
	AddPlayerClass(266,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 10
	AddPlayerClass(284,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 11
	AddPlayerClass(283,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 8
	AddPlayerClass(220,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 9
	AddPlayerClass(249,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 10
	AddPlayerClass(150,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 11
	AddPlayerClass(1,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 8
	AddPlayerClass(2,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 9
	AddPlayerClass(4,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 10
	AddPlayerClass(5,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 11	

	AddPlayerClass(275,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 1
	AddPlayerClass(274,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 2
	AddPlayerClass(297,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 3
	AddPlayerClass(293,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 4
	AddPlayerClass(240,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 5
	AddPlayerClass(200,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 6
	AddPlayerClass(133,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 7
	AddPlayerClass(143,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 8
	AddPlayerClass(193,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 9
	AddPlayerClass(111,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 10
	AddPlayerClass(112,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 11
	AddPlayerClass(114,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 8
	AddPlayerClass(115,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 9
	AddPlayerClass(223,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 10
	AddPlayerClass(220,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 11
	AddPlayerClass(219,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 8
	AddPlayerClass(119,0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 9
	AddPlayerClass(120,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 10
	AddPlayerClass(123,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Humano 11		

	AddPlayerClass(162,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Zombie 22
	AddPlayerClass(200,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Zombie 23
	AddPlayerClass(230,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Zombie 24
	AddPlayerClass(212,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Zombie 25
	AddPlayerClass(239,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Zombie 26
	AddPlayerClass(243,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Zombie 27
	AddPlayerClass(134,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Zombie 28
	AddPlayerClass(135,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Zombie 29
	AddPlayerClass(137,0.0,0.0,0.0,0.0,-1,-1,-1,-1,-1,-1); //Zombie 30

	
	CreateVehicle(487,1115.7156,-2016.7175,74.6065,273.7159,34,11,TIEMPO_RESPAWN); // Heli!!
	CreateVehicle(487,1115.8654,-2056.2649,74.6065,274.9924,34,11,TIEMPO_RESPAWN); // Heli!!

	CreateVehicle(452,1488.8088,-2807.0396,-0.5464,100.3373,78,120,TIEMPO_RESPAWN); // 45
	CreateVehicle(452,1470.5327,-2801.6587,-0.7003,195.3562,61,67,TIEMPO_RESPAWN); // 46
	CreateVehicle(452,1157.5734,-3365.6836,-0.4764,113.0339,61,67,TIEMPO_RESPAWN); // Lancha1
	CreateVehicle(452,-744.7676,-3468.7476,-0.0015,327.0536,92,30,TIEMPO_RESPAWN); // lancha3


	AddStaticVehicle(541,1527.2015,-675.8846,94.3748,90.3542,39,64); // Bullet233
	AddStaticVehicle(522,1471.9156,-659.5040,94.3193,0.9184,110,16); // nrg
	AddStaticVehicle(571,1468.0420,-659.0404,94.0334,359.3025,40,115); // kart	

new soldadoshop;
soldadoshop = CreateActor(109,2437.6340,-1759.7843,14.7158,82.6508);
ApplyActorAnimation(soldadoshop, "DEALER", "DEALER_IDLE_01", 4.0, 1, 0, 1, 0, 0);
SetActorInvulnerable(soldadoshop, true);

	
	for(new playerid=0;playerid<MAX_PLAYERS;playerid++){
	MOTD[playerid] = TextDrawCreate(320.0, 175.0, " ");
	TextDrawAlignment(MOTD[playerid], 2);
	TextDrawColor(MOTD[playerid], 0x000000FF);
	TextDrawFont(MOTD[playerid], 3);
	TextDrawLetterSize(MOTD[playerid], 1.5, 4.2);
	TextDrawSetOutline(MOTD[playerid], 2);
	TextDrawBackgroundColor(MOTD[playerid],0x000000FF);
	TextDrawSetProportional(MOTD[playerid], 2);}
	//=================================================================================
/*TDEditor_TD[0] = TextDrawCreate(56.117641, 285.082946, "War");
TextDrawLetterSize(TDEditor_TD[0], 0.519529, 2.241667);
TextDrawAlignment(TDEditor_TD[0], 1);
TextDrawColor(TDEditor_TD[0], 16322815);
TextDrawSetShadow(TDEditor_TD[0], 2);
TextDrawBackgroundColor(TDEditor_TD[0], 255);
TextDrawFont(TDEditor_TD[0], 3);
TextDrawSetProportional(TDEditor_TD[0], 1);

TDEditor_TD[1] = TextDrawCreate(61.764705, 297.916534, "War");
TextDrawLetterSize(TDEditor_TD[1], 0.315294, 1.063333);
TextDrawAlignment(TDEditor_TD[1], 1);
TextDrawColor(TDEditor_TD[1], -1);
TextDrawSetShadow(TDEditor_TD[1], 2);
TextDrawBackgroundColor(TDEditor_TD[1], 255);
TextDrawFont(TDEditor_TD[1], 3);
TextDrawSetProportional(TDEditor_TD[1], 1);

TDEditor_TD[2] = TextDrawCreate(97.058830, 296.166412, "Blood");
TextDrawLetterSize(TDEditor_TD[2], 0.529882, 2.305834);
TextDrawAlignment(TDEditor_TD[2], 1);
TextDrawColor(TDEditor_TD[2], -16776961);
TextDrawSetShadow(TDEditor_TD[2], 2);
TextDrawBackgroundColor(TDEditor_TD[2], 255);
TextDrawFont(TDEditor_TD[2], 3);
TextDrawSetProportional(TDEditor_TD[2], 1);

TDEditor_TD[3] = TextDrawCreate(50.941177, 320.083374, "box");
TextDrawLetterSize(TDEditor_TD[3], 0.000000, -0.400000);
TextDrawTextSize(TDEditor_TD[3], 114.000000, 0.000000);
TextDrawAlignment(TDEditor_TD[3], 1);
TextDrawColor(TDEditor_TD[3], -1);
TextDrawUseBox(TDEditor_TD[3], 1);
TextDrawBoxColor(TDEditor_TD[3], 255);
TextDrawSetShadow(TDEditor_TD[3], 0);
TextDrawBackgroundColor(TDEditor_TD[3], 255);
TextDrawFont(TDEditor_TD[3], 1);
TextDrawSetProportional(TDEditor_TD[3], 1);

TDEditor_TD[4] = TextDrawCreate(49.999988, 318.333190, "el_despertar");
TextDrawLetterSize(TDEditor_TD[4], 0.286588, 1.069167);
TextDrawAlignment(TDEditor_TD[4], 1);
TextDrawColor(TDEditor_TD[4], -1);
TextDrawSetShadow(TDEditor_TD[4], 2);
TextDrawBackgroundColor(TDEditor_TD[4], 255);
TextDrawFont(TDEditor_TD[4], 3);
TextDrawSetProportional(TDEditor_TD[4], 1);*/


//Textdraws
AvisoSopechosoTD[0] = TextDrawCreate(328.000000, 177.000000, "_");
TextDrawFont(AvisoSopechosoTD[0], 1);
TextDrawLetterSize(AvisoSopechosoTD[0], 0.962499, 16.200021);
TextDrawTextSize(AvisoSopechosoTD[0], 259.000000, -802.000000);
TextDrawSetOutline(AvisoSopechosoTD[0], 2);
TextDrawSetShadow(AvisoSopechosoTD[0], 0);
TextDrawAlignment(AvisoSopechosoTD[0], 2);
TextDrawColor(AvisoSopechosoTD[0], 255);
TextDrawBackgroundColor(AvisoSopechosoTD[0], 255);
TextDrawBoxColor(AvisoSopechosoTD[0], 255);
TextDrawUseBox(AvisoSopechosoTD[0], 1);
TextDrawSetProportional(AvisoSopechosoTD[0], 1);
TextDrawSetSelectable(AvisoSopechosoTD[0], 0);

AvisoSopechosoTD[1] = TextDrawCreate(9.000000, 182.000000, "Sistema");
TextDrawFont(AvisoSopechosoTD[1], 2);
TextDrawLetterSize(AvisoSopechosoTD[1], 0.600000, 2.000000);
TextDrawTextSize(AvisoSopechosoTD[1], 400.000000, 17.000000);
TextDrawSetOutline(AvisoSopechosoTD[1], 0);
TextDrawSetShadow(AvisoSopechosoTD[1], 0);
TextDrawAlignment(AvisoSopechosoTD[1], 1);
TextDrawColor(AvisoSopechosoTD[1], -1);
TextDrawBackgroundColor(AvisoSopechosoTD[1], 255);
TextDrawBoxColor(AvisoSopechosoTD[1], 50);
TextDrawUseBox(AvisoSopechosoTD[1], 0);
TextDrawSetProportional(AvisoSopechosoTD[1], 1);
TextDrawSetSelectable(AvisoSopechosoTD[1], 0);

AvisoSopechosoTD[2] = TextDrawCreate(6.000000, 210.000000, "Un administrador te declaro como sospechoso, tenes 5 minutos para ponerte a grabar y poder defender un futuro ticket");
TextDrawFont(AvisoSopechosoTD[2], 2);
TextDrawLetterSize(AvisoSopechosoTD[2], 0.600000, 2.000000);
TextDrawTextSize(AvisoSopechosoTD[2], 400.000000, 17.000000);
TextDrawSetOutline(AvisoSopechosoTD[2], 1);
TextDrawSetShadow(AvisoSopechosoTD[2], 0);
TextDrawAlignment(AvisoSopechosoTD[2], 1);
TextDrawColor(AvisoSopechosoTD[2], -16776961);
TextDrawBackgroundColor(AvisoSopechosoTD[2], 255);
TextDrawBoxColor(AvisoSopechosoTD[2], 50);
TextDrawUseBox(AvisoSopechosoTD[2], 0);
TextDrawSetProportional(AvisoSopechosoTD[2], 1);
TextDrawSetSelectable(AvisoSopechosoTD[2], 0);


TextDWSTATS0 = TextDrawCreate(385.333221, 111.011054, "usebox");
TextDrawLetterSize(TextDWSTATS0, 0.000000, 16.370185);
TextDrawTextSize(TextDWSTATS0, 263.666656, 0.000000);
TextDrawAlignment(TextDWSTATS0, 1);
TextDrawColor(TextDWSTATS0, 0);
TextDrawUseBox(TextDWSTATS0, true);
TextDrawBoxColor(TextDWSTATS0, 255);
TextDrawSetShadow(TextDWSTATS0, 0);
TextDrawSetOutline(TextDWSTATS0, 0);
TextDrawFont(TextDWSTATS0, 0);

TextDWSTATS1 = TextDrawCreate(309.666625, 238.103759, "30");
TextDrawLetterSize(TextDWSTATS1, 0.178333, 1.537777);
TextDrawAlignment(TextDWSTATS1, 1);
TextDrawColor(TextDWSTATS1, -16776961);
TextDrawSetShadow(TextDWSTATS1, 0);
TextDrawSetOutline(TextDWSTATS1, 1);
TextDrawBackgroundColor(TextDWSTATS1, 51);
TextDrawFont(TextDWSTATS1, 2);
TextDrawSetProportional(TextDWSTATS1, 1);

TextDWSTATS2 = TextDrawCreate(392.000000, 110.181480, "usebox");
TextDrawLetterSize(TextDWSTATS2, 0.000000, 0.697325);
TextDrawTextSize(TextDWSTATS2, 257.000000, 0.000000);
TextDrawAlignment(TextDWSTATS2, 1);
TextDrawColor(TextDWSTATS2, 0);
TextDrawUseBox(TextDWSTATS2, true);
TextDrawBoxColor(TextDWSTATS2, -5963521);
TextDrawSetShadow(TextDWSTATS2, 0);
TextDrawSetOutline(TextDWSTATS2, 0);
TextDrawFont(TextDWSTATS2, 0);

TextDWSTATS3 = TextDrawCreate(271.333404, 110.755538, "[LTC]Lil.Tr4p");
TextDrawLetterSize(TextDWSTATS3, 0.416666, 0.625184);
TextDrawAlignment(TextDWSTATS3, 1);
TextDrawColor(TextDWSTATS3, -1);
TextDrawSetShadow(TextDWSTATS3, 0);
TextDrawSetOutline(TextDWSTATS3, 1);
TextDrawBackgroundColor(TextDWSTATS3, 255);
TextDrawFont(TextDWSTATS3, 3);
TextDrawSetProportional(TextDWSTATS3, 1);

TextDWSTATS4 = TextDrawCreate(275.000061, 156.555603, "PUNTOS DE RANGO:");
TextDrawLetterSize(TextDWSTATS4, 0.190000, 1.247407);
TextDrawAlignment(TextDWSTATS4, 1);
TextDrawColor(TextDWSTATS4, -1);
TextDrawSetShadow(TextDWSTATS4, 0);
TextDrawSetOutline(TextDWSTATS4, 1);
TextDrawBackgroundColor(TextDWSTATS4, 51);
TextDrawFont(TextDWSTATS4, 3);
TextDrawSetProportional(TextDWSTATS4, 1);

TextDWSTATS5 = TextDrawCreate(274.333404, 172.074111, "SCORE:");
TextDrawLetterSize(TextDWSTATS5, 0.171666, 1.434074);
TextDrawAlignment(TextDWSTATS5, 1);
TextDrawColor(TextDWSTATS5, -1);
TextDrawSetShadow(TextDWSTATS5, 0);
TextDrawSetOutline(TextDWSTATS5, 1);
TextDrawBackgroundColor(TextDWSTATS5, 51);
TextDrawFont(TextDWSTATS5, 3);
TextDrawSetProportional(TextDWSTATS5, 1);

TextDWSTATS6 = TextDrawCreate(275.333435, 189.666595, "PLATA:");
TextDrawLetterSize(TextDWSTATS6, 0.151666, 1.392592);
TextDrawAlignment(TextDWSTATS6, 1);
TextDrawColor(TextDWSTATS6, -1);
TextDrawSetShadow(TextDWSTATS6, 0);
TextDrawSetOutline(TextDWSTATS6, 1);
TextDrawBackgroundColor(TextDWSTATS6, 51);
TextDrawFont(TextDWSTATS6, 3);
TextDrawSetProportional(TextDWSTATS6, 1);

TextDWSTATS7 = TextDrawCreate(275.333312, 206.992614, "KILLS:");
TextDrawLetterSize(TextDWSTATS7, 0.196666, 1.371851);
TextDrawAlignment(TextDWSTATS7, 1);
TextDrawColor(TextDWSTATS7, -1);
TextDrawSetShadow(TextDWSTATS7, 0);
TextDrawSetOutline(TextDWSTATS7, 1);
TextDrawBackgroundColor(TextDWSTATS7, 51);
TextDrawFont(TextDWSTATS7, 3);
TextDrawSetProportional(TextDWSTATS7, 1);

TextDWSTATS8 = TextDrawCreate(273.666625, 224.829666, "DEATHS:");
TextDrawLetterSize(TextDWSTATS8, 0.180000, 1.226666);
TextDrawAlignment(TextDWSTATS8, 1);
TextDrawColor(TextDWSTATS8, -1);
TextDrawSetShadow(TextDWSTATS8, 0);
TextDrawSetOutline(TextDWSTATS8, 1);
TextDrawBackgroundColor(TextDWSTATS8, 51);
TextDrawFont(TextDWSTATS8, 3);
TextDrawSetProportional(TextDWSTATS8, 1);

TextDWSTATS9 = TextDrawCreate(273.666717, 238.933319, "CONQUISTAS:");
TextDrawLetterSize(TextDWSTATS9, 0.146666, 1.392592);
TextDrawAlignment(TextDWSTATS9, 1);
TextDrawColor(TextDWSTATS9, -1);
TextDrawSetShadow(TextDWSTATS9, 0);
TextDrawSetOutline(TextDWSTATS9, 1);
TextDrawBackgroundColor(TextDWSTATS9, 51);
TextDrawFont(TextDWSTATS9, 3);
TextDrawSetProportional(TextDWSTATS9, 1);

TextDWSTATS10 = TextDrawCreate(300.999969, 223.755599, "40");
TextDrawLetterSize(TextDWSTATS10, 0.167333, 1.442370);
TextDrawAlignment(TextDWSTATS10, 1);
TextDrawColor(TextDWSTATS10, -16776961);
TextDrawSetShadow(TextDWSTATS10, 0);
TextDrawSetOutline(TextDWSTATS10, 1);
TextDrawBackgroundColor(TextDWSTATS10, 51);
TextDrawFont(TextDWSTATS10, 2);
TextDrawSetProportional(TextDWSTATS10, 1);

TextDWSTATS11 = TextDrawCreate(296.333282, 206.918548, "50");
TextDrawLetterSize(TextDWSTATS11, 0.167333, 1.442370);
TextDrawAlignment(TextDWSTATS11, 1);
TextDrawColor(TextDWSTATS11, -16776961);
TextDrawSetShadow(TextDWSTATS11, 0);
TextDrawSetOutline(TextDWSTATS11, 1);
TextDrawBackgroundColor(TextDWSTATS11, 51);
TextDrawFont(TextDWSTATS11, 2);
TextDrawSetProportional(TextDWSTATS11, 1);

TextDWSTATS12 = TextDrawCreate(294.333190, 189.666702, "6000000");
TextDrawLetterSize(TextDWSTATS12, 0.167333, 1.442370);
TextDrawAlignment(TextDWSTATS12, 1);
TextDrawColor(TextDWSTATS12, -16776961);
TextDrawSetShadow(TextDWSTATS12, 0);
TextDrawSetOutline(TextDWSTATS12, 1);
TextDrawBackgroundColor(TextDWSTATS12, 51);
TextDrawFont(TextDWSTATS12, 2);
TextDrawSetProportional(TextDWSTATS12, 1);

TextDWSTATS13 = TextDrawCreate(295.666473, 172.000015, "700000");
TextDrawLetterSize(TextDWSTATS13, 0.162333, 1.442370);
TextDrawAlignment(TextDWSTATS13, 1);
TextDrawColor(TextDWSTATS13, -16776961);
TextDrawSetShadow(TextDWSTATS13, 0);
TextDrawSetOutline(TextDWSTATS13, 1);
TextDrawBackgroundColor(TextDWSTATS13, 51);
TextDrawFont(TextDWSTATS13, 2);
TextDrawSetProportional(TextDWSTATS13, 1);

TextDWSTATS14 = TextDrawCreate(335.333190, 155.162948, "14000");
TextDrawLetterSize(TextDWSTATS14, 0.162333, 1.442370);
TextDrawAlignment(TextDWSTATS14, 1);
TextDrawColor(TextDWSTATS14, -16776961);
TextDrawSetShadow(TextDWSTATS14, 0);
TextDrawSetOutline(TextDWSTATS14, 1);
TextDrawBackgroundColor(TextDWSTATS14, 51);
TextDrawFont(TextDWSTATS14, 2);
TextDrawSetProportional(TextDWSTATS14, 1);

TextDWSTATS15 = TextDrawCreate(275.666717, 120.296203, "CLAN:");
TextDrawLetterSize(TextDWSTATS15, 0.205000, 0.977777);
TextDrawAlignment(TextDWSTATS15, 1);
TextDrawColor(TextDWSTATS15, 16711935);
TextDrawSetShadow(TextDWSTATS15, 0);
TextDrawSetOutline(TextDWSTATS15, 1);
TextDrawBackgroundColor(TextDWSTATS15, 51);
TextDrawFont(TextDWSTATS15, 3);
TextDrawSetProportional(TextDWSTATS15, 1);

TextDWSTATS16 = TextDrawCreate(296.666900, 121.296211, "NINGUNO");
TextDrawLetterSize(TextDWSTATS16, 0.240000, 0.874073);
TextDrawAlignment(TextDWSTATS16, 1);
TextDrawColor(TextDWSTATS16, -16776961);
TextDrawSetShadow(TextDWSTATS16, 0);
TextDrawSetOutline(TextDWSTATS16, 1);
TextDrawBackgroundColor(TextDWSTATS16, 51);
TextDrawFont(TextDWSTATS16, 3);
TextDrawSetProportional(TextDWSTATS16, 1);

TextDWSTATS17 = TextDrawCreate(276.666656, 130.251876, "VIP:");
TextDrawLetterSize(TextDWSTATS17, 0.235000, 0.977777);
TextDrawAlignment(TextDWSTATS17, 1);
TextDrawColor(TextDWSTATS17, -1);
TextDrawSetShadow(TextDWSTATS17, 0);
TextDrawSetOutline(TextDWSTATS17, 1);
TextDrawBackgroundColor(TextDWSTATS17, 51);
TextDrawFont(TextDWSTATS17, 3);
TextDrawSetProportional(TextDWSTATS17, 1);

TextDWSTATS18 = TextDrawCreate(294.333221, 131.251876, "NINGUNO");
TextDrawLetterSize(TextDWSTATS18, 0.213333, 0.811851);
TextDrawAlignment(TextDWSTATS18, 1);
TextDrawColor(TextDWSTATS18, 16777215);
TextDrawSetShadow(TextDWSTATS18, 0);
TextDrawSetOutline(TextDWSTATS18, 1);
TextDrawBackgroundColor(TextDWSTATS18, 51);
TextDrawFont(TextDWSTATS18, 3);
TextDrawSetProportional(TextDWSTATS18, 1);

TDEditor_TD[0] = TextDrawCreate(10.333302, 416.889160, "War");
TextDrawLetterSize(TDEditor_TD[0], 0.394666, 1.790812);
TextDrawAlignment(TDEditor_TD[0], 1);
TextDrawColor(TDEditor_TD[0], -1);
TextDrawSetShadow(TDEditor_TD[0], 0);
TextDrawSetOutline(TDEditor_TD[0], -2);
TextDrawBackgroundColor(TDEditor_TD[0], 255);
TextDrawFont(TDEditor_TD[0], 3);
TextDrawSetProportional(TDEditor_TD[0], 1);

TDEditor_TD[2] = TextDrawCreate(5.999985, 428.088867, "Blood");
TextDrawLetterSize(TDEditor_TD[2], 0.479999, 1.728592);
TextDrawAlignment(TDEditor_TD[2], 1);
TextDrawColor(TDEditor_TD[2], -16776961);
TextDrawSetShadow(TDEditor_TD[2], 0);
TextDrawSetOutline(TDEditor_TD[2], 2);
TextDrawBackgroundColor(TDEditor_TD[2], 255);
TextDrawFont(TDEditor_TD[2], 0);
TextDrawSetProportional(TDEditor_TD[2], 1);

Textdraw22 = TextDrawCreate(112.941192, 431.666687, "/centinela - /resistencia - /subirrango - /items - /base - /clanes - /creditos - /comandos - /pm");
TextDrawLetterSize(Textdraw22, 0.179411, 1.599999);
TextDrawAlignment(Textdraw22, 1);
TextDrawColor(Textdraw22, -1);
TextDrawSetShadow(Textdraw22, 2);
TextDrawSetOutline(Textdraw22, 0);
TextDrawBackgroundColor(Textdraw22, 255);
TextDrawFont(Textdraw22, 2);
TextDrawSetProportional(Textdraw22, 1);


/*TextdrawPuntos = TextDrawCreate(525.764648, 389.500091, "PUNTOS_DE_RANGO:");
TextDrawLetterSize(TextdrawPuntos, 0.236235, 1.471666);
TextDrawAlignment(TextdrawPuntos, 2);
TextDrawColor(TextdrawPuntos, -1308636673);
TextDrawSetShadow(TextdrawPuntos, 3);
TextDrawSetOutline(TextdrawPuntos, 2);
TextDrawBackgroundColor(TextdrawPuntos, 255);
TextDrawFont(TextdrawPuntos, 3);
TextDrawSetProportional(TextdrawPuntos, 0);




TextdrawRango = TextDrawCreate(498.941131, 369.083374, "rango:");
TextDrawLetterSize(TextdrawRango, 0.236235, 1.471666);
TextDrawAlignment(TextdrawRango, 2);
TextDrawColor(TextdrawRango, -1308636673);
TextDrawSetShadow(TextdrawRango, 3);
TextDrawSetOutline(TextdrawRango, 2);
TextDrawBackgroundColor(TextdrawRango, 255);
TextDrawFont(TextdrawRango, 3);
TextDrawSetProportional(TextdrawRango, 0);
*/





/*	Textdraw22 = TextDrawCreate(644.000000, 1.000000, "____ _____");
	TextDrawBackgroundColor(Textdraw22, 15);
	TextDrawFont(Textdraw22, 1);
	TextDrawLetterSize(Textdraw22, 0.500000, 5.899996);
	TextDrawColor(Textdraw22, -1);
	TextDrawSetOutline(Textdraw22, 0);
	TextDrawSetProportional(Textdraw22, 1);
	TextDrawSetShadow(Textdraw22, 1);
	TextDrawUseBox(Textdraw22, 1);
	TextDrawBoxColor(Textdraw22, 100);
	TextDrawTextSize(Textdraw22, -4.000000, 3.000000);

	Textdraw23 = TextDrawCreate(644.000000, 341.000000, "____ _____");
	TextDrawBackgroundColor(Textdraw23, 15);
	TextDrawFont(Textdraw23, 1);
	TextDrawLetterSize(Textdraw23, 0.500000, 5.899996);
	TextDrawColor(Textdraw23, -1);
	TextDrawSetOutline(Textdraw23, 0);
	TextDrawSetProportional(Textdraw23, 1);
	TextDrawSetShadow(Textdraw23, 1);
	TextDrawUseBox(Textdraw23, 1);
	TextDrawBoxColor(Textdraw23, 100);
	TextDrawTextSize(Textdraw23, -4.000000, 3.000000);*/
	
	//-----------------titulos
	
		// Create the textdraws:
/*	Textdraw11 = TextDrawCreate(493.000000, 340.000000, "-");
	TextDrawAlignment(Textdraw11, 2);
	TextDrawBackgroundColor(Textdraw11, 255);
	TextDrawFont(Textdraw11, 2);
	TextDrawLetterSize(Textdraw11, 22.600049, 1.899999);
	TextDrawColor(Textdraw11, -16776961);
	TextDrawSetOutline(Textdraw11, 0);
	TextDrawSetProportional(Textdraw11, 0);
	TextDrawSetShadow(Textdraw11, 1);
	TextDrawSetSelectable(Textdraw11, 0);

	Textdraw12 = TextDrawCreate(326.000000, 343.000000, "War Blood");
	TextDrawAlignment(Textdraw12, 2);
	TextDrawBackgroundColor(Textdraw12, 255);
	TextDrawFont(Textdraw12, 2);
	TextDrawLetterSize(Textdraw12, 0.640000, 4.499999);
	TextDrawColor(Textdraw12, -16776961);
	TextDrawSetOutline(Textdraw12, 0);
	TextDrawSetProportional(Textdraw12, 1);
	TextDrawSetShadow(Textdraw12, 1);
	TextDrawSetSelectable(Textdraw12, 0);

	Textdraw13 = TextDrawCreate(493.000000, 373.000000, "-");
	TextDrawAlignment(Textdraw13, 2);
	TextDrawBackgroundColor(Textdraw13, 255);
	TextDrawFont(Textdraw13, 2);
	TextDrawLetterSize(Textdraw13, 22.600049, 1.899999);
	TextDrawColor(Textdraw13, -16776961);
	TextDrawSetOutline(Textdraw13, 0);
	TextDrawSetProportional(Textdraw13, 0);
	TextDrawSetShadow(Textdraw13, 1);
	TextDrawSetSelectable(Textdraw13, 0);*/
	


/*Textdraw12 = TextDrawCreate(641.529418, 1.500000, "usebox");
TextDrawLetterSize(Textdraw12, 0.000000, 49.396297);
TextDrawTextSize(Textdraw12, -2.000000, 0.000000);
TextDrawAlignment(Textdraw12, 1);
TextDrawColor(Textdraw12, 0);
TextDrawUseBox(Textdraw12, true);
TextDrawBoxColor(Textdraw12, 255);
TextDrawSetShadow(Textdraw12, 0);
TextDrawSetOutline(Textdraw12, 0);
TextDrawFont(Textdraw12, 0);*/

//	Textdraw12 = TextDrawCreate(216.444549, 41.315570, "Invasion~n~__Zombie");
/*	Textdraw12 = TextDrawCreate(216.444549, 41.315570, "~r~Invasion~n~        Zombie");
	TextDrawLetterSize(Textdraw12, 0.882889, 3.033599);
	TextDrawAlignment(Textdraw12, 1);
	TextDrawColor(Textdraw12, -1);
	TextDrawSetShadow(Textdraw12, 0);
	TextDrawSetOutline(Textdraw12, 2);
	TextDrawBackgroundColor(Textdraw12, 51);
	TextDrawFont(Textdraw12, 3);
	TextDrawSetProportional(Textdraw12, 1);*/

	//=========< TextDraw de Humanos >===========================
/*	Textdraw0 = TextDrawCreate(500.000000, 95.000000, "~g~ ] Humano ]");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 2);
	TextDrawLetterSize(Textdraw0, 0.399999, 1.599999);
	TextDrawColor(Textdraw0, -16776961);
	TextDrawSetOutline(Textdraw0, 1);
	TextDrawSetProportional(Textdraw0, 1);

	Textdraw2 = TextDrawCreate(500.000000, 95.000000, "~r~ ] Zombie ]");
	TextDrawBackgroundColor(Textdraw2, 255);
	TextDrawFont(Textdraw2, 2);
	TextDrawLetterSize(Textdraw2, 0.399999, 1.599999);
	TextDrawColor(Textdraw2, -16776961);
	TextDrawSetOutline(Textdraw2, 1);
	TextDrawSetProportional(Textdraw2, 1);*/

/*	Textdraw4 = TextDrawCreate(75.000000, 320.000000, "Zombie");
	TextDrawBackgroundColor(Textdraw4, 255);  //color de sombra
	TextDrawFont(Textdraw4, 3);
	TextDrawLetterSize(Textdraw4, 0.519999, 2.299999);
	TextDrawColor(Textdraw4, CLAN_SIN_CONQUISTAR);
	TextDrawSetOutline(Textdraw4, 1);
	TextDrawSetProportional(Textdraw4, 1);
	TextDrawSetShadow(Textdraw4 , 2);
	
	Textdraw5 = TextDrawCreate(35.000000, 305.000000, "Infierno");
	TextDrawBackgroundColor(Textdraw5, 255);  //color de sombra
	TextDrawFont(Textdraw5, 3);
	TextDrawLetterSize(Textdraw5, 0.519999, 2.299999);
	TextDrawColor(Textdraw5, 0xFFFFFFFF);
	TextDrawSetOutline(Textdraw5, 1);
	TextDrawSetProportional(Textdraw5, 1);
	TextDrawSetShadow(Textdraw5 , 2);*/

Textdraw0 = TextDrawCreate(5.176542, 419.416717, "AFTER");
TextDrawLetterSize(Textdraw0, 0.449999, 1.600000);
TextDrawAlignment(Textdraw0, 1);
TextDrawColor(Textdraw0, -16776961);
TextDrawSetShadow(Textdraw0, 0);
TextDrawSetOutline(Textdraw0, 1);
TextDrawBackgroundColor(Textdraw0, 51);
TextDrawFont(Textdraw0, 0);
TextDrawSetProportional(Textdraw0, 1);

Textdraw1 = TextDrawCreate(16.941164, 432.833374, "LIFE");
TextDrawLetterSize(Textdraw1, 0.370000, 1.483333);
TextDrawAlignment(Textdraw1, 1);
TextDrawColor(Textdraw1, -1);
TextDrawSetShadow(Textdraw1, 0);
TextDrawSetOutline(Textdraw1, 1);
TextDrawBackgroundColor(Textdraw1, 51);
TextDrawFont(Textdraw1, 0);
TextDrawSetProportional(Textdraw1, 1);

Textdraw2 = TextDrawCreate(6.235294, 423.250000, "usebox");
TextDrawLetterSize(Textdraw2, 0.000000, 2.405555);
TextDrawTextSize(Textdraw2, -0.117647, 0.000000);
TextDrawAlignment(Textdraw2, 1);
TextDrawColor(Textdraw2, 0);
TextDrawUseBox(Textdraw2, true);
TextDrawBoxColor(Textdraw2, 255);
TextDrawSetShadow(Textdraw2, 0);
TextDrawSetOutline(Textdraw2, 0);
TextDrawFont(Textdraw2, 0);

	




	HealthBar[0] = TextDrawCreate(611.0,68.5,"_");                              // BBG
	TextDrawLetterSize(HealthBar[0],0.5,0.449999);
	TextDrawUseBox(HealthBar[0],1);
	TextDrawBoxColor(HealthBar[0],COLOR_HPBAR_BG);
	TextDrawTextSize(HealthBar[0],543.0,0.0);
	HealthBar[1] = TextDrawCreate(608.5,71.0,"_");                              // BG (75-100)
	TextDrawLetterSize(HealthBar[1],0.5,0.0);
	TextDrawUseBox(HealthBar[1],1);
	TextDrawBoxColor(HealthBar[1],COLOR_HPBAR_75100BG);
	TextDrawTextSize(HealthBar[1],545.0,0.0);
	HealthBar[2] = TextDrawCreate(609.0,71.0,"_");                              // >= 95
	TextDrawLetterSize(HealthBar[2],0.5,0.0);
	TextDrawUseBox(HealthBar[2],1);
	TextDrawBoxColor(HealthBar[2],COLOR_HPBAR_75100);
	TextDrawTextSize(HealthBar[2],545.0,0.0);
	HealthBar[3] = TextDrawCreate(604.0,71.0,"_");                              // >= 90
	TextDrawLetterSize(HealthBar[3],0.5,0.0);
	TextDrawUseBox(HealthBar[3],1);
	TextDrawBoxColor(HealthBar[3],COLOR_HPBAR_75100);
	TextDrawTextSize(HealthBar[3],545.0,0.0);
	HealthBar[4] = TextDrawCreate(601.0,71.0,"_");                              // >= 85
	TextDrawLetterSize(HealthBar[4],0.5,0.0);
	TextDrawUseBox(HealthBar[4],1);
	TextDrawBoxColor(HealthBar[4],COLOR_HPBAR_75100);
	TextDrawTextSize(HealthBar[4],545.0,0.0);
	HealthBar[5] = TextDrawCreate(598.0,71.0,"_");                              // >= 80
	TextDrawLetterSize(HealthBar[5],0.5,0.0);
	TextDrawUseBox(HealthBar[5],1);
	TextDrawBoxColor(HealthBar[5],COLOR_HPBAR_75100);
	TextDrawTextSize(HealthBar[5],545.0,0.0);
	HealthBar[6] = TextDrawCreate(595.0,71.0,"_");                              // >= 75
	TextDrawLetterSize(HealthBar[6],0.5,0.0);
	TextDrawUseBox(HealthBar[6],1);
	TextDrawBoxColor(HealthBar[6],COLOR_HPBAR_75100);
	TextDrawTextSize(HealthBar[6],545.0,0.0);
	HealthBar[7] = TextDrawCreate(608.5,71.0,"_");                              // Çàäíèé ôîí (50-75)
	TextDrawLetterSize(HealthBar[7],0.5,0.0);
	TextDrawUseBox(HealthBar[7],1);
	TextDrawBoxColor(HealthBar[7],COLOR_HPBAR_5075BG);
	TextDrawTextSize(HealthBar[7],545.0,0.0);
	HealthBar[8] = TextDrawCreate(591.5,71.0,"_");                              // >= 70
	TextDrawLetterSize(HealthBar[8],0.5,0.0);
	TextDrawUseBox(HealthBar[8],1);
	TextDrawBoxColor(HealthBar[8],COLOR_HPBAR_5075);
	TextDrawTextSize(HealthBar[8],545.0,0.0);
	HealthBar[9] = TextDrawCreate(588.5,71.0,"_");                              // >= 65
	TextDrawLetterSize(HealthBar[9],0.5,0.0);
	TextDrawUseBox(HealthBar[9],1);
	TextDrawBoxColor(HealthBar[9],COLOR_HPBAR_5075);
	TextDrawTextSize(HealthBar[9],545.0,0.0);
	HealthBar[10] = TextDrawCreate(585.5,71.0,"_");                             // >= 60
	TextDrawLetterSize(HealthBar[10],0.5,0.0);
	TextDrawUseBox(HealthBar[10],1);
	TextDrawBoxColor(HealthBar[10],COLOR_HPBAR_5075);
	TextDrawTextSize(HealthBar[10],545.0,0.0);
	HealthBar[11] = TextDrawCreate(582.5,71.0,"_");                             // >= 55
	TextDrawLetterSize(HealthBar[11],0.5,0.0);
	TextDrawUseBox(HealthBar[11],1);
	TextDrawBoxColor(HealthBar[11],COLOR_HPBAR_5075);
	TextDrawTextSize(HealthBar[11],545.0,0.0);
	HealthBar[12] = TextDrawCreate(579.0,71.0,"_");                             // >= 50
	TextDrawLetterSize(HealthBar[12],0.5,0.0);
	TextDrawUseBox(HealthBar[12],1);
	TextDrawBoxColor(HealthBar[12],COLOR_HPBAR_5075);
	TextDrawTextSize(HealthBar[12],545.0,0.0);
	HealthBar[13] = TextDrawCreate(608.5,71.0,"_");                             // BG (25-50)
	TextDrawLetterSize(HealthBar[13],0.5,0.0);
	TextDrawUseBox(HealthBar[13],1);
	TextDrawBoxColor(HealthBar[13],COLOR_HPBAR_2550BG);
	TextDrawTextSize(HealthBar[13],545.0,0.0);
	HealthBar[14] = TextDrawCreate(576.0,71.0,"_");                             // >= 45
	TextDrawLetterSize(HealthBar[14],0.5,0.0);
	TextDrawUseBox(HealthBar[14],1);
	TextDrawBoxColor(HealthBar[14],COLOR_HPBAR_2550);
	TextDrawTextSize(HealthBar[14],545.0,0.0);
	HealthBar[15] = TextDrawCreate(573.0,71.0,"_");                             // >= 40
	TextDrawLetterSize(HealthBar[15],0.5,0.0);
	TextDrawUseBox(HealthBar[15],1);
	TextDrawBoxColor(HealthBar[15],COLOR_HPBAR_2550);
	TextDrawTextSize(HealthBar[15],545.0,0.0);
	HealthBar[16] = TextDrawCreate(570.5,71.0, "_");                            // >= 35
	TextDrawLetterSize(HealthBar[16],0.5,0.0);
	TextDrawUseBox(HealthBar[16],1);
	TextDrawBoxColor(HealthBar[16],COLOR_HPBAR_2550);
	TextDrawTextSize(HealthBar[16],545.0,0.0);
	HealthBar[17] = TextDrawCreate(567.5,71.0,"_");                             // >= 30
	TextDrawLetterSize(HealthBar[17],0.5,0.0);
	TextDrawUseBox(HealthBar[17],1);
	TextDrawBoxColor(HealthBar[17],COLOR_HPBAR_2550);
	TextDrawTextSize(HealthBar[17],545.0,0.0);
	HealthBar[18] = TextDrawCreate(564.0,71.0,"_");                             // >= 25
	TextDrawLetterSize(HealthBar[18],0.5,0.0);
	TextDrawUseBox(HealthBar[18],1);
	TextDrawBoxColor(HealthBar[18],COLOR_HPBAR_2550);
	TextDrawTextSize(HealthBar[18],545.0,0.0);
	

	VistaZombie0 = TextDrawCreate(644.000000, 3.000000, "______________________________");
	TextDrawBackgroundColor(VistaZombie0, 255);
	TextDrawFont(VistaZombie0, 1);
	TextDrawLetterSize(VistaZombie0, 1.400000, 13.900009);
	TextDrawColor(VistaZombie0, -1);
	TextDrawSetOutline(VistaZombie0, 0);
	TextDrawSetProportional(VistaZombie0, 1);
	TextDrawSetShadow(VistaZombie0, 1);
	TextDrawUseBox(VistaZombie0, 1);
	TextDrawBoxColor(VistaZombie0, -16777201);
	TextDrawTextSize(VistaZombie0, -4.000000, 4.000000);

	VistaZombie1 = TextDrawCreate(644.000000, 321.000000, "______________________________");
	TextDrawBackgroundColor(VistaZombie1, 255);
	TextDrawFont(VistaZombie1, 1);
	TextDrawLetterSize(VistaZombie1, 1.400000, 13.900009);
	TextDrawColor(VistaZombie1, -1);
	TextDrawSetOutline(VistaZombie1, 0);
	TextDrawSetProportional(VistaZombie1, 1);
	TextDrawSetShadow(VistaZombie1, 1);
	TextDrawUseBox(VistaZombie1, 1);
	TextDrawBoxColor(VistaZombie1, -16777201);
	TextDrawTextSize(VistaZombie1, -4.000000, 4.000000);

	VistaZombie2 = TextDrawCreate(644.000000, 3.000000, "______________________________");
	TextDrawBackgroundColor(VistaZombie2, 255);
	TextDrawFont(VistaZombie2, 1);
	TextDrawLetterSize(VistaZombie2, 1.400000, 49.399986);
	TextDrawColor(VistaZombie2, -1);
	TextDrawSetOutline(VistaZombie2, 0);
	TextDrawSetProportional(VistaZombie2, 1);
	TextDrawSetShadow(VistaZombie2, 1);
	TextDrawUseBox(VistaZombie2, 1);
	TextDrawBoxColor(VistaZombie2, -16777183);
	TextDrawTextSize(VistaZombie2, -4.000000, 4.000000);

	VistaZombie3 = TextDrawCreate(644.000000, 3.000000, "______________________________");
	TextDrawBackgroundColor(VistaZombie3, 255);
	TextDrawFont(VistaZombie3, 1);
	TextDrawLetterSize(VistaZombie3, 1.400000, 8.000010);
	TextDrawColor(VistaZombie3, -1);
	TextDrawSetOutline(VistaZombie3, 0);
	TextDrawSetProportional(VistaZombie3, 1);
	TextDrawSetShadow(VistaZombie3, 1);
	TextDrawUseBox(VistaZombie3, 1);
	TextDrawBoxColor(VistaZombie3, -16777201);
	TextDrawTextSize(VistaZombie3, -4.000000, 4.000000);

	VistaZombie4 = TextDrawCreate(644.000000, 374.000000, "______________________________");
	TextDrawBackgroundColor(VistaZombie4, 255);
	TextDrawFont(VistaZombie4, 1);
	TextDrawLetterSize(VistaZombie4, 1.400000, 8.000010);
	TextDrawColor(VistaZombie4, -1);
	TextDrawSetOutline(VistaZombie4, 0);
	TextDrawSetProportional(VistaZombie4, 1);
	TextDrawSetShadow(VistaZombie4, 1);
	TextDrawUseBox(VistaZombie4, 1);
	TextDrawBoxColor(VistaZombie4, -16777201);
	TextDrawTextSize(VistaZombie4, -4.000000, 4.000000);

	/*TextoComandosZombies = TextDrawCreate(97.000000, 437.000000, "~r~/freeway ~g~/comandos ~w~/base ~p~/ayuda ~y~/reglas");
	TextDrawBackgroundColor(TextoComandosZombies, 255);
	TextDrawFont(TextoComandosZombies, 3);
	TextDrawLetterSize(TextoComandosZombies, 0.500000, 1.000000);
	TextDrawColor(TextoComandosZombies, -1);
	TextDrawSetOutline(TextoComandosZombies, 1);
	TextDrawSetProportional(TextoComandosZombies, 1);
	
	TextoComandosHumanos = TextDrawCreate(67.000000, 436.000000, "~r~/autos ~p~/armas ~g~/base ~w~/ayuda ~b~/reglas ~g~/comandos ~w~$texto");
	TextDrawBackgroundColor(TextoComandosHumanos, 255);
	TextDrawFont(TextoComandosHumanos, 3);
	TextDrawLetterSize(TextoComandosHumanos, 0.440000, 1.200000);
	TextDrawColor(TextoComandosHumanos, -1);
	TextDrawSetOutline(TextoComandosHumanos, 1);
	TextDrawSetProportional(TextoComandosHumanos, 1);*/


	//----------------texdraws red screen
	
	FWhite = TextDrawCreate(642.000000, 1.000000, "~n~");
	TextDrawBackgroundColor(FWhite, 0xFFFFFF44);
	TextDrawFont(FWhite, 1);
	TextDrawLetterSize(FWhite, 0.500000, 49.499992);
	TextDrawColor(FWhite, -1);
	TextDrawSetOutline(FWhite, 0);
	TextDrawSetProportional(FWhite, 1);
	TextDrawSetShadow(FWhite, 1);
	TextDrawUseBox(FWhite, 1);
	TextDrawBoxColor(FWhite, 0xFFFFFF44);
	TextDrawTextSize(FWhite, -3.000000, 0.000000);

	FRed = TextDrawCreate(642.000000, 1.000000, "~n~");
	TextDrawBackgroundColor(FRed, 0xFF000044);
	TextDrawFont(FRed, 1);
	TextDrawLetterSize(FRed, 0.500000, 49.499992);
	TextDrawColor(FRed, -1);
	TextDrawSetOutline(FRed, 0);
	TextDrawSetProportional(FRed, 1);
	TextDrawSetShadow(FRed, 1);
	TextDrawUseBox(FRed, 1);
	TextDrawBoxColor(FRed, 0xFF000044);
	TextDrawTextSize(FRed, -3.000000, 0.000000);


    for(new i = 0; i<MAX_PLAYERS; i++) //
{
/*

TextdrawPuntosTotal[i] = 
TextDrawCreate(568.588562, 388.916717, "100000");
TextDrawLetterSize(TextdrawPuntosTotal[i], 0.261646, 1.512500);
TextDrawAlignment(TextdrawPuntosTotal[i], 1);
TextDrawColor(TextdrawPuntosTotal[i], 255);
TextDrawSetShadow(TextdrawPuntosTotal[i], -7);
TextDrawSetOutline(TextdrawPuntosTotal[i], 1);
TextDrawBackgroundColor(TextdrawPuntosTotal[i], 30720);
TextDrawFont(TextdrawPuntosTotal[i], 3);
TextDrawSetProportional(TextdrawPuntosTotal[i], 1);

TextdrawRangoTotal[i] = TextDrawCreate(516.823303, 370.250091, "Superviviente Avanzado");
TextDrawLetterSize(TextdrawRangoTotal[i], 0.221175, 1.261664);
TextDrawAlignment(TextdrawRangoTotal[i], 1);
TextDrawColor(TextdrawRangoTotal[i], -1);
TextDrawSetShadow(TextdrawRangoTotal[i], 0);
TextDrawSetOutline(TextdrawRangoTotal[i], 2);
TextDrawBackgroundColor(TextdrawRangoTotal[i], 255);
TextDrawFont(TextdrawRangoTotal[i], 3);
TextDrawSetProportional(TextdrawRangoTotal[i], 1);*/

/*TextdrawRangoTotal[i] = 
TextDrawCreate(573.294311, 368.500030, "Superviviente Avanzado");
TextDrawLetterSize(TextdrawRangoTotal[i], 0.236235, 1.471666);
TextDrawAlignment(TextdrawRangoTotal[i], 2);
TextDrawColor(TextdrawRangoTotal[i], 173080575);
TextDrawSetShadow(TextdrawRangoTotal[i], 3);
TextDrawSetOutline(TextdrawRangoTotal[i], 1);
TextDrawBackgroundColor(TextdrawRangoTotal[i], 255);
TextDrawFont(TextdrawRangoTotal[i], 3);
TextDrawSetProportional(TextdrawRangoTotal[i], 0);*/
}
//----------MAPAS
//umbrellita = GangZoneCreate(1069.400146484375, -2087.60009765625, 1299.400146484375, -1987.60009765625);
//OG = GangZoneCreate(2409.39990234375, -2163.60009765625, 2721.39990234375, -2047.60009765625);
//BD = GangZoneCreate(1956, -2114.39990234375, 2115, -1952.39990234375);

//ARC = GangZoneCreate(792.98828125, -1322.4765625, 944.98828125, -1143.4765625);
SD = GangZoneCreate(1450, -713, 1543, -645);
SWO = GangZoneCreate(634, -1399, 801, -1315);

//ResistenciaHP = GangZoneCreate(1727.5001831054688, -1942.5001831054688, 1817.5001831054688, -1858.5001831054688);



//ANDROMADA EVENTO
CreateVehicle(487, 1112.6960, -1651.5452, 28.9268, 40.6272, -1, -1 ,TIEMPO_RESPAWN);
CreateVehicle(513, 881.4818, -1238.2969, 17.0774, 0.2010, -1, -1 ,TIEMPO_RESPAWN);
CreateVehicle(548, 1464.2126, -80.2840, 22.3714, 0.0000, -1, -1 ,TIEMPO_RESPAWN);
CreateVehicle(470, 1481.9026, -81.0266, 21.0296, 44.8220, -1, -1 ,TIEMPO_RESPAWN);
CreateVehicle(470, 1479.0420, -84.0929, 21.0296, 44.8220, -1, -1 ,TIEMPO_RESPAWN);

CreateVehicle(418,1987.8031,-1274.0159,23.9129,287.0460,64,85,TIEMPO_RESPAWN); // moonbeam
CreateVehicle(466,2051.3564,-1694.5317,13.2965,89.3157,125,23,TIEMPO_RESPAWN);// Glendale
CreateVehicle(416,2299.5032,-1743.2651,13.6961,177.7186,19,45,TIEMPO_RESPAWN); // Ambulance
CreateVehicle(600,2473.0330,-1697.3143,13.2320,178.9271,64,29,TIEMPO_RESPAWN); // Picador
CreateVehicle(492,2502.0969,-1660.4142,13.1628,231.0495,45,53,TIEMPO_RESPAWN); // Greenwood
CreateVehicle(567,1802.2845,-1632.5010,13.3857,181.5668,43,83,TIEMPO_RESPAWN); // Savanna
CreateVehicle(575,1949.9518,-2123.3745,13.1424,196.0206,90,19,TIEMPO_RESPAWN); // Broadway
CreateVehicle(593,1894.5006,-2281.5935,14.0063,93.9463,45,4,TIEMPO_RESPAWN); // Dodo
CreateVehicle(412,1971.9209,-1234.2999,24.3969,56.5168,19,78,TIEMPO_RESPAWN); // Voodoo
CreateVehicle(522,1654.5574,-1368.2087,17.0212,239.2403,244,45,TIEMPO_RESPAWN); // NRG500
CreateVehicle(497,1564.3846,-1651.9226,28.6456,216.2024,0,46,TIEMPO_RESPAWN); // MaverickPolice
CreateVehicle(463,2148.1438,-1198.7534,23.4278,70.1712,116,119,TIEMPO_RESPAWN); // Freeway
CreateVehicle(411,1162.8896,-1078.4333,26.5102,53.0737,63,75,TIEMPO_RESPAWN); // Infernus
CreateVehicle(568,929.6633,-1868.0188,8.1107,139.4977,110,95,TIEMPO_RESPAWN); // Bandito
CreateVehicle(417,283.2691,-1881.2440,2.2264,60.3170,118,64,TIEMPO_RESPAWN); // Leviathan
CreateVehicle(520,1546.2952,-1354.9573,330.4009,83.4491,34,124,TIEMPO_RESPAWN); // Hydra
CreateVehicle(523,1527.6614,-684.5684,94.3213,270.1172,74,25,TIEMPO_RESPAWN); // sdmoto
CreateVehicle(427,1497.3876,-663.3038,94.8817,89.8016,0,0,TIEMPO_RESPAWN); // enforcersd
CreateVehicle(470,1468.0120,-673.5690,94.7394,359.3346,0,28,TIEMPO_RESPAWN); // patriotsd
CreateVehicle(487,1458.4219,-670.9885,100.6901,0.7065,18,94,TIEMPO_RESPAWN); // helisd
CreateVehicle(487,747.0281,-1371.9971,25.8690,0.7599,18,39,TIEMPO_RESPAWN); // mavswo
CreateVehicle(523,783.9688,-1336.0336,13.1112,270.5914,61,100,TIEMPO_RESPAWN); // hpswo
CreateVehicle(470,736.6965,-1333.6333,13.4272,90.6308,59,16,TIEMPO_RESPAWN); // patriotsd
CreateVehicle(427,764.1211,-1334.3572,13.6726,179.0276,0,0,TIEMPO_RESPAWN); // enforcerswo




new AndromadaEvento;
AndromadaEvento = CreateVehicle(592, 407.0966, 2501.1929, 17.3851, 89.4390, -1, -1, 100);
SetVehicleVirtualWorld(AndromadaEvento,33);
//
new PurgaVeh[7]; 
PurgaVeh[0] = CreateVehicle(560,1561.5837,-1593.8953,13.0937,313.5732,93,30,TIEMPO_RESPAWN); // purga1
SetVehicleVirtualWorld(PurgaVeh[0],33);

PurgaVeh[1] = CreateVehicle(599,1696.4780,-1661.1909,13.6416,186.3981,123,89,TIEMPO_RESPAWN); // purga2
SetVehicleVirtualWorld(PurgaVeh[1],33);

PurgaVeh[2] = CreateVehicle(599,1686.8164,-1832.9045,13.4442,220.5104,123,89,TIEMPO_RESPAWN); // purga3
SetVehicleVirtualWorld(PurgaVeh[2],33);

PurgaVeh[3] = CreateVehicle(463,1521.0266,-1873.0546,12.9112,172.8165,79,94,TIEMPO_RESPAWN); // purga4
SetVehicleVirtualWorld(PurgaVeh[3],33);

PurgaVeh[4] = CreateVehicle(487,1332.7780,-1400.9061,13.5304,88.4664,120,122,TIEMPO_RESPAWN); // purga4heli
SetVehicleVirtualWorld(PurgaVeh[4],33);

PurgaVeh[5] = CreateVehicle(470,1531.0675,-1471.5820,9.5001,146.3252,52,116,TIEMPO_RESPAWN); // patriotpurga
SetVehicleVirtualWorld(PurgaVeh[5],33);

PurgaVeh[6] = CreateVehicle(432,1382.5773,-1028.0647,26.2676,137.5810,44,63,TIEMPO_RESPAWN); // rhinopurga
SetVehicleVirtualWorld(PurgaVeh[6],33);

////
CreateVehicle(475,1579.0299,-2344.5315,13.3549,181.4166,14,104,TIEMPO_RESPAWN); // arcauto1
CreateVehicle(475,1579.0299,-2344.5315,13.3549,181.4166,14,104,TIEMPO_RESPAWN); // arcauto1verdadero
CreateVehicle(560,1745.5514,-2243.4927,20.6869,90.8805,48,118,TIEMPO_RESPAWN); // arcauto2verdadero
CreateVehicle(426,1799.2284,-2235.1431,13.2924,181.5750,116,113,TIEMPO_RESPAWN); // arcauto3verdadero
CreateVehicle(439,2635.1641,-2079.6782,13.4663,3.7904,3,94,TIEMPO_RESPAWN); // swoauto1
CreateVehicle(579,2658.4563,-2129.1201,13.4827,1.8293,55,96,TIEMPO_RESPAWN); // swoauto2
CreateVehicle(565,2487.0083,-2109.8306,13.1721,358.5746,0,112,TIEMPO_RESPAWN); // swoauto3
CreateVehicle(542,2418.8623,-1990.9120,13.2081,314.0789,10,86,TIEMPO_RESPAWN); // entornoveh1
CreateVehicle(549,2397.1040,-1746.1285,13.1675,203.6139,101,22,TIEMPO_RESPAWN); // entornoveh2
CreateVehicle(420,2369.8711,-1748.0599,13.2149,116.4731,39,100,TIEMPO_RESPAWN); // entornoveh3
CreateVehicle(523,2121.5190,-1925.2252,13.1131,137.4670,24,101,TIEMPO_RESPAWN); // entornoveh4
CreateVehicle(596,1966.2471,-1963.3427,13.3646,136.5412,0,1,TIEMPO_RESPAWN); // entornoveh5LSPD
CreateVehicle(596,1956.6334,-1969.5236,13.2117,226.0122,0,1,TIEMPO_RESPAWN); // entornoveh6LSPD
CreateVehicle(420,1803.1245,-1859.5798,13.2552,90.3246,95,61,TIEMPO_RESPAWN); // entornoveh7
CreateVehicle(420,1791.2910,-1852.2010,13.1911,12.3490,95,61,TIEMPO_RESPAWN); // entornoveh7
CreateVehicle(420,1776.3262,-1856.5583,13.1882,168.2849,95,61,TIEMPO_RESPAWN); // entornoveh7
CreateVehicle(420,1761.4686,-1854.4734,13.1935,59.6375,95,61,TIEMPO_RESPAWN); // entornoveh7
CreateVehicle(433,1658.3450,-1896.2648,13.9888,153.4348,36,51,TIEMPO_RESPAWN); // entornoveh8
CreateVehicle(433,1600.7717,-1730.9191,13.8226,334.5065,36,51,TIEMPO_RESPAWN); // entornoveh9militar
CreateVehicle(470,1591.4453,-1723.3635,13.5760,158.2364,90,83,TIEMPO_RESPAWN); // entornoveh9militar
CreateVehicle(470,1576.7266,-1730.1519,13.3822,7.3443,90,83,TIEMPO_RESPAWN); // entornoveh9militar
CreateVehicle(470,1558.5983,-1734.7059,13.3737,292.1964,90,83,TIEMPO_RESPAWN); // entornoveh9militar
CreateVehicle(601,1545.7813,-1693.6434,13.6825,232.5794,0,1,TIEMPO_RESPAWN); // entornoveh9policia
CreateVehicle(427,1538.0178,-1660.7571,13.6794,22.7763,0,1,TIEMPO_RESPAWN); // entornoveh9policia
CreateVehicle(427,1557.1260,-1622.4727,13.5905,312.5804,0,1,TIEMPO_RESPAWN); // entornoveh9policia
CreateVehicle(427,1589.6772,-1627.5704,13.5143,206.7423,0,1,TIEMPO_RESPAWN); // entornoveh9policia
CreateVehicle(598,1568.3478,-1695.4883,5.6282,183.9929,0,1,TIEMPO_RESPAWN); // entornoveh9policia
CreateVehicle(412,1272.6937,-1523.3927,13.4016,51.8701,79,29,TIEMPO_RESPAWN); // entornoauto10
CreateVehicle(416,1196.0359,-1329.3135,13.5509,64.9594,38,122,TIEMPO_RESPAWN); // ambulancentorn
CreateVehicle(468,1935.4274,-1407.9501,13.2327,348.1812,38,75,TIEMPO_RESPAWN); // entorno11
CreateVehicle(562,830.7216,-1397.8890,13.0502,257.8883,30,110,TIEMPO_RESPAWN); // vehenterono14
CreateVehicle(542,912.5486,-1411.8542,12.9678,233.3142,29,122,TIEMPO_RESPAWN); // enorno15
CreateVehicle(542,913.8990,-1370.0294,12.9556,22.5373,29,122,TIEMPO_RESPAWN); // enorno17

//AUTOS


Cura = CreatePickup(19134,1,2031.9863,-1405.6720,17.2280,0);


VidaHumanoPickup = CreatePickup(1314,1,1178.0979,-1329.9940,14.0874,0); 


ArmasSD = CreatePickup(2061,1,1463.1508,-681.4871,94.7900,0);
CuraSD = CreatePickup(2061,1,1528.6095,-668.2552,94.7500,0);

ArmasGOD = CreatePickup(2061,1,1332.9772, -1835.9972, 13.5031,0);
CuraGOD = CreatePickup(2061,1,1366.6448, -1813.0250, 36.0117,0);
	// CURA 1366.6448, -1813.0250, 36.0117
	// Armas 1332.9772, -1835.9972, 13.5031

Nemesis = CreatePickup(1314,1,2592.1558,-2020.1276,3.8657,0);



CuraSWO = CreatePickup(2061,1,768.0493,-1377.4204,13.7686,0);
ArmasSWO = CreatePickup(2061,1,737.7127,-1338.9451,13.5571,0);






//PickupDTienda = CreatePickup(2061,1,845.4930,-1167.8569,17.0266,0);
//CreateDynamic3DTextLabel("{FFFFFF}Tienda\n{FF0000}Stock: \n{1BFF00}disponible",              COLOR_WHITE,845.4930,-1167.8569,17.0266+0.6,10.0);

//PickupDUniformes = CreatePickup(1275,1,842.8470,-1172.9072,17.0266,0);
//CreateDynamic3DTextLabel("{FFFFFF}Uniformes\n{FF0000}Stock: \n{1BFF00}disponible",              COLOR_WHITE,842.8470,-1172.9072,17.0266+0.6,10.0);

//PickupDAereo = CreatePickup(19131,1,844.4697,-1195.4222,16.9766,0);
//CreateDynamic3DTextLabel("{FFFFFF}Aéreo\n{FF0000}Stock: \n{1BFF00}disponible",              COLOR_WHITE,844.4697,-1195.4222,16.9766+0.6,10.0);



////CreateDynamic3DTextLabel("{FFFFFF}Utiliza el comando\n{FFFF00}/shopresistencia\n{FFFFFF} Para comprar un item, disponible para: {33FF33}Humanos {FFFFFF}o {FF0000}ZombieS.",              COLOR_WHITE,1259.1577,-1304.3254,13.2421+0.6,4.0);

//SetPlayerMapIcon(playerid,21,2038.6298,-1970.8228,15.2804,32,0,MAPICON_GLOBAL); // consumibles

//CreateDynamic3DTextLabel("Utiliza el comando\n{0000BB}/productos\n{FFFFFF} Para comprar tu producto.",              COLOR_WHITE,2038.6298,-1970.8228,15.2804+0.6,4.0); //consumible
//CreateDynamic3DTextLabel("{FFFFFF}Utiliza el comando\n{FFFF00}/corporación\n{FFFFFF} para unirte a {FF0000}Corporación Legión {FFFFFF}.",              COLOR_WHITE,861.4953,-1205.4156,16.9766+0.6,4.0);
CreateDynamic3DTextLabel("{1BFF00}Antidoto{FFFFFF}/{FF0000}Virus\n{FFFFFF}Zona: {FF0000}Park",              COLOR_WHITE,2031.9863,-1405.6720,17.2280+0.6,4.0);

CreateDynamic3DTextLabel("{1BFF00}Suministro medico{FFFFFF}/{FF0000}Aporte: Incognito\n{FFFFFF}Zona: {FF0000}Centro",              COLOR_WHITE,1177.8774,-1329.9924,14.0774+1,4.0);
CreateDynamic3DTextLabel("{8213AB}Dealer\n{ABABAB}/dealer\n{AB3815}Stock: {65AB91}10.00.00", COLOR_WHITE,2437.6340,-1759.7843,14.7158+0.6,4.0);

///
///
	skinlist1 = LoadModelSelectionMenu("mSelection/skinsh.txt");
	skinlist2 = LoadModelSelectionMenu("mSelection/skinsz.txt");
	skinlist3 = LoadModelSelectionMenu("mSelection/skinsu.txt");
    skinlist4 = LoadModelSelectionMenu("mSelection/skinsc.txt");

    for(new i=0; i < sizeof(ZoneInfo); i++)
{
    ZoneID[i] = GangZoneCreate(ZoneInfo[i][zMinX], ZoneInfo[i][zMinY], ZoneInfo[i][zMaxX], ZoneInfo[i][zMaxY]);
}

 	  //  for (new vehiculo; vehiculo < MAX_VEHICLES; vehiculo ++)
 	   //	SetVehicleNumberPlate(vehiculo, "{FF0000}Inasión Zombie");
 	   	
	printf(" -Espacio libre de memoria: %i kb", heapspace() / 102400);
	return 1;
}

//==============================================================================
public OnGameModeExit()
{
	KillTimer(TimeServer);
	#if defined USE_MENUS
	DestroyAllMenus();
	#endif
	
//	TextDrawHideForAll(Textdraw0);
//	TextDrawDestroy(Textdraw0);

//	TextDrawHideForAll(Textdraw2);
//	TextDrawDestroy(Textdraw2);

//	TextDrawHideForAll(Textdraw0);
//	TextDrawDestroy(Textdraw0);
	
//	TextDrawHideForAll(Textdraw5);
//	TextDrawDestroy(Textdraw5);
	
	for(new i=0; i<19; i++)
	{
	    TextDrawHideForAll(HealthBar[i]);
	    TextDrawDestroy(HealthBar[i]);
	}
	
	TextDrawHideForAll(VistaZombie0);
	TextDrawDestroy(VistaZombie0);
	TextDrawHideForAll(VistaZombie1);
	TextDrawDestroy(VistaZombie1);
	TextDrawHideForAll(VistaZombie2);
	TextDrawDestroy(VistaZombie2);
	TextDrawHideForAll(VistaZombie3);
	TextDrawDestroy(VistaZombie3);
	TextDrawHideForAll(VistaZombie4);
	TextDrawDestroy(VistaZombie4);
	TextDrawHideForAll(TextoComandosZombies);
	TextDrawDestroy(TextoComandosZombies);
	TextDrawHideForAll(TextoComandosHumanos);
	TextDrawDestroy(TextoComandosHumanos);
 	for(new i = 0; i < MAX_PLAYERS; i++) OnPlayerDisconnect(i, 1);
}
//==============================================================================
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
		if(playertextid == Login5[playerid])
	    {
			new dialogstr[256];
			format(dialogstr,sizeof(dialogstr),"{FFFFFF}Tu cuenta esta registrada en nuestra base de datos, porfavor ingresa tu contraseña:");
			ShowPlayerDialog(playerid, 9048, DIALOG_STYLE_PASSWORD, "{FF0000}War Blood", dialogstr, "Login", "Cancelar");
			CancelSelectTextDraw(playerid);
	    }
		return 1;
}


public OnPlayerConnect(playerid)
{
    pvehicleid[playerid] = GetPlayerVehicleID(playerid);
	pvehicleid[playerid] = 0;
    pmodelid[playerid] = 0;
	ContadorMordidas[playerid] = 0;
	ZombieVariable[playerid] = 0;
	Skin_Humano[playerid] = 0;
	Skin_Zombie[playerid] = 0;
    MessageShown[playerid][0] = false; // Resetea el mensaje de zona bloqueada
    MessageShown[playerid][1] = false; // Resetea el mensaje de captura	

	KillTimer(VariableRegeneracionARMADURA[playerid]);
	KillTimer(VariableRegeneracionHP[playerid]);
	KillTimer(VariableRegeneracionHPPATREON[playerid]);

	CMDRegeneracionHP[playerid] = 0;
	CMDRegeneracionARMADURA[playerid] = 0;	
	EstaEnDesmadre[playerid] = false;
    EstaEnEvento[playerid] = false;

	

	//CheckVipExpiration(playerid);
 
   // PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/zx13jyildnyqq1g/Afterintro.mp3");
   // https://www.dropbox.com/s/3lkr7l0br9xe3hq/Anuncio%20de%20la%20Purga%20Espa%C3%B1ol.mp3?dl=0
   
    ShowPlayerMarkers(1);
    if(IsPlayerNPC(playerid))
	{
	    SetPlayerColor(playerid,COLOR_INVISIBLE);//condicion para hacer los bots visibles en radar
	    ShowPlayerMarkers(0); // Global, will show whatever distance
	    return 1;
	}
	

	pMoney[playerid] = 0;
    ChosenSkin[playerid] = 0;

    DudaEnviada[playerid] = 0;
    new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
   	new connecting_ip[32+1];
	GetPlayerIp(playerid,connecting_ip,32);
	new num_players_on_ip = GetNumberOfPlayersOnThisIP(connecting_ip);
	
	if(!strcmp("con",pame,true) || !strcmp("aux",pame,true) || !strcmp("prn",pame,true) || !strcmp("lptn",pame,true) || !strcmp("nul",pame,true) || !strcmp("clock$",pame,true))
	{
	    format(string2, sizeof(string2), "%s a Sido Baneado Automaticamente [Razon: Nombre Reservado]", pame);
    	printf(string2);
    	//SendClientMessageToAll(red, string2);
		//Ban(playerid);
		CambiarNickNoob(playerid);
	}
	
		if(NickSpam(pame))
	{
	    format(string2, sizeof(string2), "ID: [%i] a Sido Baneado Automaticamente [Razon: NickName Spam]", playerid);
    	printf(string2);
    	//SendClientMessageToAll(red, string2);
		//Ban(playerid);
		CambiarNickNoob(playerid);
	}

	if(AntiBotts==1){
	if(num_players_on_ip > MAX_CONNECTIONS_FROM_IP){
 	format(string2, sizeof(string2), "%s a Sido Baneado Automaticamente [Razon: Bot ( %d Bots Detectados )]", pame,MAX_CONNECTIONS_FROM_IP);
	SendClientMessageToAll(red, string2);
 	printf(string2);
	Ban(playerid);
  	return 1;
	}
	}
	
	new CurIP[16]; GetPlayerIp(playerid, CurIP, sizeof CurIP);
	for(new i=0; i<MAX_PLAYERS; i++)
    {
    	if(strlen(IPDATA[i][IP_ADDRESS]) > 2 && !strcmp(CurIP,IPDATA[i][IP_ADDRESS],false))
     	{
      		printf("ID %i Posible re conexión luego de ser kickeado.",playerid);
          //  CrashPlayer(playerid, CurIP);
		  Kick(playerid);
            break;
        }
	}
    if (!strcmp(CurIP, JoinIP, false))
	{
	    JoinAttempts++;
	    if (JoinAttempts >= MAX_R_ATTEMPTS)
	    {
	       // CrashPlayer(playerid, CurIP);
		   Kick(playerid);
	    }
	} else JoinAttempts = 0;
	
    GetPlayerIp(playerid, JoinIP, sizeof(JoinIP));
	
	UsarCMD[playerid] = 0;
    UsarCMDNOMBRE[playerid] = 0;
	ADpm[playerid] = 0;
    CLASEZ[playerid] = 0; 	  
	CLASEH[playerid] = 0;	
	PlayerInfo[playerid][Deaths] = 0;
	PlayerInfo[playerid][Kills] = 0;
	PlayerInfo[playerid][Jailed] = 0;
	PlayerInfo[playerid][Frozen] = 0;
	PlayerInfo[playerid][Level] = 0;
	PlayerInfo[playerid][RANGO_PLAYER] = 0;
	PlayerInfo[playerid][LEERACTIVADO_PLAYER] = 0;
	PlayerInfo[playerid][KILLS_PLAYER] = 0;

	PlayerInfo[playerid][EXTASIS_PLAYER_2] = 0;
	PlayerInfo[playerid][LSD_PLAYER_2] = 0;
	PlayerInfo[playerid][FENTANILO_PLAYER_2] = 0;
	PlayerInfo[playerid][GHB_PLAYER_2] = 0;
	PlayerInfo[playerid][ALUCINOGENO_PLAYER] = 0;
	PlayerInfo[playerid][HEROINA_PLAYER] = 0;
	PlayerInfo[playerid][INHALANTES_PLAYER] = 0;
	PlayerInfo[playerid][KETAMINA_PLAYER] = 0;
	PlayerInfo[playerid][KHAT_PLAYER] = 0;
	PlayerInfo[playerid][BONUS_PLAYER] = 0;
	PlayerInfo[playerid][KRATOM_PLAYER] = 0;



	PlayerInfo[playerid][MISION1_PLAYER] = 0;
	PlayerInfo[playerid][MISION2_PLAYER] = 0;
	PlayerInfo[playerid][PUNTOS_PLAYER_2] = 0;
    PlayerInfo[playerid][CONQUISTAS_PLAYER] = 0;
	PlayerInfo[playerid][CLAN_TIENE] = 0;
	PlayerInfo[playerid][CLAN_TIENELIDER] = 0;
	PlayerInfo[playerid][CLAN_TIENEREP] = 0;
	PlayerInfo[playerid][EXTERMINADOR_TIENE] = 0;
	PlayerInfo[playerid][VIP_TIENE] = 0;
	PlayerInfo[playerid][VIP_EXPIRATION] = 0;
	PlayerInfo[playerid][pVip] = 0;
	PlayerInfo[playerid][Hide] = 0;
	PlayerInfo[playerid][LoggedIn] = 0;
	PlayerInfo[playerid][Registered] = 0;
	PlayerInfo[playerid][God] = 0;
	PlayerInfo[playerid][GodCar] = 0;
	PlayerInfo[playerid][Spawned] = 0;
	PlayerInfo[playerid][TimesSpawned] = 0;
	PlayerInfo[playerid][Muted] = 0;
	PlayerInfo[playerid][MuteWarnings] = 0;
	PlayerInfo[playerid][pVisivel] = 0;   // variable npc
	PlayerInfo[playerid][pBarulho] = 0;   // variable npc
	PlayerInfo[playerid][tSpawnZ] = 60;     // variable npc
	PlayerInfo[playerid][pVida] = 0;        // var npc
	PlayerInfo[playerid][Warnings] = 0;
	PlayerInfo[playerid][Caps] = 0;
	PlayerInfo[playerid][DoorsLocked] = 0;
	PlayerInfo[playerid][pCar] = -1;
	PlayerInfo[playerid][SpamCount] = 0;
	PlayerInfo[playerid][SpamTime] = 0;
	PlayerInfo[playerid][FailLogin] = 0;
	HaReportado[playerid]=0;
//	XDeaths[playerid] = 0;
//	LastDeath[playerid] = 0;
	warneded[playerid] = 0;
	WarnWeaponsHack[playerid] = 0;
	WarnWeaponsGoogles[playerid] = 0;
	JetpackLegal[playerid] = 0;
	ELOY9N_ResetPlayerWeapons(playerid);
//	InitFly(playerid);
//	EstaEnFly[playerid] = 0;
	YaUsoNuclear[playerid]=0;
	BuscadoPorNuclear[playerid]=0;
	HanDesactivadaoLaBomba[playerid]=0;

	#if EnableTwoRcon == true
	PlayerInfo[playerid][MaxRcon] = 0;
	#endif

	PlayerInfo[playerid][ConnectTime] = gettime();
	//------------------------------------------------------
	new PlayerName[MAX_PLAYER_NAME], IP[16];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	GetPlayerIp(playerid,tmp3,50);
	GetPlayerIp(playerid, IP, sizeof IP);
	//-----------------------------------------------------
	if(ServerInfo[ConnectMessages] == 1)
	{
	    new pAKA[256]; pAKA = dini_Get("ladmin/config/aka.txt",tmp3);
		if (strlen(pAKA) < 10) format(str,sizeof(str),"%s (%d) ha entrado al servidor, [ IP: %s ]", PlayerName, playerid, IP);
		else if (!strcmp(pAKA,PlayerName,true)) format(str,sizeof(str),"%s (%d) ha entrado al servidor, [ IP: %s ]", PlayerName, playerid, IP);
		else format(str,sizeof(str),"%s (%d) ha entrado al servidor [ IP: %s ] (Aka %s)", PlayerName, playerid, IP, pAKA );

		format(string2,sizeof(string2),"%s (%d) ha entrado al servidor.", PlayerName, playerid); //*** %s (%d) ha entrado al servidor
		SendClientMessageToAll(green,string2);
	

		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerid != i)
		{
			if(PlayerInfo[i][Level] >= 8) SendClientMessage(i,grey,str);
			//else {
		}
	}

	//-----------------------------------------------------
    if (dUserINT(PlayerName2(playerid)).("banned") == 1)
    {
        SendClientMessage(playerid, red, "Este nombre esta baneado de este servidor!");
		format(string2,sizeof(string2),"%s ID:%d ha sido auto expulsado. Razon: Nombre baneado del servidor",PlayerName,playerid);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerid != i)
		{  
			if(PlayerInfo[i][Level] > 1) SendClientMessage(i,grey,string2);
			}
		SaveToFile("KickLog",string2);  Kick(playerid);
    }
	//-----------------------------------------------------
	if(ServerInfo[NameKick] == 1) {
		for(new s = 0; s < BadNameCount; s++) {
  			if(!strcmp(BadNames[s],PlayerName,true)) {
				SendClientMessage(playerid,red, "Tu nombre esta en nuestra lista negra, has sido expulsado.");
				format(string2,sizeof(string2),"%s ID:%d ha sido auto expulsado. (Razon: Nombre prohibido)",PlayerName,playerid);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerid != i)
		{
			if(PlayerInfo[i][Level] > 1) SendClientMessage(i,grey,string2);
			}
			    crashear(playerid);
				SaveToFile("KickLog",string2);
			 	Kick(playerid);
				return 1;
			}
		}
	}
	//-----------------------------------------------------
	if(ServerInfo[PartNameKick] == 1) {
		for(new s = 0; s < BadPartNameCount; s++) {
			new pos;
			while((pos = strfind(PlayerName,BadPartNames[s],true)) != -1) for(new i = pos, j = pos + strlen(BadPartNames[s]); i < j; i++)
			{
				SendClientMessage(playerid,red, "Su nombre no esta permitido en este servidor, has sido expulsado.");
				format(string2,sizeof(string2),"%s ID:%d ha sido auto expulsado. (Razon: Nombre prohibido)",PlayerName,playerid);
				for(new a = 0; a < MAX_PLAYERS; a++) if(IsPlayerConnected(a) && playerid != i)
			{
			if(PlayerInfo[a][Level] > 1) SendClientMessage(a,grey,string2);
			}
				print(string2);
				SaveToFile("KickLog",string2);  Kick(playerid);
				return 1;
			}
		}
	}
	//-----------------Super Ban Serial----------------------
	new sHD[100], pSHD[256];
	gpci(playerid, sHD, sizeof(sHD));

	pSHD = dini_Get("ladmin/config/SHD.txt",sHD);

	if(strcmp(pSHD,sHD,true))
	{
	    new str3[128], Nombre[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, Nombre, sizeof(Nombre));
    	SendClientMessage(playerid, lightblue, "You are banned from this server.");
		Ban(playerid);
		format(str3,sizeof(str3),"%s ha sido baneado automaticamente. Razón: {ff0000}Evadir ban ([S]Ban)", Nombre);
		SendClientMessageToAll(0xFFFFFFFF, str3);
		SaveToFile("BanLog",str3);
		}
	//------------------------------------------------
	if(ServerInfo[Locked] == 1) {
		PlayerInfo[playerid][AllowedIn] = false;
		SendClientMessage(playerid,red,"El Servidor esta Bloqueado!  Tienes 20 segundos para ingresar la contraseña del servidor antes de ser expulsado!");
		SendClientMessage(playerid,red,"usa /password [contraseña] para poder jugar");
		LockKickTimer[playerid] = SetTimerEx("AutoKick", 20000, 0, "i", playerid);
	}
	//-----------------------------------------------------
	if(strlen(dini_Get("ladmin/config/aka.txt", tmp3)) == 0) dini_Set("ladmin/config/aka.txt", tmp3, PlayerName);
 	else
	{
	    if( strfind( dini_Get("ladmin/config/aka.txt", tmp3), PlayerName, true) == -1 )
		{
		    format(string2,sizeof(string2),"%s,%s", dini_Get("ladmin/config/aka.txt",tmp3), PlayerName);
		    dini_Set("ladmin/config/aka.txt", tmp3, string2);
		}
	}
   // CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/audiomsg8");
	SendClientMessage(playerid, COLOR_WHITE, "Ingresaste a War Blood {C2A2DA}2024." );

	PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/scl/fi/t127yv2v8qr6oymhhojkg/WarBlood_Login.mp3?rlkey=hodlusldvnuorcaxyvrobct9s&st=wllp6d0w&dl");


	SetPlayerColor(playerid,0xFFFFFFAA);
	//MAPICON
	SetPlayerMapIcon(playerid,18,2050.0703, -1401.2109, 33.6797,22,0,MAPICON_GLOBAL); // cura park
	SetPlayerMapIcon(playerid,19,1178.0979,-1329.9940,14.0874,62,0,MAPICON_GLOBAL); // cura hospt hombre
	SetPlayerMapIcon(playerid,20,2437.6340,-1759.7843,14.7158,24,0,MAPICON_GLOBAL); // dealer

	
	Login0[playerid] = CreatePlayerTextDraw(playerid, 644.381286, 141.766693, "usebox");
	PlayerTextDrawLetterSize(playerid, Login0[playerid], 0.000000, 16.735206);
	PlayerTextDrawTextSize(playerid, Login0[playerid], -6.285710, 0.000000);
	PlayerTextDrawAlignment(playerid, Login0[playerid], 1);
	PlayerTextDrawColor(playerid, Login0[playerid], 0);
	PlayerTextDrawUseBox(playerid, Login0[playerid], true);
	PlayerTextDrawBoxColor(playerid, Login0[playerid], 102);
	PlayerTextDrawSetShadow(playerid, Login0[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Login0[playerid], 0);
	PlayerTextDrawFont(playerid, Login0[playerid], 0);

	Login1[playerid] = CreatePlayerTextDraw(playerid, 264.470581, 171.499984, ""); // War
	PlayerTextDrawLetterSize(playerid, Login1[playerid], 0.736117, 2.434168);
	PlayerTextDrawAlignment(playerid, Login1[playerid], 1);
	PlayerTextDrawColor(playerid, Login1[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Login1[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Login1[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Login1[playerid], 51);
	PlayerTextDrawFont(playerid, Login1[playerid], 3);
	PlayerTextDrawSetProportional(playerid, Login1[playerid], 1);

	Login2[playerid] = CreatePlayerTextDraw(playerid, 282.823516, 195.416641, ""); // Blood
	PlayerTextDrawLetterSize(playerid, Login2[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, Login2[playerid], 1);
	PlayerTextDrawColor(playerid, Login2[playerid], -77196545);
	PlayerTextDrawSetShadow(playerid, Login2[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Login2[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Login2[playerid], 51);
	PlayerTextDrawFont(playerid, Login2[playerid], 1);
	PlayerTextDrawSetProportional(playerid, Login2[playerid], 1);

	Login4[playerid] = CreatePlayerTextDraw(playerid, 378.666717, 234.566452, "usebox");
	PlayerTextDrawLetterSize(playerid, Login4[playerid], 0.000000, 1.759524);
	PlayerTextDrawTextSize(playerid, Login4[playerid], 255.619079, 0.000000);
	PlayerTextDrawAlignment(playerid, Login4[playerid], 1);
	PlayerTextDrawColor(playerid, Login4[playerid], 0);
	PlayerTextDrawUseBox(playerid, Login4[playerid], true);
	PlayerTextDrawBoxColor(playerid, Login4[playerid], 102);
	PlayerTextDrawSetShadow(playerid, Login4[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Login4[playerid], 0);
	PlayerTextDrawFont(playerid, Login4[playerid], 3);

	Login5[playerid] = CreatePlayerTextDraw(playerid, 273.809600, 236.266632, "INGRESAR");
	PlayerTextDrawLetterSize(playerid, Login5[playerid], 0.419523, 1.242667);
	PlayerTextDrawAlignment(playerid, Login5[playerid], 1);
	PlayerTextDrawColor(playerid, Login5[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Login5[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Login5[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Login5[playerid], 51);
	PlayerTextDrawFont(playerid, Login5[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Login5[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, Login5[playerid], true);

//GOD
RemoveBuildingForPlayer(playerid, 4231, 1342.050, -1800.219, 25.429, 0.250);
RemoveBuildingForPlayer(playerid, 4112, 1330.380, -1793.079, 22.968, 0.250);
RemoveBuildingForPlayer(playerid, 4049, 1330.380, -1793.079, 22.968, 0.250);
RemoveBuildingForPlayer(playerid, 4219, 1330.329, -1792.589, 23.492, 0.250);
RemoveBuildingForPlayer(playerid, 1265, 1338.790, -1775.319, 12.968, 0.250);
RemoveBuildingForPlayer(playerid, 1265, 1337.010, -1773.869, 13.000, 0.250);
RemoveBuildingForPlayer(playerid, 1372, 1337.699, -1774.729, 12.664, 0.250);
RemoveBuildingForPlayer(playerid, 1230, 1338.959, -1796.000, 13.664, 0.250);
RemoveBuildingForPlayer(playerid, 1221, 1338.969, -1793.729, 12.984, 0.250);
RemoveBuildingForPlayer(playerid, 1226, 1341.449, -1755.479, 16.421, 0.250);
RemoveBuildingForPlayer(playerid, 1220, 1338.939, -1795.459, 12.929, 0.250);
RemoveBuildingForPlayer(playerid, 1220, 1338.949, -1796.430, 12.929, 0.250);
RemoveBuildingForPlayer(playerid, 1221, 1342.520, -1805.069, 12.984, 0.250);
RemoveBuildingForPlayer(playerid, 1220, 1342.270, -1806.199, 12.929, 0.250);
RemoveBuildingForPlayer(playerid, 1230, 1342.630, -1807.040, 12.976, 0.250);
RemoveBuildingForPlayer(playerid, 1220, 1338.130, -1816.579, 12.929, 0.250);
RemoveBuildingForPlayer(playerid, 1220, 1338.900, -1816.160, 12.929, 0.250);
RemoveBuildingForPlayer(playerid, 1230, 1338.079, -1815.760, 12.976, 0.250);
RemoveBuildingForPlayer(playerid, 1372, 1336.790, -1816.300, 12.664, 0.250);
RemoveBuildingForPlayer(playerid, 1265, 1336.880, -1818.229, 12.984, 0.250);
RemoveBuildingForPlayer(playerid, 1230, 1340.130, -1835.040, 12.976, 0.250);
RemoveBuildingForPlayer(playerid, 1220, 1340.890, -1835.369, 12.929, 0.250);
RemoveBuildingForPlayer(playerid, 1220, 1340.869, -1834.479, 12.929, 0.250);
RemoveBuildingForPlayer(playerid, 1265, 1336.160, -1844.020, 12.984, 0.250);
RemoveBuildingForPlayer(playerid, 1372, 1336.339, -1842.849, 12.664, 0.250);
RemoveBuildingForPlayer(playerid, 1265, 1336.380, -1841.540, 13.039, 0.250);
RemoveBuildingForPlayer(playerid, 1265, 1337.260, -1841.880, 13.000, 0.250);
RemoveBuildingForPlayer(playerid, 1283, 1345.770, -1740.619, 15.625, 0.250);
RemoveBuildingForPlayer(playerid, 1283, 1357.520, -1732.939, 15.625, 0.250);
RemoveBuildingForPlayer(playerid, 4021, 1371.819, -1754.819, 19.046, 0.250);
RemoveBuildingForPlayer(playerid, 4051, 1371.819, -1754.819, 19.046, 0.250);
//JIN
RemoveBuildingForPlayer(playerid, 4564, 1666.489, -1246.180, 123.085, 0.250);
RemoveBuildingForPlayer(playerid, 4579, 1666.489, -1246.180, 123.085, 0.250);
//
//AEREO
	RemoveBuildingForPlayer(playerid, 1290, 1922.199, -2641.409, 18.476, 0.250);
	RemoveBuildingForPlayer(playerid, 1259, 1926.989, -2684.129, 15.687, 0.250);
	RemoveBuildingForPlayer(playerid, 1268, 1926.989, -2684.129, 15.687, 0.250);
	RemoveBuildingForPlayer(playerid, 3629, 1889.660, -2666.010, 18.882, 0.250);
	RemoveBuildingForPlayer(playerid, 3672, 1889.660, -2666.010, 18.882, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1855.800, -2641.409, 18.476, 0.250);

//
//Escondidas
	RemoveBuildingForPlayer(playerid, 1775, 2155.909, 1606.770, 1000.049, 0.250);
	RemoveBuildingForPlayer(playerid, 1776, 2155.840, 1607.880, 1000.059, 0.250);
//eartlf
RemoveBuildingForPlayer(playerid, 5673, 2286.3750, -1371.2734, 22.9531, 0.25);
RemoveBuildingForPlayer(playerid, 5674, 2286.3750, -1371.2734, 22.9531, 0.25);
RemoveBuildingForPlayer(playerid, 17535, 2364.0547, -1391.5313, 41.3516, 0.25);
RemoveBuildingForPlayer(playerid, 17724, 2337.1797, -1342.6250, 23.3281, 0.25);
RemoveBuildingForPlayer(playerid, 17763, 2572.1250, -1472.7031, 34.9609, 0.25);
RemoveBuildingForPlayer(playerid, 17822, 2577.2422, -1447.2344, 30.7734, 0.25);
RemoveBuildingForPlayer(playerid, 17847, 2550.6641, -1455.3047, 28.8672, 0.25);
RemoveBuildingForPlayer(playerid, 3647, 2428.0781, -1273.6641, 26.0000, 0.25);
RemoveBuildingForPlayer(playerid, 3647, 2475.8984, -1296.8281, 31.4766, 0.25);
RemoveBuildingForPlayer(playerid, 3656, 2620.1875, -1086.1875, 71.3828, 0.25);
RemoveBuildingForPlayer(playerid, 3647, 2513.4688, -1111.8281, 57.8359, 0.25);
RemoveBuildingForPlayer(playerid, 3647, 2406.5469, -1112.5000, 41.5391, 0.25);
RemoveBuildingForPlayer(playerid, 3696, 2336.9219, -1273.5469, 31.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3696, 2336.9219, -1211.4219, 31.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3699, 2471.6719, -1428.1328, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3699, 2490.6953, -1428.1328, 30.5156, 0.25);
RemoveBuildingForPlayer(playerid, 3699, 2471.6719, -1413.8984, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3699, 2490.6953, -1379.8281, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3699, 2471.6719, -1379.8281, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3699, 2490.6953, -1362.6563, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3699, 2471.6719, -1362.6563, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3703, 2666.7266, -1219.7109, 62.0391, 0.25);
RemoveBuildingForPlayer(playerid, 3650, 2426.5547, -1321.8984, 26.9297, 0.25);
RemoveBuildingForPlayer(playerid, 3650, 2532.2578, -1235.9922, 45.3281, 0.25);
RemoveBuildingForPlayer(playerid, 3650, 2618.5547, -1099.9063, 70.9609, 0.25);
RemoveBuildingForPlayer(playerid, 3706, 2490.8203, -1232.4375, 38.7422, 0.25);
RemoveBuildingForPlayer(playerid, 3706, 2468.9375, -1206.9844, 37.6484, 0.25);
RemoveBuildingForPlayer(playerid, 3706, 2577.8984, -1095.5547, 68.0625, 0.25);
RemoveBuildingForPlayer(playerid, 3562, 2470.8359, -1109.8594, 45.5547, 0.25);
RemoveBuildingForPlayer(playerid, 3563, 2438.7891, -1109.7109, 44.1484, 0.25);
RemoveBuildingForPlayer(playerid, 3592, 2550.8125, -1229.8672, 50.3984, 0.25);
RemoveBuildingForPlayer(playerid, 3706, 2390.1094, -1365.0078, 25.3281, 0.25);
RemoveBuildingForPlayer(playerid, 17964, 2337.3359, -1330.8516, 25.7109, 0.25);
RemoveBuildingForPlayer(playerid, 17965, 2322.2813, -1355.1953, 25.4063, 0.25);
RemoveBuildingForPlayer(playerid, 17966, 2347.9219, -1364.2891, 27.1563, 0.25);
RemoveBuildingForPlayer(playerid, 1261, 2356.3906, -1313.9922, 39.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1266, 2317.5859, -1355.8281, 37.2188, 0.25);
RemoveBuildingForPlayer(playerid, 17970, 2364.0547, -1391.5313, 41.3516, 0.25);
RemoveBuildingForPlayer(playerid, 17536, 2572.1250, -1472.7031, 34.9609, 0.25);
RemoveBuildingForPlayer(playerid, 17543, 2322.2813, -1355.1953, 25.4063, 0.25);
RemoveBuildingForPlayer(playerid, 1260, 2317.5938, -1355.8203, 37.2266, 0.25);
RemoveBuildingForPlayer(playerid, 17545, 2337.1797, -1342.6250, 23.3281, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2336.9844, -1350.5781, 22.7266, 0.25);
RemoveBuildingForPlayer(playerid, 17544, 2337.3359, -1330.8516, 25.7109, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2338.9141, -1336.4766, 22.7266, 0.25);
RemoveBuildingForPlayer(playerid, 17542, 2347.9219, -1364.2891, 27.1563, 0.25);
RemoveBuildingForPlayer(playerid, 955, 2352.1797, -1357.1563, 23.7734, 0.25);
RemoveBuildingForPlayer(playerid, 1267, 2356.3906, -1313.9922, 39.6953, 0.25);
RemoveBuildingForPlayer(playerid, 3697, 2336.9219, -1273.5469, 31.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3646, 2390.1094, -1365.0078, 25.3281, 0.25);
RemoveBuildingForPlayer(playerid, 3651, 2426.5547, -1321.8984, 26.9297, 0.25);
RemoveBuildingForPlayer(playerid, 3648, 2428.0781, -1273.6641, 26.0000, 0.25);
RemoveBuildingForPlayer(playerid, 3698, 2471.6719, -1428.1328, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3698, 2471.6719, -1413.8984, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3698, 2471.6719, -1379.8281, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3698, 2490.6953, -1428.1328, 30.5156, 0.25);
RemoveBuildingForPlayer(playerid, 3698, 2490.6953, -1379.8281, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 2528.2578, -1439.6875, 31.9375, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 2544.0547, -1449.3125, 34.8125, 0.25);
RemoveBuildingForPlayer(playerid, 17689, 2550.6641, -1455.3047, 28.8672, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 2555.4219, -1439.6875, 36.3125, 0.25);
RemoveBuildingForPlayer(playerid, 3698, 2471.6719, -1362.6563, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3698, 2490.6953, -1362.6563, 30.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3648, 2475.8984, -1296.8281, 31.4766, 0.25);
RemoveBuildingForPlayer(playerid, 3697, 2336.9219, -1211.4219, 31.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3648, 2406.5469, -1112.5000, 41.5391, 0.25);
RemoveBuildingForPlayer(playerid, 3646, 2490.8203, -1232.4375, 38.7422, 0.25);
RemoveBuildingForPlayer(playerid, 3646, 2468.9375, -1206.9844, 37.6484, 0.25);
RemoveBuildingForPlayer(playerid, 3651, 2532.2578, -1235.9922, 45.3281, 0.25);
RemoveBuildingForPlayer(playerid, 3589, 2550.8125, -1229.8672, 50.3984, 0.25);
RemoveBuildingForPlayer(playerid, 3555, 2438.7891, -1109.7109, 44.1484, 0.25);
RemoveBuildingForPlayer(playerid, 3582, 2470.8359, -1109.8594, 45.5547, 0.25);
RemoveBuildingForPlayer(playerid, 3648, 2513.4688, -1111.8281, 57.8359, 0.25);
RemoveBuildingForPlayer(playerid, 1297, 2567.3047, -1449.3125, 37.1094, 0.25);
RemoveBuildingForPlayer(playerid, 17687, 2577.2422, -1447.2344, 30.7734, 0.25);
RemoveBuildingForPlayer(playerid, 3646, 2577.8984, -1095.5547, 68.0625, 0.25);
RemoveBuildingForPlayer(playerid, 3702, 2666.7266, -1219.7109, 62.0391, 0.25);
RemoveBuildingForPlayer(playerid, 3651, 2618.5547, -1099.9063, 70.9609, 0.25);
RemoveBuildingForPlayer(playerid, 3655, 2620.1875, -1086.1875, 71.3828, 0.25);
RemoveBuildingForPlayer(playerid, 3299, 2523.5078, -1066.9063, 69.1094, 0.25);
RemoveBuildingForPlayer(playerid, 3283, 2523.5078, -1066.9063, 69.1094, 0.25);
//
//MAS MAPEOS
RemoveBuildingForPlayer(playerid, 4868, 2139.6094, -2292.4219, 15.3203, 0.25);
RemoveBuildingForPlayer(playerid, 3672, 2112.9375, -2384.6172, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 5045, 2139.6094, -2292.4219, 15.3203, 0.25);
RemoveBuildingForPlayer(playerid, 5073, 2136.6328, -2348.0859, 16.3984, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1650.7969, -2271.1953, 5.2344, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1650.7891, -2303.5313, 5.2344, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1653.9609, -2267.7344, -4.0234, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1653.9609, -2301.9063, -4.0234, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1658.1641, -2300.5703, 8.7422, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1658.1641, -2271.8906, 8.7422, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1673.2969, -2301.9063, -4.0234, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1673.2969, -2267.7344, -4.0234, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1695.2578, -2301.9063, -4.0234, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1697.7031, -2302.9531, 5.2344, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1695.2578, -2267.7344, -4.0234, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1696.0859, -2271.1953, 5.2344, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1712.3203, -2303.1484, 5.2344, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1715.7031, -2301.9063, -4.0234, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1715.7031, -2267.7344, -4.0234, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1712.3203, -2271.1953, 5.2344, 0.25);
RemoveBuildingForPlayer(playerid, 3754, 2057.8750, -2677.5000, 16.9688, 0.25);
RemoveBuildingForPlayer(playerid, 3629, 2112.9375, -2384.6172, 18.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3687, 2403.5234, -2224.2422, 15.6563, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 1992.3047, -2146.4219, 15.1328, 0.25);
RemoveBuildingForPlayer(playerid, 5333, 2374.3828, -2171.4688, 21.1797, 0.25);
RemoveBuildingForPlayer(playerid, 5334, 2374.3828, -2171.4688, 21.1797, 0.25);
RemoveBuildingForPlayer(playerid, 5346, 2016.3125, -1968.9219, 17.6250, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 1992.2969, -2146.4141, 15.0703, 0.25);
RemoveBuildingForPlayer(playerid, 3622, 2403.5234, -2224.2422, 15.6563, 0.25);
RemoveBuildingForPlayer(playerid, 5169, 2016.3125, -1968.9219, 17.6250, 0.25);
RemoveBuildingForPlayer(playerid, 5546, 2041.6641, -1672.3125, 12.4766, 0.25);
RemoveBuildingForPlayer(playerid, 5507, 2041.6641, -1672.3125, 12.4766, 0.25);
//FIN MAS MAPEOS
//ZONA PARK
RemoveBuildingForPlayer(playerid, 5400, 1913.1328, -1370.5000, 17.7734, 0.25);
//Z
	//GANGTON MAPEO
RemoveBuildingForPlayer(playerid, 4753, 1451.6172, -966.3828, 57.4453, 0.25);
RemoveBuildingForPlayer(playerid, 1261, 1495.3906, -945.6328, 48.8125, 0.25);
RemoveBuildingForPlayer(playerid, 4734, 1451.6172, -966.3828, 57.4453, 0.25);
RemoveBuildingForPlayer(playerid, 1267, 1495.3906, -945.6328, 48.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3244, 2632.3906, -1954.8203, 12.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 2739.9844, -2089.0547, 18.5000, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 2794.8047, -2074.5156, 17.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 2766.5234, -2074.5156, 18.5000, 0.25);
RemoveBuildingForPlayer(playerid, 3686, 2448.1328, -2075.6328, 16.0469, 0.25);
RemoveBuildingForPlayer(playerid, 5296, 2652.9297, -2049.2422, 18.1250, 0.25);
RemoveBuildingForPlayer(playerid, 3647, 2694.0156, -2026.0781, 15.2656, 0.25);
RemoveBuildingForPlayer(playerid, 3654, 2506.9766, -1991.7813, 14.7422, 0.25);
RemoveBuildingForPlayer(playerid, 3647, 2485.1094, -2027.0781, 15.2422, 0.25);
RemoveBuildingForPlayer(playerid, 3706, 2466.6172, -2027.3672, 14.9609, 0.25);
RemoveBuildingForPlayer(playerid, 3706, 2509.1172, -2027.6250, 15.0469, 0.25);
RemoveBuildingForPlayer(playerid, 5307, 2652.9297, -2049.2422, 18.1250, 0.25);
RemoveBuildingForPlayer(playerid, 3748, 2238.2188, -1916.1094, 15.1875, 0.25);
RemoveBuildingForPlayer(playerid, 5295, 2413.0547, -2106.4219, 23.0547, 0.25);
RemoveBuildingForPlayer(playerid, 3628, 2238.2188, -1916.1094, 15.1875, 0.25);
RemoveBuildingForPlayer(playerid, 3754, 2663.5078, -2162.9375, 14.4063, 0.25);
RemoveBuildingForPlayer(playerid, 3567, 2446.8281, -2075.8438, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3567, 2438.3594, -2075.8438, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3627, 2448.1328, -2075.6328, 16.0469, 0.25);
RemoveBuildingForPlayer(playerid, 3646, 2466.6172, -2027.3672, 14.9609, 0.25);
RemoveBuildingForPlayer(playerid, 3648, 2485.1094, -2027.0781, 15.2422, 0.25);
RemoveBuildingForPlayer(playerid, 3646, 2509.1172, -2027.6250, 15.0469, 0.25);
RemoveBuildingForPlayer(playerid, 3649, 2506.9766, -1991.7813, 14.7422, 0.25);
RemoveBuildingForPlayer(playerid, 5243, 2516.5547, -1851.7734, 16.5234, 0.25);
RemoveBuildingForPlayer(playerid, 3648, 2694.0156, -2026.0781, 15.2656, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 2739.9844, -2089.0547, 18.5000, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 2766.5234, -2074.5156, 18.5000, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 2794.8047, -2074.5156, 17.7578, 0.25);
RemoveBuildingForPlayer(playerid, 17708, 2342.6094, -1608.8125, 16.9141, 0.25);
RemoveBuildingForPlayer(playerid, 17757, 2450.8750, -1757.3984, 16.0000, 0.25);
RemoveBuildingForPlayer(playerid, 17762, 2351.5703, -1596.0703, 22.1250, 0.25);
RemoveBuildingForPlayer(playerid, 17765, 2436.2188, -1788.5625, 15.0234, 0.25);
RemoveBuildingForPlayer(playerid, 17857, 2583.2969, -1731.9297, 11.0000, 0.25);
RemoveBuildingForPlayer(playerid, 3695, 2239.9297, -1790.6953, 17.0078, 0.25);
RemoveBuildingForPlayer(playerid, 3695, 2282.9922, -1790.6953, 17.0078, 0.25);
RemoveBuildingForPlayer(playerid, 3695, 2314.8203, -1790.6953, 17.0078, 0.25);
RemoveBuildingForPlayer(playerid, 3695, 2352.7188, -1790.6953, 17.0078, 0.25);
RemoveBuildingForPlayer(playerid, 3654, 2412.5859, -1640.2031, 14.8516, 0.25);
RemoveBuildingForPlayer(playerid, 3654, 2369.5547, -1681.9297, 15.0078, 0.25);
RemoveBuildingForPlayer(playerid, 3562, 2257.6328, -1639.4297, 16.8750, 0.25);
RemoveBuildingForPlayer(playerid, 3562, 2384.7969, -1680.3750, 16.3125, 0.25);
RemoveBuildingForPlayer(playerid, 3561, 2363.0391, -1638.7578, 15.3203, 0.25);
RemoveBuildingForPlayer(playerid, 3561, 2408.8125, -1679.3203, 15.3438, 0.25);
RemoveBuildingForPlayer(playerid, 3647, 2394.5234, -1640.5078, 15.1484, 0.25);
RemoveBuildingForPlayer(playerid, 3559, 2323.9922, -1682.4063, 16.1953, 0.25);
RemoveBuildingForPlayer(playerid, 3706, 2281.0313, -1634.6406, 16.7266, 0.25);
RemoveBuildingForPlayer(playerid, 3563, 2245.7344, -1633.9063, 17.3047, 0.25);
RemoveBuildingForPlayer(playerid, 3695, 2387.8203, -1790.6953, 17.0078, 0.25);
RemoveBuildingForPlayer(playerid, 17949, 2211.7109, -1849.9453, 14.7188, 0.25);
RemoveBuildingForPlayer(playerid, 17502, 2583.2969, -1731.9297, 11.0000, 0.25);
RemoveBuildingForPlayer(playerid, 17565, 2211.7109, -1849.9453, 14.7188, 0.25);
RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1801.8672, 13.1563, 0.25);
RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1791.0000, 13.1563, 0.25);
RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1796.4531, 13.1563, 0.25);
RemoveBuildingForPlayer(playerid, 3584, 2239.9297, -1790.6953, 17.0078, 0.25);
RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1780.9844, 13.1563, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2259.9453, -1796.0703, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2258.3438, -1804.7422, 12.0938, 0.25);
RemoveBuildingForPlayer(playerid, 645, 2259.2656, -1773.2422, 11.1250, 0.25);
RemoveBuildingForPlayer(playerid, 17886, 2264.0391, -1789.2578, 20.7734, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2275.3906, -1820.7266, 12.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3584, 2282.9922, -1790.6953, 17.0078, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2271.6484, -1772.3984, 8.3516, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2297.3828, -1798.5391, 8.3516, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2297.1484, -1775.8750, 8.3516, 0.25);
RemoveBuildingForPlayer(playerid, 3584, 2314.8203, -1790.6953, 17.0078, 0.25);
RemoveBuildingForPlayer(playerid, 1408, 2304.7813, -1767.3828, 13.1563, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2341.7578, -1817.7266, 8.3594, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2334.7109, -1785.0625, 12.0938, 0.25);
RemoveBuildingForPlayer(playerid, 17887, 2343.6094, -1784.5078, 20.3125, 0.25);
RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1770.0469, 13.1563, 0.25);
RemoveBuildingForPlayer(playerid, 1408, 2341.3828, -1767.2734, 13.1563, 0.25);
RemoveBuildingForPlayer(playerid, 669, 2329.1875, -1765.5234, 12.4375, 0.25);
RemoveBuildingForPlayer(playerid, 1307, 2295.7031, -1742.1953, 12.7500, 0.25);
RemoveBuildingForPlayer(playerid, 3558, 2323.9922, -1682.4063, 16.1953, 0.25);
RemoveBuildingForPlayer(playerid, 3555, 2245.7344, -1633.9063, 17.3047, 0.25);
RemoveBuildingForPlayer(playerid, 3582, 2257.6328, -1639.4297, 16.8750, 0.25);
RemoveBuildingForPlayer(playerid, 3646, 2281.0313, -1634.6406, 16.7266, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2346.7500, -1619.9219, 21.8672, 0.25);
RemoveBuildingForPlayer(playerid, 17622, 2342.6094, -1608.8125, 16.9141, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2338.4766, -1606.3750, 24.7500, 0.25);
RemoveBuildingForPlayer(playerid, 17576, 2351.5703, -1596.0703, 22.1250, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 2346.7500, -1588.0703, 26.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3584, 2352.7188, -1790.6953, 17.0078, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2367.6484, -1802.7969, 8.3594, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2367.6484, -1780.7734, 11.0469, 0.25);
RemoveBuildingForPlayer(playerid, 620, 2378.3359, -1818.7266, 8.3594, 0.25);
RemoveBuildingForPlayer(playerid, 3584, 2387.8203, -1790.6953, 17.0078, 0.25);
RemoveBuildingForPlayer(playerid, 17523, 2436.2188, -1788.5625, 15.0234, 0.25);
RemoveBuildingForPlayer(playerid, 17519, 2450.8750, -1757.3984, 16.0000, 0.25);
RemoveBuildingForPlayer(playerid, 3649, 2369.5547, -1681.9297, 15.0078, 0.25);
RemoveBuildingForPlayer(playerid, 3582, 2384.7969, -1680.3750, 16.3125, 0.25);
RemoveBuildingForPlayer(playerid, 3556, 2408.8125, -1679.3203, 15.3438, 0.25);
RemoveBuildingForPlayer(playerid, 17971, 2484.5313, -1667.6094, 21.4375, 0.25);
RemoveBuildingForPlayer(playerid, 3556, 2363.0391, -1638.7578, 15.3203, 0.25);
RemoveBuildingForPlayer(playerid, 3649, 2412.5859, -1640.2031, 14.8516, 0.25);
RemoveBuildingForPlayer(playerid, 3648, 2394.5234, -1640.5078, 15.1484, 0.25);
RemoveBuildingForPlayer(playerid, 17968, 2442.3672, -1641.8438, 26.8984, 0.25);
RemoveBuildingForPlayer(playerid, 6360, 377.2891, -1362.6641, 13.5859, 0.25);
RemoveBuildingForPlayer(playerid, 6499, 290.8750, -1412.0938, 21.3047, 0.25);
RemoveBuildingForPlayer(playerid, 6327, 377.2891, -1362.6641, 13.5859, 0.25);
RemoveBuildingForPlayer(playerid, 673, 398.9453, -1351.8984, 13.7734, 0.25);
RemoveBuildingForPlayer(playerid, 6363, 428.1016, -1348.8125, 29.2578, 0.25);
RemoveBuildingForPlayer(playerid, 673, 449.4375, -1319.3203, 14.2891, 0.25);
RemoveBuildingForPlayer(playerid, 615, 783.3281, -1009.5234, 26.6875, 0.25);
RemoveBuildingForPlayer(playerid, 4504, 56.3828, -1531.4531, 6.7266, 0.25);
RemoveBuildingForPlayer(playerid, 4505, 14.4609, -1347.3281, 11.6797, 0.25);
RemoveBuildingForPlayer(playerid, 4506, -18.2266, -1335.9844, 12.7266, 0.25);
RemoveBuildingForPlayer(playerid, 4521, -84.6797, -909.3438, 18.2422, 0.25);
RemoveBuildingForPlayer(playerid, 4522, 93.3125, -1282.5234, 15.6094, 0.25);
	//GNGOTN
//SD
RemoveBuildingForPlayer(playerid, 3605, 1497.859, -674.828, 99.882, 0.250);
RemoveBuildingForPlayer(playerid, 3734, 1497.859, -674.828, 99.882, 0.250);
RemoveBuildingForPlayer(playerid, 3604, 1525.500, -691.695, 96.078, 0.250);
RemoveBuildingForPlayer(playerid, 3737, 1525.500, -691.695, 96.078, 0.250);
//SD
//Sw0
	RemoveBuildingForPlayer(playerid, 1689, 751.335, -1368.030, 25.875, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 745.585, -1381.109, 25.875, 0.250);
	RemoveBuildingForPlayer(playerid, 1439, 732.726, -1341.770, 12.632, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, 732.851, -1332.900, 12.687, 0.250);
//Sw0
////Black
	RemoveBuildingForPlayer(playerid, 647, 1077.859, -1499.869, 30.968, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 1083.670, -1499.489, 30.968, 0.250);
//FIN BLACK

//KOK 
	RemoveBuildingForPlayer(playerid, 3776, 902.335, -1191.140, 25.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3777, 902.335, -1191.140, 25.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3776, 868.132, -1191.140, 25.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3777, 868.132, -1191.140, 25.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3776, 831.960, -1191.140, 25.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3777, 831.960, -1191.140, 25.039, 0.250);
	RemoveBuildingForPlayer(playerid, 5836, 816.335, -1217.150, 26.445, 0.250);
	RemoveBuildingForPlayer(playerid, 5926, 816.335, -1217.150, 26.445, 0.250);
//KOK FIN

//HE
	RemoveBuildingForPlayer(playerid, 620, 1653.959, -2267.729, -4.023, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1673.300, -2267.729, -4.023, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1695.260, -2267.729, -4.023, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1715.699, -2267.729, -4.023, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1715.699, -2301.909, -4.023, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1695.260, -2301.909, -4.023, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1673.300, -2301.909, -4.023, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1653.959, -2301.909, -4.023, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1650.790, -2303.530, 5.234, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1650.800, -2271.199, 5.234, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1696.089, -2271.199, 5.234, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1712.319, -2271.199, 5.234, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1712.319, -2303.149, 5.234, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1697.699, -2302.949, 5.234, 0.250);
//HE FIN

//GORRO
	RemoveBuildingForPlayer(playerid, 3643, 2475.100, -2073.479, 17.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3745, 2475.100, -2073.479, 17.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3643, 2482.020, -2073.479, 17.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3745, 2482.020, -2073.479, 17.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3643, 2489.100, -2073.479, 17.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3745, 2489.100, -2073.479, 17.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3643, 2496.090, -2073.479, 17.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3745, 2496.090, -2073.479, 17.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3256, 2503.129, -2073.379, 12.429, 0.250);
	RemoveBuildingForPlayer(playerid, 3290, 2503.129, -2073.379, 12.429, 0.250);
	RemoveBuildingForPlayer(playerid, 3627, 2448.129, -2075.629, 16.046, 0.250);
	RemoveBuildingForPlayer(playerid, 3686, 2448.129, -2075.629, 16.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 2428.389, -2066.629, 12.679, 0.250);
	RemoveBuildingForPlayer(playerid, 3567, 2446.830, -2075.840, 13.257, 0.250);
	RemoveBuildingForPlayer(playerid, 3567, 2438.360, -2075.840, 13.257, 0.250);
	RemoveBuildingForPlayer(playerid, 3244, 2535.090, -2131.879, 12.992, 0.250);
//GORRO FIN





	new dialogstr[256];
	if(!udb_Exists(PlayerName2(playerid))) format(dialogstr,sizeof(dialogstr),"{FFFFFF}Hola %s. \n{FFFFFF}Necesitas registrar tu cuenta en nuestra base de datos para ingresar.\nEscribe la contraseña que deseas usar para tu cuenta:", PlayerName), ShowPlayerDialog(playerid, 9049, DIALOG_STYLE_INPUT, "{FF0000}War Blood {FFFFFF}Panel De Registro", dialogstr, "Registrar", "Cancelar");
	else
	{
	    PlayerInfo[playerid][Registered] = 1;
		format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName));
		tmp2 = dini_Get(file,"ip");
		if( (!strcmp(tmp3,tmp2,true)) && (ServerInfo[AutoLogin] == 0) )
		{
			LoginPlayer(playerid);
			if(PlayerInfo[playerid][Level] >= 1)
			{
				format(string2,sizeof(string2),"Has sido automaticamente logueado. (Nivel %d)", PlayerInfo[playerid][Level] );
				SendClientMessage(playerid,green,string2);
       		}
	   		else SendClientMessage(playerid,marron,"Hola Has sido automaticamente logueado.");
  	    }
		else{
			ShowMenuLogin(playerid);
			SelectTextDraw(playerid, COLOR_RED);
		}
  	   // else format(dialogstr,sizeof(dialogstr),"{FFFFFF}Hola %s. \n{FFFFFF}Tu cuenta esta registrada en nuestra base de datos, porfavor ingresa tu contraseña:", PlayerName), ShowPlayerDialog(playerid, 9048, DIALOG_STYLE_PASSWORD, "{FF0000}War Blood {FFFFFF}Panel De Logueo", dialogstr, "Login", "Cancelar");
	}
	SetPlayerTeam(playerid, 1);
	TimeConectado[playerid]=GetTickCount();
	Murio[playerid] = 0;
    MurioChaleco[playerid] = 0;
	
 	return 1;
}

//==============================================================================

forward AutoKick(playerid);
public AutoKick(playerid)
{
	if( IsPlayerConnected(playerid) && ServerInfo[Locked] == 1 && PlayerInfo[playerid][AllowedIn] == false) {
		SendClientMessage(playerid,grey,"Has sido automaticamente expulsado. Razon: Servidor Bloqueado");
		format(string2,sizeof(string2),"%s ID:%d ha sido automaticamente expulsado. Razon: Servidor Bloqueado",PlayerName2(playerid),playerid);
		SaveToFile("KickLog",string2);  Kick(playerid);
		SendClientMessageToAll(grey, string2); print(string2);
	}
	return 1;
}

//==============================================================================

public OnPlayerDisconnect(playerid, reason)
{
    pMoney[playerid] = 0;
    EntroAlEvento[playerid] = 0;
    EstaEnEvento[playerid] = false; 
	CMDRegeneracionARMADURA[playerid] = 0;
	CMDRegeneracionHP[playerid] = 0;
	g_RadarInvisible[playerid] = 0; 
	ZombieVariable[playerid] = 0;

    MessageShown[playerid][0] = false; // Resetea el mensaje de zona bloqueada
    MessageShown[playerid][1] = false; // Resetea el mensaje de captura	

	KillTimer(VariableRegeneracionARMADURA[playerid]);
	KillTimer(VariableRegeneracionHP[playerid]);
	KillTimer(VariableRegeneracionHPPATREON[playerid]);	
    EventoCmd[playerid] = 0;
    DudaEnviada[playerid] = 0;
	EstaEnDesmadre[playerid] = false;
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, sizeof(PlayerName));

	if(ServerInfo[ConnectMessages] == 1)
 {
		switch (reason) {
			case 0:	format(str, sizeof(str), "%s (%d) ha dejado el servidor [Conexión perdida/Crash]", PlayerName, playerid);
			case 1:	format(str, sizeof(str), "%s (%d) ha dejado el servidor [Abandono]", PlayerName, playerid);
			case 2:	format(str, sizeof(str), "%s (%d) ha dejado el servidor [Baneado/Expulsado]", PlayerName, playerid);
			}
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerid != i)
		{
			if(PlayerInfo[i][Level] > 1) SendClientMessage(i,grey,str);
		}
   			}
			
			
			  if(GetPVarInt(playerid, "Reconnecting") == 1)
    	{
        new iStr[128],
            iP[16];

        GetPVarString(playerid, "RecIP", iP, sizeof(iP));
        printf("%s", iP);

        format(iStr, sizeof(iStr), "unbanip %s", iP);

        SendRconCommand(iStr);
        SendRconCommand("reloadbans");

        SetPVarInt(playerid, "Reconnecting", 0);
    	}
			
			
	if(PlayerInfo[playerid][LoggedIn] == 1)	SavePlayer(playerid);
	if(udb_Exists(PlayerName2(playerid))) dUserSetINT(PlayerName2(playerid)).("loggedin",0);
  	PlayerInfo[playerid][LoggedIn] = 0;
	PlayerInfo[playerid][Level] = 0;
	PlayerInfo[playerid][RANGO_PLAYER] = 0;
	PlayerInfo[playerid][LEERACTIVADO_PLAYER] = 0;
	PlayerInfo[playerid][KILLS_PLAYER] = 0;

	PlayerInfo[playerid][EXTASIS_PLAYER_2] = 0;
	PlayerInfo[playerid][LSD_PLAYER_2] = 0;
	PlayerInfo[playerid][FENTANILO_PLAYER_2] = 0;
	PlayerInfo[playerid][GHB_PLAYER_2] = 0;
	PlayerInfo[playerid][ALUCINOGENO_PLAYER] = 0;
	PlayerInfo[playerid][HEROINA_PLAYER] = 0;
	PlayerInfo[playerid][INHALANTES_PLAYER] = 0;
	PlayerInfo[playerid][KETAMINA_PLAYER] = 0;
	PlayerInfo[playerid][KHAT_PLAYER] = 0;
	PlayerInfo[playerid][BONUS_PLAYER] = 0;
	PlayerInfo[playerid][KRATOM_PLAYER] = 0;


	PlayerInfo[playerid][MISION1_PLAYER] = 0;
	PlayerInfo[playerid][MISION2_PLAYER] = 0;
	PlayerInfo[playerid][PUNTOS_PLAYER_2] = 0;
    PlayerInfo[playerid][CONQUISTAS_PLAYER] = 0;
	PlayerInfo[playerid][CLAN_TIENE] = 0;
	PlayerInfo[playerid][CLAN_TIENELIDER] = 0;
	PlayerInfo[playerid][CLAN_TIENEREP] = 0;
	PlayerInfo[playerid][EXTERMINADOR_TIENE] = 0;
	PlayerInfo[playerid][VIP_TIENE] = 0;
	PlayerInfo[playerid][VIP_EXPIRATION] = 0;
	PlayerInfo[playerid][pVip] 	= 0;
	PlayerInfo[playerid][Kills] = 0;
	PlayerInfo[playerid][Hide] = 0;
	PlayerInfo[playerid][Jailed] = 0;
	PlayerInfo[playerid][Frozen] = 0;
	EstaEnFly[playerid] = 0;
    YaUsoNuclear[playerid] = 0;
    BuscadoPorNuclear[playerid]=0;
    HanDesactivadaoLaBomba[playerid]=0;
 	WarnWeaponsHack[playerid] = 0;
 	WarnWeaponsGoogles[playerid] = 0;
 	JetpackLegal[playerid] = 0;
 	
	#if EnableTwoRcon == true
	PlayerInfo[playerid][MaxRcon] 	= 0;
	#endif
	
	IPDATA[playerid][Ignore] = false;
	
	if(PlayerInfo[playerid][Jailed] == 1) KillTimer( JailTimer[playerid] );
	if(PlayerInfo[playerid][Frozen] == 1) KillTimer( FreezeTimer[playerid] );
	if(ServerInfo[Locked] == 1)	KillTimer( LockKickTimer[playerid] );

	if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
	ADpm[playerid] = 0;
	
	#if defined ENABLE_SPEC
	for(new x=0; x<MAX_PLAYERS; x++)
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid)
   		   	AdvanceSpectate(x);
	#endif
	//---------------------------------------
 	return 1;
}

forward DelayKillPlayer(playerid);
public DelayKillPlayer(playerid)
{
	SetPlayerHealth(playerid,0.0);
	ForceClassSelection(playerid);
}

public OnPlayerRequestClass(playerid, classid)
{

gPlayerClass[playerid] = classid;


SetPlayerPos(playerid,268.6195,1885.8947,-29.5313);
SetPlayerFacingAngle(playerid,182.1501);
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,45);




SetPlayerCameraPos(playerid, 269.1959, 1877.7833, -27.4929);

SetPlayerCameraLookAt(playerid, 269.1240, 1878.7874, -27.7280);


//----------------------------------------
TextDrawHideForPlayer(playerid, VistaZombie0);
TextDrawHideForPlayer(playerid, VistaZombie1);
TextDrawHideForPlayer(playerid, VistaZombie2);
TextDrawHideForPlayer(playerid, VistaZombie3);
TextDrawHideForPlayer(playerid, VistaZombie4);
TextDrawHideForPlayer(playerid, TextoComandosZombies);
TextDrawHideForPlayer(playerid, TextoComandosHumanos);




switch (classid)
  {
  	case 0 .. 37:
    {
      gTeam[playerid] = NO_TEAM;
      GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~g~~h~~h~~h~Humano",2000,4);

    }

    case 38 .. 50:
    {
      gTeam[playerid] = TEAM_ZOMBIES;
      GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~r~~h~Infectado",2000,4);

    }
}
return 1;
}
//==============================================================================
//antiKick
forward CrashPlayer(playerid, playerIP[]);
public CrashPlayer(playerid, playerIP[])
{
	format(string2,sizeof(string2),"[Servidor]: Posible Anti Kick Reconeccion [%i]: %s Sera Baneado!",playerid,PlayerName2(playerid));
 	MessageToAdmins(green,string2);
 	SaveToFile("AntiKickRejoin",string2);
	Ban(playerid);
	return true;
}
forward ARKick(playerid);
public ARKick(playerid)
{
	if(!IPDATA[playerid][Ignore])
	{
		GetPlayerIp(playerid, IPDATA[playerid][IP_ADDRESS], 16);
		new rchck = RESET_CHECK;
		if(rchck != 0) SetTimerEx("ResetIPSlot", RESET_CHECK*1000, false, "d", playerid);
	}
	printf("El ID %i Uso Antikick",playerid);
	Kick(playerid);
	return true;
}
forward ResetIPSlot(ipslotid);
public ResetIPSlot(ipslotid)
{
	printf("Slot Reseteado Por AntiKick Fail %i [%s]",ipslotid, IPDATA[ipslotid][IP_ADDRESS]);
	format(IPDATA[ipslotid][IP_ADDRESS],16,"_");
	return true;
}

//==============================================================================
public OnPlayerSpawn(playerid)
{
	//zonas
  //  GangZoneShowForPlayer(playerid, base1, 0x80FF80BD);
    //GangZoneShowForPlayer(playerid, basez, 0xFF000096);
	//ChosenSkin[playerid] = 1;
  //  TextDrawShowForPlayer(playerid, TextdrawPuntos[playerid]);

  StopAudioStreamForPlayer(playerid);
 // SendClientMessage(playerid,green,"Sistemas desactivados para pruebas del servidor.");
 /* if(EstaEnDesmadre[playerid] == true)
  {
	SetPlayerPos(playerid,1412.639892,-1.787510,1000.924377);
	SetPlayerInterior(playerid,1);
	SetPlayerVirtualWorld(playerid,27);
	ELOY9N_GivePlayerWeapon(playerid,24,9999);
	ELOY9N_GivePlayerWeapon(playerid,25,9999);
	ELOY9N_GivePlayerWeapon(playerid,34,9999);
	SetPlayerHealth(playerid,100);
	SetPlayerArmour(playerid,100);	
  }*/
	SendClientMessage(playerid,COLOR_GREEN,"[!] Recordatorio: ¡Recuerda grabar si sos un jugador habilidoso, para poder defenderte de futuras sospechas de trampas!.");
//	SendClientMessage(playerid,COLOR_GREEN,"[!] Disfruta tu estadia Director/Mapper. Atte: Pac0");
//    CLASEZ[playerid] = 0;
// 	  CLASEH[playerid] = 0;
	CMDRegeneracionHP[playerid] = 0;
	CMDRegeneracionARMADURA[playerid] = 0;
//    CLASEH[playerid] = 0;
    EstaEnFly[playerid] = 0;
    bloqueado[playerid] = 1;
    EstaEnEvento[playerid] = false;
	EstaEnDesmadre[playerid] = false;
    BuscadoPorNuclear[playerid] = 0;
    HanDesactivadaoLaBomba[playerid]=0;
	g_RadarInvisible[playerid] = 0; 
	ContadorMordidas[playerid] = 0;
	//CLASEH[playerid] = 1;	


	if(PlayerInfo[playerid][VIP_TIENE] > 3)
	{
	KillTimer(VariableRegeneracionARMADURA[playerid]);
	KillTimer(VariableRegeneracionHP[playerid]);
	KillTimer(VariableRegeneracionHPPATREON[playerid]);
	}	
  //  PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/8pcbaf7v086po3x/Ambiente.mp3");
   /* if(IsPlayerNPC(playerid))
    {
    	gTeam[playerid] = TEAM_ZOMBIES;
		SetPlayerTeam(playerid, gTeam[playerid]);
    }*/


for(new i=0; i < sizeof(ZoneInfo); i++)
{
    GangZoneShowForPlayer(playerid, ZoneID[i], GetTeamZoneColor(ZoneInfo[i][zTeam]));
    if(ZoneAttacker[i] != -1) GangZoneFlashForPlayer(playerid, ZoneID[i], GetTeamZoneColor(ZoneAttacker[i]));
}    
    if(PlayerInfo[playerid][LoggedIn] == 1)
    {
   // SetPlayerVip(playerid);
	SavePlayer(playerid);
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    SetPlayerScore(playerid, dUserINT(playername).("Kills"));
    }
	if(PlayerInfo[playerid][LoggedIn] == 0)
	{    
        if(IsPlayerNPC(playerid))
        {
        SendClientMessage(playerid,red,"Eres un bot, recuerda seguir las reglas de lord pac0 y matar a todos los humanos");
		PlayerInfo[playerid][CLAN_TIENE] = 23; //Para hacer que no capturen las zonas
        } 
        else 
        {  
	    SendClientMessage(playerid, red, "Fuiste expulsado por no ingresar correctamente al servidor!");
        Kick(playerid);
        }
        return 1;
 	}
/*    new currentTimestamp = gettime();
	if (PlayerInfo[playerid][VIP_TIENE] > 0)
	{
		if (PlayerInfo[playerid][VIP_EXPIRATION] > 0 && PlayerInfo[playerid][VIP_EXPIRATION] < currentTimestamp)
		{
			PlayerInfo[playerid][VIP_TIENE] = 0; // Establecer el nivel de VIP a "Sin Vip"
			PlayerInfo[playerid][VIP_EXPIRATION] = 0; // Establecer la fecha de caducidad a cero
		//  SavePlayerInfo(playerid); // Guardar los cambios en el archivo de datos del jugador
			SendClientMessage(playerid, COLOR_YELLOW, "Tu VIP ha caducado.");
		}	
	}*/
	if(ServerInfo[Locked] == 1 && PlayerInfo[playerid][AllowedIn] == false)
	{
		GameTextPlayer(playerid,"~r~Servidor Bloqueado~n~Debes ingresar la contraseña antes de jugar~n~/password <contraseña>",4000,3);
		SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
		return 1;
	}


	if(ServerInfo[MustLogin] == 1 && PlayerInfo[playerid][Registered] == 1 && PlayerInfo[playerid][LoggedIn] == 0)
	{
		GameTextPlayer(playerid,"~r~Debes loguearte antes de jugar!",4000,3);
		SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
		return 1;
	}

	if(ServerInfo[MustRegister] == 1 && PlayerInfo[playerid][Registered] == 0)
	{
		GameTextPlayer(playerid,"~r~Debes registrarte antes de jugar!",4000,3);
		SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
		return 1;
	}

	PlayerInfo[playerid][Spawned] = 1;

	if(PlayerInfo[playerid][Frozen] == 1) {
		TogglePlayerControllable(playerid,false); return SendClientMessage(playerid,red,"No puede escapar de su castigo. Usted sigue congelado.");
	}
	
	if(PlayerInfo[playerid][Jailed] == 1) {
	    SetTimerEx("JailPlayer",3000,0,"d",playerid); return SendClientMessage(playerid,red,"No puede escapar de su castigo. Usted sigue encarcelado");
	}
	
	if(ServerInfo[AdminOnlySkins] == 1) {
		if( (GetPlayerSkin(playerid) == ServerInfo[AdminSkin]) || (GetPlayerSkin(playerid) == ServerInfo[AdminSkin2]) ) {
			if(PlayerInfo[playerid][Level] >= 1)
				GameTextPlayer(playerid,"~b~Bienvenido~n~~w~Administrador",3000,1);
			else {
				GameTextPlayer(playerid,"~r~Este skin es para~n~Administradores~n~unicamente",4000,1);
				SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
				return 1;
			}
		}
	}
	
	if((dUserINT(PlayerName2(playerid)).("UseSkin")) == 1)
		if(PlayerInfo[playerid][LoggedIn] == 1)
    		SetPlayerSkin(playerid,(dUserINT(PlayerName2(playerid)).("FavSkin")) );
	
	if(InfeccionEnprogreso[playerid]==1)
	    CompletaInfeccion(playerid);

    ELOY9N_ResetPlayerWeapons(playerid);
    InfeccionEnprogreso[playerid]=0;
    JetpackLegal[playerid] = 0;
    DeletePlayer3DTextLabel(playerid,PlayerText3D:label);
    StopAudioStreamForPlayer(playerid);
	TextDrawHideForPlayer(playerid,MOTD[playerid]);
	GangZoneShowForPlayer(playerid, SD, color_SD); 
	GangZoneShowForPlayer(playerid, SWO, 0xFF0000DD);
	
	
	SetPlayerTeam(playerid, gTeam[playerid]);
//	TextDrawHideForPlayer(playerid,  Textdraw23);
//	TextDrawHideForPlayer(playerid,  Textdraw22);
	//TextDrawHideForPlayer(playerid, Textdraw11);
	//TextDrawHideForPlayer(playerid, Textdraw12);
	//TextDrawHideForPlayer(playerid, Textdraw13);
//	TextDrawShowForPlayer(playerid, Textdraw4);
//	TextDrawShowForPlayer(playerid, Textdraw5);
   // TextDrawShowForPlayer(playerid,  Textdraw2);
   TextDrawShowForPlayer(playerid, TDEditor_TD[0]);
   //TextDrawShowForPlayer(playerid, TDEditor_TD[1]);
   TextDrawShowForPlayer(playerid, TDEditor_TD[2]);
   TextDrawShowForPlayer(playerid, TDEditor_TD[3]);
   TextDrawShowForPlayer(playerid, TDEditor_TD[4]);

  /*  TextDrawShowForPlayer(playerid,  TextdrawPuntos);
    new string[128];
 	format(string, sizeof(string), "%d", PlayerInfo[playerid][PUNTOS_PLAYER_2]);
    TextDrawSetString(TextdrawPuntosTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawPuntosTotal[playerid]);
    TextDrawShowForPlayer(playerid,  TextdrawRango);*/

   // TextDrawShowForPlayer(playerid,  Textdraw0);
   // TextDrawShowForPlayer(playerid,  Textdraw1);
  //  TextDrawShowForPlayer(playerid,  Textdraw22);

    ///////////////////////////////////////
  /*  if(PlayerInfo[playerid][RANGO_PLAYER] == 0)
    {
    format(string, sizeof(string), "Novato");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }
    if(PlayerInfo[playerid][RANGO_PLAYER] == 1)
    {
    format(string, sizeof(string), "Civil");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }
    if(PlayerInfo[playerid][RANGO_PLAYER] == 2)
    {
    format(string, sizeof(string), "Superviviente");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }  
    if(PlayerInfo[playerid][RANGO_PLAYER] == 3)
    {
    format(string, sizeof(string), "Superviviente I");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }
    if(PlayerInfo[playerid][RANGO_PLAYER] == 4)
    {
    format(string, sizeof(string), "Superviviente II");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }
    if(PlayerInfo[playerid][RANGO_PLAYER] == 5)
    {
    format(string, sizeof(string), "Superviviente III");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    } 
    if(PlayerInfo[playerid][RANGO_PLAYER] == 6)
    {
    format(string, sizeof(string), "Superviviente IV");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }
    if(PlayerInfo[playerid][RANGO_PLAYER] == 7)
    {
    format(string, sizeof(string), "Superviviente Avanzado");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }
    if(PlayerInfo[playerid][RANGO_PLAYER] == 8)
    {
    format(string, sizeof(string), "Superviviente Experto");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    } 
    if(PlayerInfo[playerid][RANGO_PLAYER] == 9)
    {
    format(string, sizeof(string), "Sub-Oficial");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }
    if(PlayerInfo[playerid][RANGO_PLAYER] == 10)
    {
    format(string, sizeof(string), "Oficial");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }
    if(PlayerInfo[playerid][RANGO_PLAYER] == 11)
    {
    format(string, sizeof(string), "Comisario");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }
    if(PlayerInfo[playerid][RANGO_PLAYER] == 12)
    {
    format(string, sizeof(string), "Soldado");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }
    if(PlayerInfo[playerid][RANGO_PLAYER] == 13)
    {
    format(string, sizeof(string), "Cabo");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    } 
    if(PlayerInfo[playerid][RANGO_PLAYER] == 14)
    {
    format(string, sizeof(string), "Navy");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    } 
    if(PlayerInfo[playerid][RANGO_PLAYER] == 15)
    {
    format(string, sizeof(string), "Elite");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    } 
    if(PlayerInfo[playerid][RANGO_PLAYER] == 16)
    {
    format(string, sizeof(string), "Warframe");
    TextDrawSetString(TextdrawRangoTotal[playerid], string);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
    }      */                         
    ////////////      
  //  TextDrawShowForPlayer(playerid,  Textdraw3);
	GameTextForPlayer(playerid, " ", 100, 6);
	for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
	KillTimer(VidaTimer[playerid]);
//	if(!(Skins[playerid]==0)) SetPlayerSkin(playerid,Skins[playerid]);
	SetPlayerVirtualWorld(playerid, 0);
	
	if(ServerInfo[GiveWeap] == 1) {
		if(PlayerInfo[playerid][LoggedIn] == 1) {
			PlayerInfo[playerid][TimesSpawned]++;
			if(PlayerInfo[playerid][TimesSpawned] == 1)
			{
 				ELOY9N_GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("weap1"), dUserINT(PlayerName2(playerid)).("weap1ammo")	);
				ELOY9N_GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("weap2"), dUserINT(PlayerName2(playerid)).("weap2ammo")	);
				ELOY9N_GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("weap3"), dUserINT(PlayerName2(playerid)).("weap3ammo")	);
				ELOY9N_GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("weap4"), dUserINT(PlayerName2(playerid)).("weap4ammo")	);
				ELOY9N_GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("weap5"), dUserINT(PlayerName2(playerid)).("weap5ammo")	);
				ELOY9N_GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("weap6"), dUserINT(PlayerName2(playerid)).("weap6ammo")	);
			}
		}
	}

	//SetPlayerTime(playerid, 23, 59); // Configura la hora en 23:59 (casi medianoche)
	//SetPlayerWeather(playerid, 19); // Configura el clima en tormenta (puedes ajustar este número)

	if(gTeam[playerid] == TEAM_EXTERMINADOR)
	{
	if(Murio[playerid] == 1)
	{
	gTeam[playerid] = TEAM_ZOMBIES;
	SetPlayerTeam(playerid, gTeam[playerid]);
	Skins[playerid] = skinsz[random(5)];
	SetPlayerSkin(playerid,Skins[playerid]);
	//Murio[playerid] = 0;
	}
	else
	{ 
	SetPlayerColor(playerid,0x804000AA); 
	//  SetPlayerArmour(playerid, 100);
	    SetPlayerHealth(playerid,100);
	  ELOY9N_GivePlayerWeapon(playerid, 16, 10);  //granada
	  ELOY9N_GivePlayerWeapon(playerid, 24, 200);  //DK
	  ELOY9N_GivePlayerWeapon(playerid, 31, 230);   //m4
	  ELOY9N_GivePlayerWeapon(playerid, 27, 250);  //EDC
//  ELOY9N_GivePlayerWeapon(playerid, 34, 120);  //SNIPER
	/*  TextDrawHideForPlayer(playerid, Textdraw0);
	  TextDrawShowForPlayer(playerid, Textdraw1);
	  TextDrawHideForPlayer(playerid, Textdraw2);*/
	  TextDrawHideForPlayer(playerid, VistaZombie0);
	  TextDrawHideForPlayer(playerid, VistaZombie1);
	  TextDrawHideForPlayer(playerid, VistaZombie2);
	  TextDrawHideForPlayer(playerid, VistaZombie3);
	  TextDrawHideForPlayer(playerid, VistaZombie4);
	  TextDrawHideForPlayer(playerid, TextoComandosZombies);
	  TextDrawShowForPlayer(playerid, TextoComandosHumanos);
       
//	  new rand = random(sizeof(RandomSpawnsEXTERMINADOR));
	  SendClientMessage(playerid,red,"¡Eres un EXTERMINADOR!, recuerda matar a todos los humanos y zombies que se encuentren en tu camino");
	  SetPlayerPos(playerid,915.4669,-1215.9471,16.9766);
	}
	}
	if(gTeam[playerid] == TEAM_CENTINELAS)
	{
	if(Murio[playerid] == 1)
	{
	gTeam[playerid] = TEAM_ZOMBIES;
	SetPlayerTeam(playerid, gTeam[playerid]);
	Skins[playerid] = skinsz[random(5)];
	SetPlayerSkin(playerid,Skins[playerid]);
	//Murio[playerid] = 0;
	}
	else
	{ 
	SetPlayerColor(playerid,0xFFFF00AA); 
	//  SetPlayerArmour(playerid, 100);
	    SetPlayerHealth(playerid,100);
	//  ELOY9N_GivePlayerWeapon(playerid, 16, 10);  //granada
	  ELOY9N_GivePlayerWeapon(playerid, 24, 200);  //DK
	  ELOY9N_GivePlayerWeapon(playerid, 31, 150);   //m4
	  ELOY9N_GivePlayerWeapon(playerid, 27, 100);  //EDC
	//  ELOY9N_GivePlayerWeapon(playerid, 34, 120);  //SNIPER
	/*  TextDrawHideForPlayer(playerid, Textdraw0);
	  TextDrawShowForPlayer(playerid, Textdraw1);
	  TextDrawHideForPlayer(playerid, Textdraw2);*/
	  TextDrawHideForPlayer(playerid, VistaZombie0);
	  TextDrawHideForPlayer(playerid, VistaZombie1);
	  TextDrawHideForPlayer(playerid, VistaZombie2);
	  TextDrawHideForPlayer(playerid, VistaZombie3);
	  TextDrawHideForPlayer(playerid, VistaZombie4);
	  TextDrawHideForPlayer(playerid, TextoComandosZombies);
	  TextDrawShowForPlayer(playerid, TextoComandosHumanos);

//	  new rand = random(sizeof(RandomSpawnsEXTERMINADOR));
	  SendClientMessage(playerid,red,"¡Eres un Centinela!, recuerda matar a todos los que se opongan en tu camino.");
	  SetPlayerPos(playerid,1128.1803, -1434.2914, 15.9447);
	}
	}	
	if(gTeam[playerid] == NO_TEAM)
	{
	if(Murio[playerid] == 1)
	{
		gTeam[playerid] = TEAM_ZOMBIES;
		SetPlayerTeam(playerid, gTeam[playerid]);
		if(Skin_Humano[playerid] == 0)
		{
		Skins[playerid] = skinsz[random(6)];
		SetPlayerSkin(playerid,Skins[playerid]);
		}
		else{
			SetPlayerSkin(playerid,Skin_Humano[playerid]);
		}
	}
	else
	{
    if(CLASEH[playerid] == 0) // Normal
    {
        ELOY9N_GivePlayerWeapon(playerid, 25, 20);  // Escopeta
        ELOY9N_GivePlayerWeapon(playerid, 29, 114); // MP5
        ELOY9N_GivePlayerWeapon(playerid, 24, 75);  // Desert Eagle
        ELOY9N_GivePlayerWeapon(playerid, 31, 90);  // M4
        SetPlayerColor(playerid, 0x218C07FF);
    }
    else if(CLASEH[playerid] == 10) // Mercenario
    {
        ELOY9N_GivePlayerWeapon(playerid, 23, 20);  // Silenciada
        ELOY9N_GivePlayerWeapon(playerid, 26, 130); // Recortadas
        ELOY9N_GivePlayerWeapon(playerid, 32, 230); // Tec 9
        ELOY9N_GivePlayerWeapon(playerid, 31, 90);  // M4
        ELOY9N_GivePlayerWeapon(playerid, 33, 120); // Rifle
        SetPlayerColor(playerid, COLOR_MERCENARIO);
    }
    else if(CLASEH[playerid] == 11) // Exterminador
    {
        ELOY9N_GivePlayerWeapon(playerid, 24, 100); // Desert Eagle
        ELOY9N_GivePlayerWeapon(playerid, 26, 100); // Recortadas (Sawnoff Shotgun)
        ELOY9N_GivePlayerWeapon(playerid, 29, 200); // MP5
        ELOY9N_GivePlayerWeapon(playerid, 30, 200); // AK47
        ELOY9N_GivePlayerWeapon(playerid, 34, 50);  // Sniper Rifle
		SetPlayerArmour(playerid,60);
        SetPlayerColor(playerid, COLOR_EXTERMINADOR);
    }
		


	  SetPlayerHealth(playerid,100);

	  TextDrawHideForPlayer(playerid, VistaZombie0);
	  TextDrawHideForPlayer(playerid, VistaZombie1);
	  TextDrawHideForPlayer(playerid, VistaZombie2);
	  TextDrawHideForPlayer(playerid, VistaZombie3);
	  TextDrawHideForPlayer(playerid, VistaZombie4);
	  TextDrawHideForPlayer(playerid, TextoComandosZombies);
	  TextDrawShowForPlayer(playerid, TextoComandosHumanos);


	new rand = random(sizeof(RandomSpawnsHumano));
	SetPlayerPos(playerid, RandomSpawnsHumano[rand][0], RandomSpawnsHumano[rand][1], RandomSpawnsHumano[rand][2]);
	
	}
	
	  
	}
	if(gTeam[playerid] == TEAM_ZOMBIES)
	{
	if(Murio[playerid] == 1)
	{
	gTeam[playerid] = TEAM_ZOMBIES;
	SetPlayerTeam(playerid, gTeam[playerid]);
	if(Skin_Zombie[playerid] == 0)
	{
	Skins[playerid] = skinsz[random(6)];
	SetPlayerSkin(playerid,Skins[playerid]);
	}
	else{
		SetPlayerSkin(playerid,Skin_Zombie[playerid]);
	}
	//Murio[playerid] = 0;
	}
	else
	{

	}
	  SetPlayerColor(playerid, 0x979797AA);
	  TextDrawShowForPlayer(playerid, TextoComandosZombies);
	  TextDrawHideForPlayer(playerid, TextoComandosHumanos);
 	//  TextDrawHideForPlayer(playerid, Textdraw0);
	 // TextDrawShowForPlayer(playerid, Textdraw2);
	  TextDrawHideForPlayer(playerid, VistaZombie0);
		TextDrawHideForPlayer(playerid, VistaZombie1);
		TextDrawHideForPlayer(playerid, VistaZombie2);
		TextDrawHideForPlayer(playerid, VistaZombie3);
		TextDrawHideForPlayer(playerid, VistaZombie4);
	  //TextDrawShowForPlayer(playerid, VistaZombie0);
	  //TextDrawShowForPlayer(playerid, VistaZombie1);
	  //TextDrawShowForPlayer(playerid, VistaZombie2);
	  //TextDrawShowForPlayer(playerid, VistaZombie3);
	  //TextDrawShowForPlayer(playerid, VistaZombie4);
	 // if(Convertido[playerid] == 1)
		//{
	//	Convertido[playerid] = 0;
	 //   SetPlayerPos(playerid,POSJMM[0],POSJMM[1],POSJMM[2]);
	  //  }

				if(ZombieVariable[playerid] == 1)
				{
					SetPlayerPos(playerid, Float:PosicionX, Float:PosicionY, Float:PosicionZ);
					ZombieVariable[playerid] = 0;
				}	
	        else
	        {
	        new rand = random(sizeof(RandomSpawnsZombie));
	  SetPlayerPos(playerid, RandomSpawnsZombie[rand][0], RandomSpawnsZombie[rand][1], RandomSpawnsZombie[rand][2]);
	
	  }

	  
	  //SendClientMessage(playerid,red,"Usa click derecho para morder a los humanos e infectarlos, izquierdo para un golpe fuerte");
	//  SendClientMessage(playerid,red,"Debes ir al refugio de los humanos y destrozarlos a todos (marcado con R en el mapa)");

	}
	if(Murio[playerid] == 0)
	{
SendClientMessage(playerid, COLOR_PURPLE, "{800080}| * ¡Recuerda reportar cualquier tipo de bug que veas!. * |");
SendClientMessage(playerid, COLOR_PURPLE, "{800080}| * Si sos un jugador habilidoso, recuerda grabar los eventos como masacre para poder defenderte si sos identificado cómo jugador sospechoso. * |");
	}
	
	return 1;
}
/*public OnRNPCDeath(npcid, killerid, reason)
{
	SetPlayerScore(killerid,(GetPlayerScore(killerid))+1);
 	PlayerInfo[killerid][Kills]+=1;
	ELOY9N_GivePlayerMoney(killerid, 100);
 	GameTextForPlayer(killerid, "~r~+1 XP ~n~~w~+$100",6000,4);   
    return 1; 
}*/
//==============================================================================
/*public CheckVipExpiration(playerid)
{
    if (PlayerInfo[playerid][VIP_TIENE] > 0 && PlayerInfo[playerid][VIP_EXPIRATION] > 0)
    {
        new currentTimestamp = gettime();
        if (PlayerInfo[playerid][VIP_EXPIRATION] < currentTimestamp)
        {
            PlayerInfo[playerid][VIP_TIENE] = 0; // Establecer el nivel de VIP a "Sin Vip"
            PlayerInfo[playerid][VIP_EXPIRATION] = 0; // Establecer la fecha de caducidad a cero
            // Aquí puedes realizar cualquier otra acción que desees al expirar el VIP.
        }
    }
}*/
/*public AlgunaOtraFuncionRelevante(playerid)
{
    // Resto del código...
    
    // Verificar si el VIP ha expirado antes o después de realizar una acción relevante
  //  CheckVipExpiration(playerid);
    
    // Resto del código...
}*/
public OnPlayerDeath(playerid, killerid, reason)
{
    if(IsPlayerNPC(killerid))
	{
	//	new health = random(25) + 15;
	//	SetRNPCHealth(killerid, health);
		ApplyAnimation(killerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 1, 0, 1);
		//SendDeathMessage(killerid, ZombieData[killerid][zombie_victim], reason);
		ZombieData[killerid][zombie_victim] = INVALID_PLAYER_ID;
	}
	if(EstaEnEvento[playerid] == false)
		{
				if(ZombieVariable[playerid] == 0)
				{
					if(gTeam[playerid] == NO_TEAM)
					{
					GetPlayerPos(playerid, Float:PosicionX, Float:PosicionY, Float:PosicionZ);
					ZombieVariable[playerid] = 1;
					}
				}
		}

    MessageShown[playerid][0] = false; // Resetea el mensaje de zona bloqueada
    MessageShown[playerid][1] = false; // Resetea el mensaje de captura
	new pame[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pame, sizeof(pame));
    gTeam[playerid] = 2;
    Murio[playerid] = 1;
	if(PlayerInfo[playerid][VIP_TIENE] > 3)
	{
	KillTimer(VariableRegeneracionARMADURA[playerid]);
	KillTimer(VariableRegeneracionHP[playerid]);
	KillTimer(VariableRegeneracionHPPATREON[playerid]);
	}
	EstaEnDesmadre[playerid] = false;
	CMDRegeneracionHP[playerid] = 0;
	CMDRegeneracionARMADURA[playerid] = 0;	
    MurioChaleco[playerid] = 1;
	g_RadarInvisible[playerid] = 0; 
	ContadorMordidas[playerid] = 0;


  
	 PlayerInfo[killerid][MISION1_PLAYER]++; // Incrementar el progreso de la misión del jugador que mató al zombie

	        if (PlayerInfo[killerid][MISION1_PLAYER] >= 100)
            {
                SendClientMessage(killerid, COLOR_GREEN, "¡Felicidades! Has completado la misión de matar 100 zombies/humanos. {FFFFFF}*Se te ha recompensado con $300.000 y 40 puntos de rango.");
				ELOY9N_GivePlayerMoney(killerid, 300000);
				PlayerInfo[killerid][PUNTOS_PLAYER_2]+= 40;
				PlayerInfo[killerid][MISION1_PLAYER] = 0;
				/*format(string2, sizeof(string2), "%d", PlayerInfo[killerid][PUNTOS_PLAYER_2]);
                TextDrawSetString(TextdrawPuntosTotal[killerid], string2);
                TextDrawShowForPlayer(killerid, TextdrawPuntosTotal[killerid]);*/
				
            }

    StopAudioStreamForPlayer(playerid);
    EstaEnEvento[playerid] = false;
	if(PlayerInfo[playerid][LoggedIn] == 1)	SavePlayer(playerid);
	#if defined USE_STATS
	PlayerInfo[playerid][Deaths]++;
	PlayerInfo[killerid][Kills]++;
	#endif
	
	#if defined ENABLE_SPEC
	for(new x=0; x<MAX_PLAYERS; x++)
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid)
	       AdvanceSpectate(x);
	#endif
	
/*	if(AntiFreeScore==1){
 	if(IsPlayerConnected(killerid) && IsPlayerConnected(playerid)){
	if(XDeaths[playerid] == 0)
        {
        LastDeath[playerid] = gettime();
        }
        XDeaths[playerid]++;
        
        if(XDeaths[playerid] == 5)
        {
                if((gettime() - LastDeath[playerid]) <= 5)
                {
				KickearFree(playerid);
                }
				else
                if((gettime() - LastDeath[playerid]) > 5)
                {
                        XDeaths[playerid]=0;
                }
        }
        
			}
		}*/
		
    SendDeathMessage(killerid, playerid, reason);
	SetPlayerScore(killerid,(GetPlayerScore(killerid))+10);
 	PlayerInfo[killerid][Kills]+=10;
	PlayerInfo[killerid][KILLS_PLAYER]+=1;
	ELOY9N_GivePlayerMoney(killerid, 8000);
	//PUNTOS RANGO
	PlayerInfo[killerid][PUNTOS_PLAYER_2]+=1;
	//
    format(string2, sizeof(string2), "%d", PlayerInfo[killerid][PUNTOS_PLAYER_2]);
   /// TextDrawSetString(TextdrawPuntosTotal[killerid], string2);
  //  TextDrawShowForPlayer(killerid, TextdrawPuntosTotal[killerid]);	
 	GameTextForPlayer(killerid, "~r~+10 XP ~n~~w~+$8.000 ~n~~w~+1 PTK",6000,4);

  /*  if(IsPlayerRNPC(killerid))
    {
	SetPlayerScore(killerid,(GetPlayerScore(killerid))+1);
 	PlayerInfo[killerid][Kills]+=1;
	ELOY9N_GivePlayerMoney(killerid, 100);
 	GameTextForPlayer(killerid, "~r~+1 XP ~n~~w~+$100",6000,4);        
    }*/

/*	if(reason == 49 || reason == 50)
	{
	format(string2, 128, " %s a sido autosuicidado razon: {FF0000}matar con vehiculo (driveby/carkill)", PlayerName2(killerid));
	SendClientMessageToAll(COLOR_RED, string2);
	SendClientMessage(killerid, COLOR_RED, "fuiste autosuicidado por matar en un vehiculo");
	SetPlayerHealth(killerid,0.0);
	}*/
	
	
	/////////////////boomer
	if(gTeam[playerid] == TEAM_ZOMBIES)
		{
			//GetPlayerPos(playerid,Float:x,Float:y,Float:z);
			//meatDrops[playerid] = CreatePickup(2804,19,Float:x,Float:y,Float:z,0);

			if(CLASEZ[playerid] == 4)
			{
			    new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid,Float:x,Float:y,Float:z);
				CreateExplosion(Float:x,Float:y,Float:z,0,6.0);

				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					GetClosestPlayer(i);
					if(gTeam[i] == NO_TEAM || gTeam[i] == TEAM_EXTERMINADOR || gTeam[i] == TEAM_CENTINELAS)
					{
								if(IsPlayerInRangeOfPoint(i,7.0,Float:x,Float:y,Float:z))
								{
									if(InfeccionEnprogreso[i] == 0)
										{

                                                InfeccionEnprogreso[i]=1;
                                                VidaTimer[i]=SetTimerEx("VidaBajando", 1000,0,"d",playerid);
												TextDrawShowForPlayer(i,HealthBar[0]);
												SetPlayerDrunkLevel (i, 200);
                        						//SendClientMessage(playerid,COLOR_RED,"Inefectado con el virus T.");
                        					//	GameTextForPlayer(i, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~r~Infectado", 10000, 6);
                                                 GameTextForPlayer(i, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~r~Infectado", 3000, 5);
                   							    ELOY9N_GivePlayerMoney(killerid,2000);
        										GameTextForPlayer(killerid,"~r~+2 score ~n~~w~+$2000",6000,4);
        										SetPlayerScore(killerid, GetPlayerScore(killerid) + 2);
       										//	SetPlayerTeam(playerid, gTeam[playerid]=2);
												//InfectPlayerStandard(i);
										}
									}
								}
							}
						}
					}



	
	////////////////
	if(gTeam[playerid] == NO_TEAM && gTeam[killerid] == TEAM_ZOMBIES || gTeam[playerid] == TEAM_EXTERMINADOR && gTeam[killerid] == TEAM_ZOMBIES || gTeam[playerid] == TEAM_CENTINELAS && gTeam[killerid] == TEAM_ZOMBIES)
	{
      //  GetPlayerPos(playerid,POSJMM[0],POSJMM[1],POSJMM[2]);
        PlayerPlaySound(playerid, 1002, 0.0, 0.0, 0.0);
      //  Convertido[playerid] = 1;
	
	}
    PlayerInfo[playerid][tSpawnZ] = 120;
    gTeam[playerid] = 2;
	SetPlayerTeam(playerid, gTeam[playerid]);
    //gTeam[playerid] = 1;
    Murio[playerid] = 1;
    MurioChaleco[playerid] = 1;
    //Skins[playerid] = skinsz[random(5)];
    //SetPlayerSkin(playerid, skinsz[random(5)]);
	return 1;
}

//==============================================================================

public OnPlayerText(playerid, text[])
{
//==============================================================================
// Vip Chat
//==============================================================================
 	if(DetectarSpam(text))
    {
    if(PlayerInfo[playerid][Level] == 0 && !IsPlayerAdmin(playerid))
	{
		GetPlayerName(playerid,string2,sizeof(string2));
        ShowPlayerDialog(playerid, 12, DIALOG_STYLE_MSGBOX, "{00FFFF}Anti Spam", "{FFFFFF}No hagas spam o seras {FF0000}Baneado", "Aceptar", "");
		format(string2,sizeof(string2),"[Servidor]: {FFFFFF}%s {FF0000}Id: {FFFFFF}[%i] {FF0000}Posible Spam Dijo: %s",string2,playerid,text);
		MessageToAdmins(COLOR_WHITE,string2);
        return 0;
    }
    }

    if (text[0] == '!' && (gTeam[playerid] == NO_TEAM))
	{
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}Radio {FFFFFF}%s [%d]: {FFFF00}%s",string2, playerid, text[1]);
		MessageToHumans(COLOR_WHITE,string2);
	    return 0;
    }
    if (text[0] == '!' && (gTeam[playerid] == TEAM_EXTERMINADOR))
	{
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}Radio {FF9900}%s [%d]: {FFFFFF}%s",string2, playerid, text[1]);
		MessageToEXTERMINADOR(COLOR_WHITE,string2);
	    return 0;
    }
    if (text[0] == '!' && (gTeam[playerid] == TEAM_CENTINELAS))
	{
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}Radio {FFFFFF}%s [%d]: {FFFF00}%s",string2, playerid, text[1]);
		MessageToCentinelas(COLOR_WHITE,string2);
	    return 0;
    }    
    if (text[0] == '!' && (gTeam[playerid] == TEAM_ZOMBIES))
	{
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{9800FF}Aullido {FFA300}%s [%d]: {FFFF00}%s",string2, playerid, text[1]);
		MessageToZombies(COLOR_WHITE,string2);
	    return 0;
    }
    
    	if(text[0] == '$' && PlayerInfo[playerid][VIP_TIENE] >= 1)
	{
	    GetPlayerName(playerid,string2,sizeof(string2));
        if(PlayerInfo[playerid][VIP_TIENE] == 1)
        {
		format(string2,sizeof(string2),"{FFFF00}Chat Vip - {FFFFFF}Plata {FFFFFF}- %s{00FF00}[%d]:{FFFFFF} %s",string2, playerid, text[1]);
        }
        if(PlayerInfo[playerid][VIP_TIENE] == 2)
        {
		format(string2,sizeof(string2),"{FFFF00}Chat Vip - {FF8040}Bronce {FFFFFF}- %s{00FF00}[%d]:{FFFFFF} %s",string2, playerid, text[1]);
        }
        if(PlayerInfo[playerid][VIP_TIENE] == 3)
        {
		format(string2,sizeof(string2),"{FFFF00}Chat Vip - {FFFF00}Oro {FFFFFF}- %s{00FF00}[%d]:{FFFFFF} %s",string2, playerid, text[1]);
        }
        if(PlayerInfo[playerid][VIP_TIENE] == 4)
        {
		format(string2,sizeof(string2),"{FFFF00}Chat Vip - {41FFEC}Prime {FFFFFF}- %s{00FF00}[%d]:{FFFFFF} %s",string2, playerid, text[1]);
        }
        if(PlayerInfo[playerid][VIP_TIENE] == 5)
        {
		format(string2,sizeof(string2),"{FFFF00}Chat Vip - {FF0000}Patreon {FFFFFF}- %s{00FF00}[%d]:{FFFFFF} %s",string2, playerid, text[1]);
        }                                
		MessageToPlayerVIP(0xDC686BAA,string2);
	    return 0;
	}
    
	if(ServerInfo[AntiSwear] == 1 && PlayerInfo[playerid][Level] < 6)
	for(new s = 0; s < ForbiddenWordCount; s++)
    {
		new pos;
		while((pos = strfind(text,ForbiddenWords[s],true)) != -1) for(new i = pos, j = pos + strlen(ForbiddenWords[s]); i < j; i++) text[i] = '*';
	}
	
	if(text[0] == '#' && PlayerInfo[playerid][Level] == 1) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FFFFFF}Admin Chat {00FF00}| Ayudante | : {800080}%s[%d]:{FFFFFF} %s",string2, playerid, text[1]); MessageToAdmins(COLOR_WHITE,string2);
	    return 0;
	}
	if(text[0] == '#' && PlayerInfo[playerid][Level] == 2) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FFFFFF}Admin Chat {FF9900}| Moderador | : {800080}%s[%d]:{FFFFFF} %s",string2, playerid, text[1]); MessageToAdmins(COLOR_WHITE,string2);
	    return 0;
	}
	if(text[0] == '#' && PlayerInfo[playerid][Level] == 3) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FFFFFF}Admin Chat {33CCFF}| Administrador | : {800080}%s[%d]:{FFFFFF} %s",string2, playerid, text[1]); MessageToAdmins(COLOR_WHITE,string2);
	    return 0;
	}
	if(text[0] == '#' && PlayerInfo[playerid][Level] == 4) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FFFFFF}Admin Chat {FFFF00}| Organizador | : {800080}%s[%d]:{FFFFFF} %s",string2, playerid, text[1]); MessageToAdmins(COLOR_WHITE,string2);
	    return 0;
	}
	if(text[0] == '#' && PlayerInfo[playerid][Level] == 5) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FFFFFF}Admin Chat {2C2727}| Director | : {800080}%s[%d]:{FFFFFF} %s",string2, playerid, text[1]); MessageToAdmins(COLOR_WHITE,string2);
	    return 0;
	}
	if(text[0] == '#' && PlayerInfo[playerid][Level] == 6) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FFFFFF}Admin Chat {A52A2A}| Supervisor | : {800080}%s[%d]:{FFFFFF} %s",string2, playerid, text[1]); MessageToAdmins(COLOR_WHITE,string2);
	    return 0;
	}

	if(text[0] == '#' && PlayerInfo[playerid][Level] == 7) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FFFFFF}Admin Chat {FFFF00}| Director | : {800080}%s[%d]:{FFFFFF} %s",string2, playerid, text[1]); MessageToAdmins(COLOR_WHITE,string2);
	    return 0;
	}
	if(text[0] == '#' && PlayerInfo[playerid][Level] == 8) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FFFFFF}Admin Chat {FFFF00}| Director | : {800080}%s[%d]:{FFFFFF} %s",string2, playerid, text[1]); MessageToAdmins(COLOR_WHITE,string2);
	    return 0;
	}
	if(text[0] == '&' && PlayerInfo[playerid][CLAN_TIENE] == 1) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{00FF97}Clan SD - %s[%d]: %s",string2, playerid, text[1]);
		MessageToPlayerCLANSD(color_SD,string2);
	    return 0;
	}
	if(text[0] == '&' && PlayerInfo[playerid][CLAN_TIENE] == 2) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{008000}Clan MID - %s[%d]: %s",string2, playerid, text[1]);
		MessageToPlayerCLANMID(0x33F3FF96,string2);
	    return 0;
	}
		if(text[0] == '&' && PlayerInfo[playerid][CLAN_TIENE] == 3) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{FF0000}Clan SWO - %s[%d]: %s",string2, playerid, text[1]);
		MessageToPlayerCLANSWO(0xFF0000DD,string2);
	    return 0;		
	}
		if(text[0] == '&' && PlayerInfo[playerid][CLAN_TIENE] == 4) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{800080}Clan GOD - %s[%d]: %s",string2, playerid, text[1]);
		MessageToPlayerCLANGOD(0x80008096,string2);
	    return 0;
	}
		if(text[0] == '&' && PlayerInfo[playerid][CLAN_TIENE] == 5) {
	    GetPlayerName(playerid,string2,sizeof(string2));
		format(string2,sizeof(string2),"{000000}Clan OG - %s[%d]: %s",string2, playerid, text[1]);
		MessageToPlayerCLANOG(0x00000096,string2);
	    return 0;
	}
	if(ServerInfo[DisableChat] == 1) {
		SendClientMessage(playerid,red,"El Chat ha sido desactivado");
	 	return 0;
	}
	
 	if(PlayerInfo[playerid][Muted] == 1)
	{
 		PlayerInfo[playerid][MuteWarnings]++;
		if(PlayerInfo[playerid][MuteWarnings] < ServerInfo[MaxMuteWarnings]) {
			format(string2, sizeof(string2),"CUIDADO: Estas muteado, si continuas hablando seras expulsado. (%d / %d)", PlayerInfo[playerid][MuteWarnings], ServerInfo[MaxMuteWarnings] );
			SendClientMessage(playerid,red,string2);
		} else {
			SendClientMessage(playerid,red,"Has sido advertido ! Ahora has sido expulsado");
			format(string2, sizeof(string2),"%s (ID %d) ha sido expulsado por exceder las muteadas", PlayerName2(playerid), playerid);
			SendClientMessageToAll(grey,string2);
			SaveToFile("KickLog",string2); Kick(playerid);
		} return 0;
	}
	
	if(ServerInfo[AntiSpam] == 1 && (PlayerInfo[playerid][Level] == 0 && !IsPlayerAdmin(playerid)) )
	{
		if(PlayerInfo[playerid][SpamCount] == 0) PlayerInfo[playerid][SpamTime] = TimeStamp();

	    PlayerInfo[playerid][SpamCount]++;
		if(TimeStamp() - PlayerInfo[playerid][SpamTime] > SPAM_TIMELIMIT) { // Its OK your messages were far enough apart
			PlayerInfo[playerid][SpamCount] = 0;
			PlayerInfo[playerid][SpamTime] = TimeStamp();
		}
		else if(PlayerInfo[playerid][SpamCount] == SPAM_MAX_MSGS) {
			format(string2,sizeof(string2),"%s ha sido expulsado (Flood/Spam Proteccion)", PlayerName2(playerid));
			SendClientMessageToAll(grey,string2); print(string2);
			SaveToFile("KickLog",string2);
			Kick(playerid);
		}
		else if(PlayerInfo[playerid][SpamCount] == SPAM_MAX_MSGS-1) {
        ShowPlayerDialog(playerid, 12, DIALOG_STYLE_MSGBOX, "Advertencia:","{FFFFFF}evita el flood o seras {FF0000}expulsado", "Aceptar", "");
			return 0;
		}
	}

	if(PlayerInfo[playerid][Caps] == 1) UpperToLower(text);
	if(ServerInfo[NoCaps] == 1) UpperToLower(text);

	for(new i = 1; i < MAX_CHAT_LINES-1; i++) Chat[i] = Chat[i+1];
 	new ChatSTR[128]; GetPlayerName(playerid,ChatSTR,sizeof(ChatSTR)); format(ChatSTR,128,"[lchat]%s: %s",ChatSTR, text[0] );
	Chat[MAX_CHAT_LINES-1] = ChatSTR; new chat[150];
	static LastPrivmsg[MAX_PLAYERS][128];
	if(strfind(LastPrivmsg[playerid], text, false) != -1) return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}No repitas palabras!."), 0;
	strmid(LastPrivmsg[playerid], text, 0, strlen(text), sizeof(LastPrivmsg[]));
	SetPlayerChatBubble(playerid,text,COLOR_WHITE,50,7000);
	
   /* if (gTeam[playerid] == NO_TEAM)
	{
	format(chat, sizeof(chat), "[%i]: %s", playerid, text);
	SendPlayerMessageToAll(playerid,chat);
	}*/
	if(PlayerInfo[playerid][LoggedIn] == 0) return SendClientMessage(playerid, COLOR_RED, "No podes hablar si no te logueaste.");
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
 /*	if (gTeam[playerid] == TEAM_SWO)
	{
    format(chat, sizeof(chat), "{87CEEB}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
    SendClientMessageToAll(color_ARC,chat);
	}*/
    if (gTeam[playerid] == TEAM_GOD)
	{
	format(chat, sizeof(chat), "{800080}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(color_GOD,chat);
	}	
    if (gTeam[playerid] == TEAM_SD)
	{
	format(chat, sizeof(chat), "{00FF97}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(color_SD,chat);
	}
    if (gTeam[playerid] == TEAM_NEMESIS)
	{
	format(chat, sizeof(chat), "{FF0000}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_RED,chat);
	}	
    if (gTeam[playerid] == TEAM_SWO)
	{
    format(chat, sizeof(chat), "{FF0000}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
    SendClientMessageToAll(color_SWO,chat);
	}
	
    if (gTeam[playerid] == TEAM_NOCLAN2)
	{
		format(chat, sizeof(chat), "%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
		SendClientMessageToAll(COLOR_WHITE,chat);		
	}		
    if (gTeam[playerid] == TEAM_NOCLAN)
	{
		if(PlayerInfo[playerid][CLAN_TIENE] == 0)
		{
		format(chat, sizeof(chat), "%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
		SendClientMessageToAll(COLOR_WHITE,chat);
		}				
		else if(PlayerInfo[playerid][CLAN_TIENE] == 1)
		{
		format(chat, sizeof(chat), "{0FF97F}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
		SendClientMessageToAll(COLOR_WHITE,chat);
		}
		else if(PlayerInfo[playerid][CLAN_TIENE] == 3)
		{
		format(chat, sizeof(chat), "{FF0000}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
		SendClientMessageToAll(COLOR_WHITE,chat);
		}
		else if(PlayerInfo[playerid][CLAN_TIENE] == 4)
		{
		format(chat, sizeof(chat), "{800080}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
		SendClientMessageToAll(COLOR_WHITE,chat);
		}		
	}	
    if (gTeam[playerid] == TEAM_HUMANOS)
	{
	format(chat, sizeof(chat), "{218C07}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(CELESTE_ADMIN,chat);
	}
    if (gTeam[playerid] == TEAM_EXTERMINADOR2)
	{
	format(chat, sizeof(chat), "{804000}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(CELESTE_ADMIN,chat);
	}


	if (gTeam[playerid] == TEAM_CENTINELAS)
	{
	if(PlayerInfo[playerid][RANGO_PLAYER] == 0)
	{
	format(chat, sizeof(chat), "{FFFF00}[Novato] {FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 1)
	{
	format(chat, sizeof(chat), "{FFFF00}[Civil] {FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 2)
	{
	format(chat, sizeof(chat), "{FFFF00}Superviviente.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 3)
	{
	format(chat, sizeof(chat), "{FFFF00}Superviviente[I].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 4)
	{
	format(chat, sizeof(chat), "{FFFF00}Superviviente[II].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 5)
	{
	format(chat, sizeof(chat), "{FFFF00}Superviviente[III].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 6)
	{
	format(chat, sizeof(chat), "{FFFF00}Superviviente[IV].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 7)
	{
	format(chat, sizeof(chat), "{FFFF00}Superviviente[Avanzado].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 8)
	{
	format(chat, sizeof(chat), "{FFFF00}Superviviente[Experto].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 9)
	{
	format(chat, sizeof(chat), "{FFFF00}Sub-Oficial.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 10)
	{
	format(chat, sizeof(chat), "{FFFF00}Oficial.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 11)
	{
	format(chat, sizeof(chat), "{FFFF00}Comisario.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 12)
	{
	format(chat, sizeof(chat), "{FFFF00}Soldado.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 13)
	{
	format(chat, sizeof(chat), "{FFFF00}Cabo.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 14)
	{
	format(chat, sizeof(chat), "{FFFF00}Navy.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 15)
	{
	format(chat, sizeof(chat), "{FFFF00}Elite.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 16)
	{
	format(chat, sizeof(chat), "{FFFF00}Warframe.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(COLOR_YELLOW,chat);
	}
	}   
       
	if (gTeam[playerid] == NO_TEAM)
	{
		format(chat, sizeof(chat), "{218C07}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
		SendClientMessageToAll(CELESTE_ADMIN,chat);			
	}


	if (gTeam[playerid] == TEAM_EXTERMINADOR)
	{
		if(PlayerInfo[playerid][LEERACTIVADO_PLAYER] == 0) 
		{
		format(chat, sizeof(chat), "{804000}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
		SendClientMessageToAll(marron,chat);			
		}
		if(PlayerInfo[playerid][LEERACTIVADO_PLAYER] == 3) //Cambiado a 3
		{
	if(PlayerInfo[playerid][RANGO_PLAYER] == 0)
	{
	format(chat, sizeof(chat), "{804000}[Novato] {FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 1)
	{
	format(chat, sizeof(chat), "{804000}[Civil] {FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 2)
	{
	format(chat, sizeof(chat), "{804000}Superviviente.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 3)
	{
	format(chat, sizeof(chat), "{804000}Superviviente[I].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 4)
	{
	format(chat, sizeof(chat), "{804000}Superviviente[II].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 5)
	{
	format(chat, sizeof(chat), "{804000}Superviviente[III].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 6)
	{
	format(chat, sizeof(chat), "{804000}Superviviente[IV].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 7)
	{
	format(chat, sizeof(chat), "{804000}Superviviente[Avanzado].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 8)
	{
	format(chat, sizeof(chat), "{804000}Superviviente[Experto].{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 9)
	{
	format(chat, sizeof(chat), "{804000}Sub-Oficial.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 10)
	{
	format(chat, sizeof(chat), "{804000}Oficial.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 11)
	{
	format(chat, sizeof(chat), "{804000}Comisario.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 12)
	{
	format(chat, sizeof(chat), "{804000}Soldado.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 13)
	{
	format(chat, sizeof(chat), "{804000}Cabo.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 14)
	{
	format(chat, sizeof(chat), "{804000}Navy.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 15)
	{
	format(chat, sizeof(chat), "{804000}Elite.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
	if(PlayerInfo[playerid][RANGO_PLAYER] == 16)
	{ 
	format(chat, sizeof(chat), "{804000}Warframe.{FFFFFF}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
	SendClientMessageToAll(marron,chat);
	}
		}
	}
    if (gTeam[playerid] == TEAM_ZOMBIES)
	{
		format(chat, sizeof(chat), "{979797}%s[%i]: {FFFFFF}%s",PlayerName2(playerid), playerid, text);
		SendClientMessageToAll(COLOR_WHITE,chat);			
	
	}
	}
	return 0;

}

//==============================================================================
forward HighLight(playerid);
public HighLight(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(PlayerInfo[playerid][blipS] == 0) { SetPlayerColor(playerid, 0xFF0000AA); PlayerInfo[playerid][blipS] = 1; }
	else { SetPlayerColor(playerid, 0x33FF33AA); PlayerInfo[playerid][blipS] = 0; }
	return 0;
}
//===================== [ DCMD Commands ]=======================================

dcmd_bonus(playerid,params[]) {

if(PlayerInfo[playerid][BONUS_PLAYER] == 1){
	SendClientMessage(playerid,COLOR_GREEN,"Ya recibiste tu bonus, no podes recibirlo dos veces.");
}
else{
	PlayerInfo[playerid][BONUS_PLAYER] = 1;
	PlayerInfo[playerid][PUNTOS_PLAYER_2] += 5000;
	SendClientMessage(playerid,COLOR_GREEN,"Recibiste tu bonus + 5000 puntos.");
}

return 1;
}

dcmd_tops(playerid,params[]) {

	new str[600];
	format(str, sizeof(str), "%sConquistas {AB1A76}Clanes\n\
	Conquistas {AB1A76}Individuales\n\
	Eventos {AB1A76}individuales ganados\n\
	Masacre {AB1A76}Oceanside {FFFF00}(CLANES)\n\
	Temporada {AB1A76}1\n\
	Top {AB1A76}Kills\n\
	Top {AB1A76}Muertes\n\
	Top {AB1A76}Score\n\
	Top {03FF13}Dinero\n\
	Top {AB1A76}Puntos R\n\
	Mejor {AB1A76}Zombie", str);

	ShowPlayerDialog(playerid, DIALOG_TOPS, DIALOG_STYLE_LIST, "Tops generales de WarBlood", str, "Aceptar", "Cancelar");

return 1;
}
// Variables globales para almacenar las probabilidades

dcmd_ruletinfinity(playerid, params[])
{
	    if (PlayerInfo[playerid][Level] < 8) {
        return SendClientMessage(playerid, COLOR_RED, "Comando deshabilitado.");
    }	
	else 
	{
   		new type, value;
		if (sscanf(params, "di", type, value)) {
			return SendClientMessage(playerid, COLOR_RED, "Uso correcto: /ruletinfinity [1 (verde) / 2 (mismo color) / 3 (default)] [valor]");
		}

		if (type == 1) {
			g_probVerde_infinity = value;
			SendClientMessage(playerid, COLOR_GREEN, "Probabilidad de verde actualizada.");
		} else if (type == 2) {
			g_probMismoColor_infinity = value;
			SendClientMessage(playerid, COLOR_GREEN, "Probabilidad de mismo color actualizada.");
		} else if (type == 3) {
			g_probVerde_infinity = 1;
			g_probMismoColor_infinity = 18;
			SendClientMessage(playerid, COLOR_GREEN, "Probabilidades restablecidas a los valores por defecto.");
		} else {
			SendClientMessage(playerid, COLOR_RED, "Tipo inválido. Usa 1 para verde, 2 para mismo color, o 3 para restablecer.");
			return 0;
		}
	}

    return 1;
}
dcmd_ruletdeluxe(playerid, params[])
{
		if (PlayerInfo[playerid][Level] < 8) {
        return SendClientMessage(playerid, COLOR_RED, "Comando deshabilitado.");
    }
	else {

		new type, value;
		if (sscanf(params, "di", type, value)) {
			return SendClientMessage(playerid, COLOR_RED, "Uso correcto: /ruletdeluxe [1 (verde) / 2 (mismo color) / 3 (default)] [valor]");
		}
		if (type == 1) {
			g_probVerde_deluxe = value;
			SendClientMessage(playerid, COLOR_GREEN, "Probabilidad de verde actualizada.");
		} else if (type == 2) {
			g_probMismoColor_deluxe = value;
			SendClientMessage(playerid, COLOR_GREEN, "Probabilidad de mismo color actualizada.");
		} else if (type == 3) {
			g_probVerde_deluxe = 1;
			g_probMismoColor_deluxe = 18;
			SendClientMessage(playerid, COLOR_GREEN, "Probabilidades restablecidas a los valores por defecto.");
		} else {
			SendClientMessage(playerid, COLOR_RED, "Tipo inválido. Usa 1 para verde, 2 para mismo color, o 3 para restablecer.");
			return 0;
		}
	}
    return 1;
}
dcmd_ruletnormal(playerid, params[])
{
	    if (PlayerInfo[playerid][Level] < 8) {
        return SendClientMessage(playerid, COLOR_RED, "Comando deshabilitado.");
    }	
	else {
    new type, value;
    if (sscanf(params, "di", type, value)) {
        return SendClientMessage(playerid, COLOR_RED, "Uso correcto: /ruletnormal [1 (verde) / 2 (mismo color) / 3 (default)] [valor]");
    }

    if (type == 1) {
        g_probVerde_normal = value;
        SendClientMessage(playerid, COLOR_GREEN, "Probabilidad de verde actualizada.");
    } else if (type == 2) {
        g_probMismoColor_normal = value;
        SendClientMessage(playerid, COLOR_GREEN, "Probabilidad de mismo color actualizada.");
    } else if (type == 3) {
        g_probVerde_normal = 1;
        g_probMismoColor_normal = 18;
        SendClientMessage(playerid, COLOR_GREEN, "Probabilidades restablecidas a los valores por defecto.");
    } else {
        SendClientMessage(playerid, COLOR_RED, "Tipo inválido. Usa 1 para verde, 2 para mismo color, o 3 para restablecer.");
        return 0;
    }

    }
    return 1;
}



dcmd_ruletainfinity(playerid, params[])
{
    new amount, color;
    if (sscanf(params, "di", amount, color)) {
        return SendClientMessage(playerid, COLOR_RED, "Uso correcto: /ruleta [cantidad] [1 (rojo) / 2 (negro) / 3 (verde)]");
    }

    if (amount <= 0) {
        return SendClientMessage(playerid, COLOR_RED, "La cantidad apostada debe ser mayor a 0.");
    }

    if (amount > 1500000) {
        return SendClientMessage(playerid, COLOR_RED, "La cantidad apostada no puede ser mayor a 1.500.000.");
    }

    if (GetPlayerMoney(playerid) < amount) {
        return SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero para apostar esa cantidad.");
    }

    if (color < 1 || color > 3) {
        return SendClientMessage(playerid, COLOR_RED, "Número de color inválido. Debes elegir entre 1 (rojo), 2 (negro) o 3 (verde).");
    }

    new prob = random(100); // Usamos un número aleatorio entre 0 y 99
    new resultColor;
    new resultColorName[16];

    if (color == 3) { // Si el jugador elige verde
        if (prob < g_probVerde_infinity) { // Probabilidad para el verde
            resultColor = 3;
            format(resultColorName, sizeof(resultColorName), "verde");
        } else { // Probabilidad para rojo o negro
            resultColor = (random(2) == 0) ? 1 : 2;
            format(resultColorName, sizeof(resultColorName), resultColor == 1 ? "rojo" : "negro");
        }
    } else { // Si el jugador elige rojo o negro
        if (prob < g_probVerde_infinity) { // Probabilidad para el verde
            resultColor = 3;
            format(resultColorName, sizeof(resultColorName), "verde");
        } else if (prob < g_probVerde_infinity + g_probMismoColor_infinity) { // Probabilidad para el mismo color
            resultColor = color;
            format(resultColorName, sizeof(resultColorName), color == 1 ? "rojo" : "negro");
        } else { // Probabilidad para el color contrario
            resultColor = (color == 1) ? 2 : 1;
            format(resultColorName, sizeof(resultColorName), resultColor == 1 ? "rojo" : "negro");
        }
    }

    new str[256];
    new pname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pname, sizeof(pname));

    new winDinero = 0;

    if (resultColor == 3) { // Verde
        if (color == 3) {
            winDinero = amount * 36; // Ganancia alta por acertar el verde
        } else {
            winDinero = -amount; // Pierde la apuesta
        }
    } else if (resultColor == 1 || resultColor == 2) { // Rojo o negro
        if (color == resultColor) {
            winDinero = amount * 2; // Gana el doble de lo apostado
        } else {
            winDinero = -amount; // Pierde la apuesta
        }
    }

    ELOY9N_GivePlayerMoney(playerid, winDinero); // Da o quita dinero al jugador

    format(str, sizeof(str), "{FFFF00}Resultado:{FFFFFF} Salió %s. {FFFFFF}Apostaste al %s y %s {00FF00}$%d{FFFFFF}.",
           resultColorName, (color == 1 ? "rojo" : (color == 2 ? "negro" : "verde")), (winDinero > 0 ? "ganaste" : "perdiste"), abs(winDinero));
    SendClientMessage(playerid, COLOR_GREEN, str);

    new globalMessage[256];

    format(globalMessage, sizeof(globalMessage), "{FFFF00}[Casino-War Blood]{FFFFFF} [Crupier] El jugador [%s] apostó {00FF00}$%d{FFFFFF} al %s y %s {00FF00}$%d{FFFFFF}.",
           pname, amount, (color == 1 ? "rojo" : (color == 2 ? "negro" : "verde")), (winDinero > 0 ? "ganó" : "perdió"), abs(winDinero));

    SendClientMessageToAll(COLOR_WHITE, globalMessage);

    return 1;
}


dcmd_ruletadeluxe(playerid, params[])
{
    new amount, color;
    if (sscanf(params, "di", amount, color)) {
        return SendClientMessage(playerid, COLOR_RED, "Uso correcto: /ruleta [cantidad] [1 (rojo) / 2 (negro) / 3 (verde)]");
    }

    if (amount <= 0) {
        return SendClientMessage(playerid, COLOR_RED, "La cantidad apostada debe ser mayor a 0.");
    }

    if (amount > 9000) {
        return SendClientMessage(playerid, COLOR_RED, "La cantidad apostada no puede ser mayor a 9000.");
    }

    if (GetPlayerScore(playerid) < amount) {
        return SendClientMessage(playerid, COLOR_RED, "No tienes suficiente score para apostar esa cantidad.");
    }

    if (color < 1 || color > 3) {
        return SendClientMessage(playerid, COLOR_RED, "Número de color inválido. Debes elegir entre 1 (rojo), 2 (negro) o 3 (verde).");
    }

    new prob = random(100); // Usamos un número aleatorio entre 0 y 99
    new resultColor;
    new resultColorName[16];

    if (color == 3) { // Si el jugador elige verde
        if (prob < g_probVerde_deluxe) { // Probabilidad para el verde
            resultColor = 3;
            format(resultColorName, sizeof(resultColorName), "verde");
        } else { // Probabilidad para rojo o negro
            resultColor = (random(2) == 0) ? 1 : 2;
            format(resultColorName, sizeof(resultColorName), resultColor == 1 ? "rojo" : "negro");
        }
    } else { // Si el jugador elige rojo o negro
        if (prob < g_probVerde_deluxe) { // Probabilidad para el verde
            resultColor = 3;
            format(resultColorName, sizeof(resultColorName), "verde");
        } else if (prob < g_probVerde_deluxe + g_probMismoColor_deluxe) { // Probabilidad para el mismo color
            resultColor = color;
            format(resultColorName, sizeof(resultColorName), color == 1 ? "rojo" : "negro");
        } else { // Probabilidad para el color contrario
            resultColor = (color == 1) ? 2 : 1;
            format(resultColorName, sizeof(resultColorName), resultColor == 1 ? "rojo" : "negro");
        }
    }

    new str[256];
    new pname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pname, sizeof(pname));

    new winPoints = 0;

    if (resultColor == 3) { // Verde
        if (color == 3) {
            winPoints = amount * 36; // Ganancia alta por acertar el verde
        } else {
            winPoints = -amount; // Pierde la apuesta
        }
    } else { // Rojo o negro
        if (color == resultColor) {
            winPoints = amount * 2; // Gana el doble de lo apostado
        } else {
            winPoints = -amount; // Pierde la apuesta
        }
    }

    SetPlayerScore(playerid, GetPlayerScore(playerid) + winPoints);
    PlayerInfo[playerid][Kills] += winPoints;

    format(str, sizeof(str), "{FFFF00}Resultado:{FFFFFF} Salió %s. {FFFFFF}Apostaste al %s y %s {00FF00}%d{FFFFFF} score.",
           resultColorName, (color == 1 ? "rojo" : (color == 2 ? "negro" : "verde")), (winPoints > 0 ? "ganaste" : "perdiste"), abs(winPoints));
    SendClientMessage(playerid, COLOR_GREEN, str);

    new globalMessage[256];

    format(globalMessage, sizeof(globalMessage), "{FFFF00}[Casino-War Blood]{FFFFFF} [Crupier] El jugador [%s] apostó {00FF00}%d{FFFFFF} score al %s y %s {00FF00}%d{FFFFFF} score.",
           pname, amount, (color == 1 ? "rojo" : (color == 2 ? "negro" : "verde")), (winPoints > 0 ? "ganó" : "perdió"), abs(winPoints));

    SendClientMessageToAll(COLOR_WHITE, globalMessage);

    return 1;
}




// Comando de ruleta
dcmd_ruleta(playerid, params[])
{
    new amount, color;
    if (sscanf(params, "di", amount, color)) {
        return SendClientMessage(playerid, COLOR_RED, "Uso correcto: /ruleta [cantidad] [1 (rojo) / 2 (negro) / 3 (verde)]");
    }

    if (amount <= 0) {
        return SendClientMessage(playerid, COLOR_RED, "La cantidad apostada debe ser mayor a 0.");
    }

    if (amount > 9000) {
        return SendClientMessage(playerid, COLOR_RED, "La cantidad apostada no puede ser mayor a 9000.");
    }

    if (PlayerInfo[playerid][PUNTOS_PLAYER_2] < amount) {
        return SendClientMessage(playerid, COLOR_RED, "No tienes suficientes puntos para apostar esa cantidad.");
    }

    if (color < 1 || color > 3) {
        return SendClientMessage(playerid, COLOR_RED, "Número de color inválido. Debes elegir entre 1 (rojo), 2 (negro) o 3 (verde).");
    }

    new prob = random(100); // Usamos un número aleatorio entre 0 y 99
    new resultColor;
    new resultColorName[16];

    if (color == 3) { // Si el jugador elige verde
        if (prob < g_probVerde_normal) { // Probabilidad para el verde
            resultColor = 3;
            format(resultColorName, sizeof(resultColorName), "verde");
        } else { // Probabilidad para rojo o negro
            resultColor = (random(2) == 0) ? 1 : 2;
            format(resultColorName, sizeof(resultColorName), resultColor == 1 ? "rojo" : "negro");
        }
    } else { // Si el jugador elige rojo o negro
        if (prob < g_probVerde_normal) { // Probabilidad para el verde
            resultColor = 3;
            format(resultColorName, sizeof(resultColorName), "verde");
        } else if (prob < g_probVerde_normal + g_probMismoColor_normal) { // Probabilidad para el mismo color
            resultColor = color;
            format(resultColorName, sizeof(resultColorName), color == 1 ? "rojo" : "negro");
        } else { // Probabilidad para el color contrario
            resultColor = (color == 1) ? 2 : 1;
            format(resultColorName, sizeof(resultColorName), resultColor == 1 ? "rojo" : "negro");
        }
    }

    new str[256];
    new pname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pname, sizeof(pname));

    new winPoints = 0;

    if (resultColor == 3) { // Verde
        if (color == 3) {
            winPoints = amount * 36; // Ganancia alta por acertar el verde
        } else {
            winPoints = -amount; // Pierde la apuesta
        }
    } else if (resultColor == 1 || resultColor == 2) { // Rojo o negro
        if (color == resultColor) {
            winPoints = amount * 2; // Gana el doble de lo apostado
        } else {
            winPoints = -amount; // Pierde la apuesta
        }
    }

    PlayerInfo[playerid][PUNTOS_PLAYER_2] += winPoints; // Actualiza puntos (suma si winPoints es positivo, resta si es negativo)

    format(str, sizeof(str), "{FFFF00}Resultado:{FFFFFF} Salió %s. {FFFFFF}Apostaste al %s y %s {00FF00}%d{FFFFFF} puntos.",
           resultColorName, (color == 1 ? "rojo" : (color == 2 ? "negro" : "verde")), (winPoints > 0 ? "ganaste" : "perdiste"), abs(winPoints));
    SendClientMessage(playerid, COLOR_GREEN, str);

    new globalMessage[256];

    format(globalMessage, sizeof(globalMessage), "{FFFF00}[Casino-War Blood]{FFFFFF} [Crupier] El jugador [%s] apostó {00FF00}%d{FFFFFF} puntos al %s y %s {00FF00}%d{FFFFFF} puntos.",
           pname, amount, (color == 1 ? "rojo" : (color == 2 ? "negro" : "verde")), (winPoints > 0 ? "ganó" : "perdió"), abs(winPoints));

    SendClientMessageToAll(COLOR_WHITE, globalMessage);

    return 1;
}
















stock abs(value)
{
    return (value < 0) ? -value : value;
}

// Función para convertir una cadena a minúsculas
/*stock str_to_lower(string[])
{
    for (new i = 0; i < strlen(string); i++) {
        if (string[i] >= 'A' && string[i] <= 'Z') {
            string[i] += 'a' - 'A';
        }
    }
    return 1; // Agrega este return al final de la función
}*/





dcmd_dealer(playerid, params[]) {
    new Float:playerPosX, Float:playerPosY, Float:playerPosZ;
    GetPlayerPos(playerid, playerPosX, playerPosY, playerPosZ);

    if(IsPlayerInRangeOfPoint(playerid, DISTANCE_THRESHOLD, DEALER_X, DEALER_Y, DEALER_Z)) {
        new dealerDialog[1500]; // Cambia el nombre de la variable local
        format(dealerDialog, sizeof(dealerDialog), "Drogas\tPODER\tCosto\tCantidad\n");
        format(dealerDialog, sizeof(dealerDialog), "%sExtasis\t{FFA100}EV{FFFFFF}\t{FF0DBF}8000 Puntos de rango{FFFFFF}\t15\n", dealerDialog);
        format(dealerDialog, sizeof(dealerDialog), "%sLSD\t{FFA100}EV{FFFFFF}\t{FF0DBF}5000 Puntos de rango{FFFFFF}\t10\n", dealerDialog);
        format(dealerDialog, sizeof(dealerDialog), "%sFentanilo\t{FFA100}EV{FFFFFF}\t{FF0DBF}3500 Puntos de rango{FFFFFF}\t5\n", dealerDialog);
        format(dealerDialog, sizeof(dealerDialog), "%sGHB\t{FFA100}EV{FFFFFF}\t{FF0DBF}3000 Puntos de rango{FFFFFF}\t5\n", dealerDialog);
        format(dealerDialog, sizeof(dealerDialog), "%sAlucinógenos\t{0F1FFF}N-EV{FFFFFF}\t{FF0DBF}500 Puntos de rango{FFFFFF}\t5\n", dealerDialog);
        format(dealerDialog, sizeof(dealerDialog), "%sHeroína\t{0F1FFF}N-EV{FFFFFF}\t{FF0DBF}200 Puntos de rango{FFFFFF}\t3\n", dealerDialog);
        format(dealerDialog, sizeof(dealerDialog), "%sInhalantes\t{0F1FFF}N-EV{FFFFFF}\t{FF0DBF}30 Puntos de rango{FFFFFF}\t1\n", dealerDialog);
        format(dealerDialog, sizeof(dealerDialog), "%sKetamina\t{0F1FFF}N-EV{FFFFFF}\t{FF0DBF}25 Puntos de rango{FFFFFF}\t6\n", dealerDialog);
        format(dealerDialog, sizeof(dealerDialog), "%sKhat\t{0F1FFF}N-EV{FFFFFF}\t{FF0DBF}20 Puntos de rango{FFFFFF}\t4\n", dealerDialog);
        format(dealerDialog, sizeof(dealerDialog), "%sKratom\t{0F1FFF}N-EV{FFFFFF}\t{FF0DBF}10 Puntos de rango{FFFFFF}\t2\n", dealerDialog);

        ShowPlayerDialog(playerid, DIALOG_DEALER, DIALOG_STYLE_TABLIST_HEADERS, "{AB2567}Dealer {FFFFFF}de drogas", dealerDialog, "Aceptar", "Cancelar");
    } else {
        SendClientMessage(playerid, COLOR_RED, "Debes estar cerca del dealer para usar este comando.");
    }

    return 1;
}

dcmd_mochila(playerid, params[]) {
    #pragma unused params

    new str[1500];
    format(str, sizeof(str), "Drogas\tTipo\tCantidad\n");
    format(str, sizeof(str), "%sExtasis\t{FFA100}EV{FFFFFF}\t%d\n", str, PlayerInfo[playerid][EXTASIS_PLAYER_2]);
    format(str, sizeof(str), "%sLSD\t{FFA100}EV{FFFFFF}\t%d\n", str, PlayerInfo[playerid][LSD_PLAYER_2]);
    format(str, sizeof(str), "%sFentanilo\t{FFA100}EV{FFFFFF}\t%d\n", str, PlayerInfo[playerid][FENTANILO_PLAYER_2]);
    format(str, sizeof(str), "%sGHB\t{FFA100}EV{FFFFFF}\t%d\n", str, PlayerInfo[playerid][GHB_PLAYER_2]);
    format(str, sizeof(str), "%sAlucinógenos\t{0F1FFF}N-EV{FFFFFF}\t%d\n", str, PlayerInfo[playerid][ALUCINOGENO_PLAYER]);
    format(str, sizeof(str), "%sHeroína\t{0F1FFF}N-EV{FFFFFF}\t%d\n", str, PlayerInfo[playerid][HEROINA_PLAYER]);
    format(str, sizeof(str), "%sInhalantes\t{0F1FFF}N-EV{FFFFFF}\t%d\n", str, PlayerInfo[playerid][INHALANTES_PLAYER]);
    format(str, sizeof(str), "%sKetamina\t{0F1FFF}N-EV{FFFFFF}\t%d\n", str, PlayerInfo[playerid][KETAMINA_PLAYER]);
    format(str, sizeof(str), "%sKhat\t{0F1FFF}N-EV{FFFFFF}\t%d\n", str, PlayerInfo[playerid][KHAT_PLAYER]);
    format(str, sizeof(str), "%sKratom\t{0F1FFF}N-EV{FFFFFF}\t%d\n", str, PlayerInfo[playerid][KRATOM_PLAYER]);

    ShowPlayerDialog(playerid, DIALOG_MOCHILA, DIALOG_STYLE_TABLIST_HEADERS, "Mochila de Drogas", str, "Usar", "Cancelar");
	return 1;
}

dcmd_dararma(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256],   Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "/dararma [jugador] [ID del arma] [municiones]");
		new player1 = strval(tmp), weap, ammo, WeapName[32];
		if(!strlen(tmp3) || !IsNumeric(tmp3) || strval(tmp3) <= 0 || strval(tmp3) > 99999) ammo = 500; else ammo = strval(tmp3);
		if(!IsNumeric(tmp2)) weap = GetWeaponIDFromName(tmp2); else weap = strval(tmp2);
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
        	if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"ID de arma invalida");
			CMDMessageToPac0(playerid,"DARARMA");
			GetWeaponName(weap,WeapName,32);
			format(string2, sizeof(string2), "Le has dado a \"%s\" una %s [%d] con %d municiones", PlayerName2(player1), WeapName, weap, ammo); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" te ha dado una %s [%d] con %d municiones", PlayerName2(playerid), WeapName, weap, ammo); SendClientMessage(player1,red,string2); }
   			return ELOY9N_GivePlayerWeapon(player1, weap, ammo);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}
dcmd_darnemesis(playerid, params[]) {

    if (PlayerInfo[playerid][Level] < 1) {
        return SendClientMessage(playerid, COLOR_RED, "No tienes permiso para usar este comando.");
    }
	else {
    new targetID;
    if (sscanf(params, "u", targetID)) {
        return SendClientMessage(playerid, COLOR_RED, "USO: /darnemesis [ID DE JUGADOR]");
    }

    if (!IsPlayerConnected(targetID)) {
        return SendClientMessage(playerid, COLOR_RED, "El jugador no está conectado.");
    }

    ShowPlayerDialog(targetID, DIALOG_NEMESIS_CMD, DIALOG_STYLE_LIST, "{FF0000}Transformación", "Transformarse en Nemesis\nCancelar", "Seleccionar", "");
	}
    return 1;
}
dcmd_gotoco(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		new Float: pos[3], int;
		if(sscanf(params, "fffd", pos[0], pos[1], pos[2], int)) return SendClientMessage(playerid, COLOR_WHITE, "Utiliza: /gotoco (coordenada x) (coordenada y) (coordenada z) (interior)");
		SendClientMessage(playerid, COLOR_RED, "{1DF5F7}Pac0:{FFFFFF} Fuiste teletransportado a las coordenadas establecidas.");
		SetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		SetPlayerInterior(playerid, int);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
}

dcmd_setearvida(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/setearvida [jugador] [cantidad]");
		if(strval(tmp2) < 0 || strval(tmp2) > 100 && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid, red, "Cantidad de vida invalida");
		new player1 = strval(tmp), health = strval(tmp2);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SETEARVIDA");
			format(string2, sizeof(string2), "Has puesto la vida de \"%s's\" en '%d", pName(player1), health); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto tu vida en '%d'", pName(playerid), health); SendClientMessage(player1,red,string2); }
   			return SetPlayerHealth(player1, health);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setearchaleco(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/setearchaleco [jugador] [cantidad]");
		if(strval(tmp2) < 0 || strval(tmp2) > 100 && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid, red, "Candidad de blindaje invalido");
		new player1 = strval(tmp), armour = strval(tmp2);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SETEARCHALECO");
			format(string2, sizeof(string2), "Has puesto el blindaje de \"%s\" en '%d", pName(player1), armour); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto tu blindaje en '%d'", pName(playerid), armour); SendClientMessage(player1,red,string2); }
   			return SetPlayerArmour(player1, armour);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_seteardinero(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
    	new pame[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, pame, sizeof(pame));
		if(!strcmp(NickDePac0,pame,true) ||!strcmp(NickAutorizado,pame,true))
		{
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/seteardinero [jugador] [cantidad]");
		new player1 = strval(tmp), cash = strval(tmp2);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SETEARDINERO");
			format(string2, sizeof(string2), "Has puesto el dinero de \"%s\" en '$%d", pName(player1), cash); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto tu dinero en '$%d'", pName(playerid), cash); SendClientMessage(player1,red,string2); }
			ELOY9N_ResetMoney(player1);
   			return ELOY9N_GivePlayerMoney(player1, cash);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	    } else return SendClientMessage(playerid,red,"Solo alguien autorizado da dinero.");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}
dcmd_dardinero(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
    	new pame[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, pame, sizeof(pame));
		if(!strcmp(NickDePac0,pame,true) ||!strcmp(NickAutorizado,pame,true))
		{
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/dardinero [jugador] [cantidad]");
		new player1 = strval(tmp), cash = strval(tmp2);
		new current = GetPlayerMoney(player1);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"DARDINERO");
			format(string2, sizeof(string2), "Le has dado a \"%s\"  '$%d de dinero", pName(player1), cash); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" te ha dado '$%d'", pName(playerid), cash); SendClientMessage(player1,red,string2); }
			ELOY9N_ResetMoney(player1);
   			return ELOY9N_GivePlayerMoney(player1, current+cash);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	    } else return SendClientMessage(playerid,red,"Solo alguien autorizado da dinero.");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setearscore(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	new pame[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, pame, sizeof(pame));
		if(!strcmp(NickDePac0,pame,true) ||!strcmp(NickAutorizado,pame,true))
		{
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/setearscore [jugador] [puntaje]");
		new player1 = strval(tmp), score = strval(tmp2);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"Este player no se ha logueado");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SETEARSCORE");
			format(string2, sizeof(string2), "Has puesto el puntaje de \"%s\" en '%d' ", pName(player1), score); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto tu puntaje en '%d'", pName(playerid), score); SendClientMessage(player1,red,string2); }
			SetPlayerScore(player1, score);
		 	SavePlayer(player1);
		 	#if defined USE_STATS
			PlayerInfo[player1][Kills] = score;
	    	#endif
		 	return 1;
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	    	} else return SendClientMessage(playerid,red,"Solo alguien autorizado da score.");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_darscore(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
//	if(!strcmp(NickDePac0,pame,true) ||!strcmp(NickAutorizado,pame,true))
	new pame[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, pame, sizeof(pame));
		if(!strcmp(NickDePac0,pame,true) ||!strcmp(NickAutorizado,pame,true))
		{
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/darscore [jugador] [cantidad]");
		new player1 = strval(tmp), score = strval(tmp2);
		new currents = GetPlayerScore(player1);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"Este player no se ha logueado");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"DARSCORE");
			format(string2, sizeof(string2), "Le has dado a \"%s\"  '%d' de score", pName(player1), score); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" te ha dado '%d' de score", pName(playerid), score); SendClientMessage(player1,red,string2); }
			SetPlayerScore(player1, currents+score);
		 	SavePlayer(player1);
		 	#if defined USE_STATS
			PlayerInfo[player1][Kills] = currents+score;
	    	#endif
		 	return 1;
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
   	} else return SendClientMessage(playerid,red,"Solo alguien autorizado da score.");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_darskin(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/darskin [jugador] [ID del skin]");
		new player1 = strval(tmp), skin = strval(tmp2);
	//	if(!IsValidSkin(skin)) return SendClientMessage(playerid, red, "ID de skin invalida");
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"DARSKIN");
			format(string2, sizeof(string2), "Le has puesto a \"%s\" el skin '%d", pName(player1), skin); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" te ha puesto el skin '%d'", pName(playerid), skin); SendClientMessage(player1,red,string2); }
   			return SetPlayerSkin(player1, skin);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setwanted(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/setwanted [jugador] [nivel]");
		new player1 = strval(tmp), wanted = strval(tmp2);
		if(wanted > 6) return SendClientMessage(playerid, red, "Invaild wanted level");
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SETWANTED");
			format(string2, sizeof(string2), "Has puesto el nivel de busqueda de \"%s\" en '%d", pName(player1), wanted); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto tu nivel de busqueda en '%d'", pName(playerid), wanted); SendClientMessage(player1,red,string2); }
   			return SetPlayerWantedLevel(player1, wanted);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conetado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setname(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "/setname [jugador] [nuevo nombre]");
		new player1 = strval(tmp), length = strlen(tmp2);
		if(length < 3 || length > MAX_PLAYER_NAME) return SendClientMessage(playerid,red,"Numero de caracteres incorrecto");
		if(!IsValidName(tmp2)) return SendClientMessage(playerid,red,"Nombre Incorrecto/Inaceptable");
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
		if(!strcmp("con",tmp2,true) || !strcmp("aux",tmp2,true) || !strcmp("prn",tmp2,true) || !strcmp("lptn",tmp2,true) || !strcmp("nul",tmp2,true) || !strcmp("clock$",tmp2,true)) return SendClientMessage(playerid,red,"Ese nick esta prohibido");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SETNAME");
			format(string2, sizeof(string2), "Has cambiado el nombre de \"%s\" a \"%s\" ", pName(player1), tmp2); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" cambio tu nombre a \"%s\" ", pName(playerid), tmp2); SendClientMessage(player1,red,string2); }
			SetPlayerName(player1, tmp2);
   			return OnPlayerConnect(player1);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setearcolor(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 5) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) {
			SendClientMessage(playerid, red, "/setearcolor [jugador] [color]");
			return SendClientMessage(playerid, red, "Colores: 0-1-2-3-4-5-6-7-8-9");
		}
		new player1 = strval(tmp), Colour = strval(tmp2), colour[24];
		if(Colour > 9) return SendClientMessage(playerid, red, "Colores: 0-1-2-3-4-5-6-7-8-9");
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToPac0(playerid,"SETEARCOLOR");
			switch (Colour)
			{
			    case 0: { SetPlayerColor(player1,black); colour = "Negro"; }
			    case 1: { SetPlayerColor(player1,COLOR_WHITE); colour = "Blanco"; }
			    case 2: { SetPlayerColor(player1,red); colour = "Rojo"; }
			    case 3: { SetPlayerColor(player1,marron); colour = "Naranja"; }
				case 4: { SetPlayerColor(player1,marron); colour = "Marron"; }
				case 5: { SetPlayerColor(player1,COLOR_GREEN1); colour = "Verde"; }
				case 6: { SetPlayerColor(player1,COLOR_BLUE); colour = "Azul"; }
				case 7: { SetPlayerColor(player1,COLOR_PURPLE); colour = "Violeta"; }
				case 8: { SetPlayerColor(player1,COLOR_BROWN); colour = "Marron"; }
				case 9: { SetPlayerColor(player1,COLOR_PINK); colour = "Rosa"; }
			}
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto tu color en '%s' ", pName(playerid), colour); SendClientMessage(player1,red,string2); }
			format(string2, sizeof(string2), "Has puesto el color de \"%s\" en '%s' ", pName(player1), colour);
   			return SendClientMessage(playerid,red,string2);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setweather(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/setweather [jugador] [ID del clima]");
		new player1 = strval(tmp), weather = strval(tmp2);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SETWEATHER");
			format(string2, sizeof(string2), "Has puesto el clima de \"%s\" en '%d", pName(player1), weather); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto tu clima en  '%d'", pName(playerid), weather); SendClientMessage(player1,red,string2); }
			SetPlayerWeather(player1,weather); PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_settime(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/settime [jugador] [hora]");
		new player1 = strval(tmp), time = strval(tmp2);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SETTIME");
			format(string2, sizeof(string2), "Has puesto la hora de \"%s\" en %d:00", pName(player1), time); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto tu hora en %d:00", pName(playerid), time); SendClientMessage(player1,red,string2); }
			PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return SetPlayerTime(player1, time, 0);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setworld(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/setworld [jugador] [mundo virtual]");
		new player1 = strval(tmp), time = strval(tmp2);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SETWORLD");
			format(string2, sizeof(string2), "Has puesto el mundo virtual de \"%s\" en '%d'", pName(player1), time); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto tu mundo virtual en '%d' ", pName(playerid), time); SendClientMessage(player1,red,string2); }
			PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return SetPlayerVirtualWorld(player1, time);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setinterior(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/setinterior [jugador] [interior]");
		new player1 = strval(tmp), time = strval(tmp2);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SETINTERIOR");
			format(string2, sizeof(string2), "Has puesto el interior de \"%s\" en '%d' ", pName(player1), time); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto tu interior en '%d' ", pName(playerid), time); SendClientMessage(player1,red,string2); }
			PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return SetPlayerInterior(player1, time);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_cambiarhora(playerid,params[]) {
	
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/cambiarhora [hora]");
		new time = strval(params);
		format(string2,sizeof(string2),"Has puesto tu hora en %d:00", time); SendClientMessage(playerid,red,string2);
		return SetPlayerTime(playerid, time, 0);
	
}
dcmd_cambiarclima(playerid,params[]) {
	
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/cambiarclima [idclima]");
		new time = strval(params);
		format(string2,sizeof(string2),"Has puesto tu clima en %d", time); SendClientMessage(playerid,red,string2);
		//return SetPlayerWeather(playerid, time, 0);
		return SetPlayerWeather(playerid, time);
	
}

dcmd_force(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/force [jugador]");
		new player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"FORCE");
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" te ha forzado a elegir otro skin", pName(playerid) ); SendClientMessage(player1,red,string2); }
			format(string2,sizeof(string2),"Has forzado a \"%s\" a elegir otro skin", pName(player1)); SendClientMessage(playerid,red,string2);
			ForceClassSelection(player1);
			return SetPlayerHealth(player1,0.0);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_eject(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/eject [jugador]");
		new player1 = strval(params), Float:x, Float:y, Float:z;
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToPac0(playerid,"EJECT");
				if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" te ha sacado de tu vehiculo", pName(playerid) ); SendClientMessage(player1,red,string2); }
				format(string2,sizeof(string2),"Has sacado a \"%s\" de su vehiculo", pName(player1)); SendClientMessage(playerid,red,string2);
    		   	GetPlayerPos(player1,x,y,z);
				return SetPlayerPos(player1,x,y,z+3);
			} else return SendClientMessage(playerid,red,"El jugador no esta en un vehiculo");
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_relogear(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/relogear [jugador]");
				new player1 = strval(params);
				if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
	        	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				new
	        	pIP[16],
	        	iStr[25];
		       	CMDMessageToPac0(playerid,"RELOGEAR");
				if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" te ha Relogeado", pName(playerid) ); SendClientMessage(player1,red,string2); }
				format(string2,sizeof(string2),"Has Relogeado a \"%s\"", pName(player1)); SendClientMessage(playerid,red,string2);
   				new
		        PID = strval(params);
		    	GetPlayerIp(PID, pIP, sizeof(pIP));
		    	SetPVarInt(PID, "Reconnecting", 1);
		    	SetPVarString(PID, "RecIP", pIP);
		    	format(iStr, sizeof(iStr), "banip %s", pIP);
				return SendRconCommand(iStr);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

/*dcmd_lockcar(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][Level] >= 2) {
	    if(IsPlayerInAnyVehicle(playerid)) {
		 	for(new i = 0; i < MAX_PLAYERS; i++) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i,false,true);
			CMDMessageToPac0(playerid,"LOCKCAR");
			PlayerInfo[playerid][DoorsLocked] = 1;
			new string[128]; format(string2,sizeof(string2),"STAFF \"%s\" ha bloqueado su vehiculo", pName(playerid));
			return SendClientMessageToAll(red,string2);
		} else return SendClientMessage(playerid,red,"Necesitas estar en un vehiculo para bloquear/desbloquear las puertas");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_unlockcar(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][Level] >= 2) {
	    if(IsPlayerInAnyVehicle(playerid)) {
		 	for(new i = 0; i < MAX_PLAYERS; i++) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i,false,false);
			CMDMessageToPac0(playerid,"UNLOCKCAR");
			PlayerInfo[playerid][DoorsLocked] = 0;
			new string[128]; format(string2,sizeof(string2),"STAFF \"%s\" ha desbloqueado su vehiculo", pName(playerid));
			return SendClientMessageToAll(red,string2);
		} else return SendClientMessage(playerid,red,"Necesitas estar en un vehiculo para bloquear/desbloquear las puertas");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}*/

dcmd_burn(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/burn [jugador]");
		new player1 = strval(params), Float:x, Float:y, Float:z;
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"BURN");
			format(string2, sizeof(string2), "Has quemado a \"%s\" ", pName(player1)); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" te ha quemado", pName(playerid)); SendClientMessage(player1,red,string2); }
			GetPlayerPos(player1, x, y, z);
			return CreateExplosion(x, y , z + 3, 1, 10);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_spawnplayer(playerid,params[])
{
	return dcmd_spawn(playerid,params);
}

dcmd_spawn(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 1) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/spawn [jugador]");
		new player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"SPAWN");
			format(string2, sizeof(string2), "Reiniciaste a \"%s\" ", pName(player1)); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"Administrador {FF0000}\"%s\" {FFFFFF}te ha reiniciado", pName(playerid)); SendClientMessage(player1,red,string2); }
			EstaEnEvento[player1] = false;
			EstaEnDesmadre[player1] = false;
            SetPlayerPos(player1, 0.0, 0.0, 0.0);
			SetPlayerVirtualWorld(player1,0);
			SetPlayerInterior(player1,0);
			return SpawnPlayer(player1);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_disarm(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/disarm [jugador]");
		new player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"DISARM");  PlayerPlaySound(player1,1057,0.0,0.0,0.0);
			format(string2, sizeof(string2), "Has desarmado a \"%s\" ", pName(player1)); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" te ha desarmado", pName(playerid)); SendClientMessage(player1,red,string2); }
			ELOY9N_ResetPlayerWeapons(player1);
			return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_crash(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 4) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/crash [jugador]");
		new player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
   			CMDMessageToPac0(playerid,"CRASH");
			crashear(player1);
			format(string2, sizeof(string2), "Has crasheado a \"%s\" ", pName(player1) );
			return SendClientMessage(playerid,red,string2);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_ip(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/ip [jugador]");
		new player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"IP");
			GetPlayerIp(player1,tmp3,50);
			format(string2,sizeof(string2),"La IP de \"%s\" es '%s'", pName(player1), tmp3);
			return SendClientMessage(playerid,red,string2);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_reseteardinero(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/reseteardinero [jugador]");
		new player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"reseteardinero");
			format(string2, sizeof(string2), "Has reseteado el dinero de \"%s\" ", pName(player1)); SendClientMessage(playerid,red,string2);
			if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha reseteado tu dinero'", pName(playerid)); SendClientMessage(player1,red,string2); }
   			return ELOY9N_ResetMoney(player1);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_sreseteardinero(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/sreseteardinero [jugador]");
		new player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"reseteardinero");
			format(string2, sizeof(string2), "Has reseteado el dinero de \"%s\" secretamente", pName(player1)); SendClientMessage(playerid,red,string2);
   			return ELOY9N_ResetMoney(player1);
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_kill(playerid,params[]) {
	#pragma unused params
    if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true) return  SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando dentro de un evento.");
	return SetPlayerHealth(playerid,0.0);
}

/*dcmd_subirrango(playerid,params[]) {
	#pragma unused params
 if(PlayerInfo[playerid][RANGO_PLAYER] == 0)
 {
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 50)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 1;
    format(string2, sizeof(string2), "Civil");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Civil");
    }
    else 
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        ////////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}50 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
 } 
    /////////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 1)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 110)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 2;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Superviviente");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Superviviente");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        ////////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}110 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}
    ///////////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 2)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 140)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 3;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Superviviente I");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Superviviente I");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        ////////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}140 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}
////////////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 3)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 250)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 4;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Superviviente II");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Superviviente II");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        ////////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}250 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
} 
/////////////////// 
if(PlayerInfo[playerid][RANGO_PLAYER] == 4)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 300)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 5;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Superviviente III");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Superviviente III");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        ////////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}300 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}  
//////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 5)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 400)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 6;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Superviviente IV");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Superviviente IV");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        ////////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}400 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}  
////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 6)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 600)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 7;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Superviviente Avanzado");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Superviviente Avanzado");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        //////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}600 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}
////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 7)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 1000)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 8;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Superviviente Experto");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Superviviente Experto");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        //////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}1000 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}
////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 8)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 1600)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 9;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Sub-Oficial");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Sub Oficial");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        //////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}1600 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}
////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 9)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 2500)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 10;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Oficial");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Oficial");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        //////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}2500 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}
////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 10)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 4000)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 11;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Comisario");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Comisario");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        //////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}4000 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}
////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 11)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 7000)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 12;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Soldado");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Soldado");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        //////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}7000 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}     
////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 12)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 10000)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 13;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Cabo");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Cabo");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        //////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}10000 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}
////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 13)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 15000)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 14;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Navy");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Navy");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        //////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}15000 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
} 
////////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 14)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 21000)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 15;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Elite");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Elite");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        //////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}21000 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}   
////////////
if(PlayerInfo[playerid][RANGO_PLAYER] == 15)
{   
    if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= 34000)
    {
        PlayerInfo[playerid][RANGO_PLAYER] = 16;
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    format(string2, sizeof(string2), "Warframe");
    TextDrawSetString(TextdrawRangoTotal[playerid], string2);
    TextDrawShowForPlayer(playerid, TextdrawRangoTotal[playerid]);
        SendClientMessage(playerid,COLOR_RED,"Subiste de rango/nivel a {FFFFFF}Warframe");
    }
    else
    {
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        //////////////SendClientMessage(playerid,COLOR_RED,"No tienes los suficientes puntos para subir de nivel.");
        SendClientMessage(playerid,COLOR_RED,"El siguiente nivel requiere {FFFFFF}34000 {FF0000}puntos.");
        SendClientMessage(playerid,COLOR_RED,"Estos se consiguen capturando zonas.");
    }
}
if(PlayerInfo[playerid][RANGO_PLAYER] == 16)
{   
SendClientMessage(playerid,COLOR_RED,"Llegaste al rango maxímo.");
}    
 return 1;
}*/

dcmd_ubound(playerid,params[]) {
 	if(PlayerInfo[playerid][Level] >= 8) {
		if(!strlen(params)) return SendClientMessage(playerid, red, "/ubound [jugador]");
	    new player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToPac0(playerid,"UBOUND");
			SetPlayerWorldBounds(player1, 9999.9, -9999.9, 9999.9, -9999.9 );
			format(string2, sizeof(string2), "STAFF %s has removed your world boundaries", PlayerName2(playerid)); if(player1 != playerid) SendClientMessage(player1,red,string2);
			format(string2,sizeof(string2),"You have removed %s's world boundaries", PlayerName2(player1));
			return SendClientMessage(playerid,red,string2);
		} else return SendClientMessage(playerid, red, "El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

/*dcmd_lhelp(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] && PlayerInfo[playerid][Level] >= 1) {
		SendClientMessage(playerid,blue,"--== [ LAdmin Help ] ==--");
		SendClientMessage(playerid,blue, "For admin commands type:  /lcommands   |   Credits: /lcredits");
		SendClientMessage(playerid,blue, "Account commands are: /register, /login, /changepass, /stats, /resetstats.  Also  /time, /reportar");
		SendClientMessage(playerid,blue, "There are 5 levels. Level 5 admins are immune from commands");
		SendClientMessage(playerid,blue, "IMPORTANT: The filterscript must be reloaded if you change gamemodes");
		}
	else if(PlayerInfo[playerid][LoggedIn] && PlayerInfo[playerid][Level] < 1) {
	 	SendClientMessage(playerid,green, "Your commands are: /register, /login, /reportar, /stats, /time, /changepass, /resetstats, /getid");
 	}
	else if(PlayerInfo[playerid][LoggedIn] == 0) {
 	SendClientMessage(playerid,green, "Your commands are: /time, /getid     (You are not logged in, log in for more commands)");
	} return 1;
}*/


/*dcmd_lcommands(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] > 0)
	{
		SendClientMessage(playerid,blue,"    ---= All Admin Commands =---");
		SendClientMessage(playerid,lightblue," /level1, /level2, /level3, /level4, /level5, /rcon ladmin");
		SendClientMessage(playerid,lightblue,"Player Commands: /register, /login, /reportar, /stats, /time, /changepass, /resetstats, /getid");
	}
	return 1;
}*/



/*dcmd_adminreglas(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] > 1)
	{
		SendClientMessage(playerid,blue,"    ---=Reglas De Administradores =---");
		SendClientMessage(playerid,lightblue,"1- No daras warn o kick entre admins, solo un level alto puede hacerlo.");
		SendClientMessage(playerid,lightblue,"2- Si un admin abusa debes tomar foto para tener pruebas y reportarlo");
		SendClientMessage(playerid,lightblue,"3- Si abusas de tu poder, te bajaremos el lvl y si te enojas te lo quitaran");
		SendClientMessage(playerid,lightblue,"4- Si me piedes level te lo bajare en vez de subirtelo ;D.");
		SendClientMessage(playerid,lightblue,"5- Si vas a dar Rban, tomar foto primero a la ip y ver cuantos salieron por timeout.");
		SendClientMessage(playerid,lightblue,"6- Si usas announce a lo pendejo, olvidate de tu level y de que te lo regrese.");
	}
	return 1;
}*/



dcmd_getinfo(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"/getinfo [jugador]");
	    new player1;
	    player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		    new Float:player1health, Float:player1armour, playerip[128], Float:x, Float:y, Float:z,
				year, month, day, P1Jailed[4], P1Frozen[4], P1Logged[4], P1Register[4], RegDate[256], TimesOn;

			GetPlayerHealth(player1,player1health);
			GetPlayerArmour(player1,player1armour);
	    	GetPlayerIp(player1, playerip, sizeof(playerip));
	    	GetPlayerPos(player1,x,y,z);
			getdate(year, month, day);
			format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(player1)));

			if(PlayerInfo[player1][Jailed] == 1) P1Jailed = "Yes"; else P1Jailed = "No";
			if(PlayerInfo[player1][Frozen] == 1) P1Frozen = "Yes"; else P1Frozen = "No";
			if(PlayerInfo[player1][LoggedIn] == 1) P1Logged = "Yes"; else P1Logged = "No";
			if(fexist(file)) P1Register = "Yes"; else P1Register = "No";
			if(dUserINT(PlayerName2(player1)).("LastOn")==0) tmp2 = "Never"; else tmp2 = dini_Get(file,"LastOn");
			if(strlen(dini_Get(file,"RegisteredDate")) < 3) RegDate = "n/a"; else RegDate = dini_Get(file,"RegisteredDate");
			TimesOn = dUserINT(PlayerName2(player1)).("TimesOnServer");

	  		format(string2, sizeof(string2),"(Player Info)  ---====> Name: %s  ID: %d <====---", PlayerName2(player1), player1);
			SendClientMessage(playerid,lightblue,string2);
		  	format(string2, sizeof(string2),"Health: %d  Armour: %d  Score: %d  Cash: %d  Skin: %d  IP: %s  Ping: %d ",floatround(player1health),floatround(player1armour),
			GetPlayerScore(player1),GetPlayerMoney(player1),GetPlayerSkin(player1),playerip,GetPlayerPing(player1) );
			SendClientMessage(playerid,red,string2);
			format(string2, sizeof(string2),"Interior: %d  Virtual World: %d  Wanted Level: %d  X %0.1f  Y %0.1f  Z %0.1f", GetPlayerInterior(player1), GetPlayerVirtualWorld(player1), GetPlayerWantedLevel(player1), Float:x,Float:y,Float:z);
			SendClientMessage(playerid,marron,string2);
			format(string2, sizeof(string2),"Times On Server: %d  Kills: %d  Deaths: %d  Ratio: %0.2f  AdminLevel: %d", TimesOn, PlayerInfo[player1][Kills], PlayerInfo[player1][Deaths], Float:PlayerInfo[player1][Kills]/Float:PlayerInfo[player1][Deaths], PlayerInfo[player1][Level] );
			SendClientMessage(playerid,red,string2);
			format(string2, sizeof(string2),"Registered: %s  Logged In: %s  In Jail: %s  Frozen: %s", P1Register, P1Logged, P1Jailed, P1Frozen );
			SendClientMessage(playerid,green,string2);
			format(string2, sizeof(string2),"Last On Server: %s  Register Date: %s  Todays Date: %d/%d/%d", tmp2, RegDate, day,month,year );
			SendClientMessage(playerid,COLOR_GREEN,string2);

			if(IsPlayerInAnyVehicle(player1)) {
				new Float:VHealth, carid = GetPlayerVehicleID(playerid); GetVehicleHealth(carid,VHealth);
				format(string2, sizeof(string2),"VehicleID: %d  Model: %d  Vehicle Name: %s  Vehicle Health: %d",carid, GetVehicleModel(carid), VehicleNames[GetVehicleModel(carid)-400], floatround(VHealth) );
				SendClientMessage(playerid,COLOR_RED,string2);
			}

			new slot, ammo, weap, Count, WeapName[24], WeapSTR[128], p; WeapSTR = "Weaps: ";
			for (slot = 0; slot < 14; slot++) {	GetPlayerWeaponData(player1, slot, weap, ammo); if( ammo != 0 && weap != 0) Count++; }
			if(Count < 1) return SendClientMessage(playerid,lightblue,"Player has no weapons");
			else {
				for (slot = 0; slot < 14; slot++)
				{
					GetPlayerWeaponData(player1, slot, weap, ammo);
					if (ammo > 0 && weap > 0)
					{
						GetWeaponName(weap, WeapName, sizeof(WeapName) );
						if (ammo == 65535 || ammo == 1) format(WeapSTR,sizeof(WeapSTR),"%s%s (1)",WeapSTR, WeapName);
						else format(WeapSTR,sizeof(WeapSTR),"%s%s (%d)",WeapSTR, WeapName, ammo);
						p++;
						if(p >= 5) { SendClientMessage(playerid, lightblue, WeapSTR); format(WeapSTR, sizeof(WeapSTR), "Weaps: "); p = 0;
						} else format(WeapSTR, sizeof(WeapSTR), "%s,  ", WeapSTR);
					}
				}
				if(p <= 4 && p > 0) {
					string2[strlen(string2)-3] = '.';
				    SendClientMessage(playerid, lightblue, WeapSTR);
				}
			}
			return 1;
		} else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_disable(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8 && IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) {
			SendClientMessage(playerid,red,"/disable [antiswear / namekick / antispam / ping / readcmds / readpms /caps / admincmdmsgs");
			return SendClientMessage(playerid,red,"       /connectmsgs / autologin ]");
		}
	    format(file,sizeof(file),"ladmin/config/Config.ini");
		if(strcmp(params,"antiswear",true) == 0) {
			ServerInfo[AntiSwear] = 0;
			dini_IntSet(file,"AntiSwear",0);
			format(string2,sizeof(string2),"STAFF %s ha deshabilitado el antiswear", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"namekick",true) == 0) {
			ServerInfo[NameKick] = 0;
			dini_IntSet(file,"NameKick",0);
			format(string2,sizeof(string2),"STAFF %s ha deshabilitado el namekick", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
	 	} else if(strcmp(params,"antispam",true) == 0)	{
			ServerInfo[AntiSpam] = 0;
			dini_IntSet(file,"AntiSpam",0);
			format(string2,sizeof(string2),"STAFF %s ha deshabilitado el antispam", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"ping",true) == 0)	{
			ServerInfo[MaxPing] = 0;
			dini_IntSet(file,"MaxPing",0);
			format(string2,sizeof(string2),"STAFF %s ha deshabilitado el ping kick", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"readcmds",true) == 0) {
			ServerInfo[ReadCmds] = 0;
			dini_IntSet(file,"ReadCMDs",0);
			format(string2,sizeof(string2),"STAFF %s ha deshabilitado el reading commands", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else if(strcmp(params,"readpms",true) == 0) {
			ServerInfo[ReadPMs] = 0;
			dini_IntSet(file,"ReadPMs",0);
			format(string2,sizeof(string2),"STAFF %s ha deshabilitado el reading pms", PlayerName2(playerid));
			MessageToAdmins(green,string2);
  		} else if(strcmp(params,"caps",true) == 0)	{
			ServerInfo[NoCaps] = 1;
			dini_IntSet(file,"NoCaps",1);
			format(string2,sizeof(string2),"STAFF %s ha deshabilitado el captial letters in chat", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"admincmdmsgs",true) == 0) {
			ServerInfo[AdminCmdMsg] = 0;
			dini_IntSet(file,"AdminCMDMessages",0);
			format(string2,sizeof(string2),"STAFF %s ha deshabilitado el admin command messages", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else if(strcmp(params,"connectmsgs",true) == 0)	{
			ServerInfo[ConnectMessages] = 0;
			dini_IntSet(file,"ConnectMessages",0);
			format(string2,sizeof(string2),"STAFF %s ha deshabilitado el connect & disconnect messages", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else if(strcmp(params,"autologin",true) == 0)	{
			ServerInfo[AutoLogin] = 0;
			dini_IntSet(file,"AutoLogin",0);
			format(string2,sizeof(string2),"STAFF %s ha deshabilitado el auto login", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else {
			SendClientMessage(playerid,red,"/disable [antiswear / namekick / antispam / ping / readcmds / readpms /caps /cmdmsg ]");
		} return 1;
	} else return SendClientMessage(playerid,red,"Necesitas ser Administrador nivel 7 y RCON para usar este comando");
}

dcmd_enable(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8 && IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) {
			SendClientMessage(playerid,red,"USAGE: /enable [antiswear / namekick / antispam / ping / readcmds / readpms /caps / admincmdmsgs");
			return SendClientMessage(playerid,red,"       /connectmsgs / autologin ]");
		}
	    format(file,sizeof(file),"ladmin/config/Config.ini");
		if(strcmp(params,"antiswear",true) == 0) {
			ServerInfo[AntiSwear] = 1;
			dini_IntSet(file,"AntiSwear",1);
			format(string2,sizeof(string2),"STAFF %s ha habilitado el antiswear", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"namekick",true) == 0)	{
			ServerInfo[NameKick] = 1;
			format(string2,sizeof(string2),"STAFF %s ha habilitado el namekick", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
 		} else if(strcmp(params,"antispam",true) == 0)	{
			ServerInfo[AntiSpam] = 1;
			dini_IntSet(file,"AntiSpam",1);
			format(string2,sizeof(string2),"STAFF %s ha habilitado el antispam", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"ping",true) == 0)	{
			ServerInfo[MaxPing] = 800;
			dini_IntSet(file,"MaxPing",800);
			format(string2,sizeof(string2),"STAFF %s ha habilitado el ping kick", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"readcmds",true) == 0)	{
			ServerInfo[ReadCmds] = 1;
			dini_IntSet(file,"ReadCMDs",1);
			format(string2,sizeof(string2),"STAFF %s ha habilitado el reading commands", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else if(strcmp(params,"readpms",true) == 0) {
			ServerInfo[ReadPMs] = 1;
			dini_IntSet(file,"ReadPMs",1);
			format(string2,sizeof(string2),"STAFF %s ha habilitado el reading pms", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else if(strcmp(params,"caps",true) == 0)	{
			ServerInfo[NoCaps] = 0;
			dini_IntSet(file,"NoCaps",0);
			format(string2,sizeof(string2),"STAFF %s ha habilitado el captial letters in chat", PlayerName2(playerid));
			SendClientMessageToAll(red,string2);
		} else if(strcmp(params,"admincmdmsgs",true) == 0)	{
			ServerInfo[AdminCmdMsg] = 1;
			dini_IntSet(file,"AdminCmdMessages",1);
			format(string2,sizeof(string2),"STAFF %s ha habilitado el admin command messages", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else if(strcmp(params,"connectmsgs",true) == 0) {
			ServerInfo[ConnectMessages] = 1;
			dini_IntSet(file,"ConnectMessages",1);
			format(string2,sizeof(string2),"STAFF %s ha habilitado el connect & disconnect messages", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else if(strcmp(params,"autologin",true) == 0) {
			ServerInfo[AutoLogin] = 1;
			dini_IntSet(file,"AutoLogin",1);
			format(string2,sizeof(string2),"STAFF %s ha habilitado el auto login", PlayerName2(playerid));
			MessageToAdmins(green,string2);
		} else {
			SendClientMessage(playerid,red,"/enable [antiswear / namekick / antispam / ping / readcmds / readpms /caps /cmdmsg ]");
		} return 1;
	} else return SendClientMessage(playerid,red,"Necesitas ser Administrador nivel 7 y RCON para usar este comando");
}


//---------conteos
dcmd_conteo2(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][Level] >= 8) {
        if(CountDown == -1) {
			CountDown = 6;
			SetTimer("countdown",1000,0);
			return CMDMessageToPac0(playerid,"CONTEO2");
		} else return SendClientMessage(playerid,red,"Countdown en progreso");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando. ");
}
dcmd_conteo(playerid,params[]) {
	#pragma unused params
	if(conteoI == 0){
	if(Count2 >= 5)
	{
	Count2 = 5;
	SetTimer("CountDown2", 1000, 0);
 //	format(string2,sizeof(string2),"{FF0000}{FFFFFF}%s [id: %i] Ha Iniciado Un /Conteo",PlayerName2(playerid),playerid);
 	//SendClientMessageToAll(red , string2);
	return 1;
	}
	else
	{
	SendClientMessage(playerid, COLOR_RED, "{FFFFFF}Ya Hay un conteo en progreso.");
			return 1;
}
	} else return SendClientMessage(playerid,red,"{FF0000}El comando fue desactivado por un STAFF");
}
	dcmd_sconteo(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
		CMDMessageToPac0(playerid,"SCONTEO");
		if(conteoI == 0) {
			conteoI = 1;
			format(string2,sizeof(string2),"{FFFFFF}El Administrador {FFFFFF}\"%s\" Ha Desactivado el {FFFFFF}CONTEO", pName(playerid) );
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		} else {
			conteoI = 0;
			format(string2,sizeof(string2),"{FFFFFF}El Administrador {FFFFFF}\"%s\" Ha Activado el {FFFFFF}CONTEO", pName(playerid) );
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		} return SendClientMessageToAll(green,string2);
 	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando..");
}
//-----------------------

dcmd_vr(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 1) {
		if (IsPlayerInAnyVehicle(playerid)) {
			SetVehicleHealth(GetPlayerVehicleID(playerid),1250.0);
			RepairVehicle(GetPlayerVehicleID(playerid));
			return SendClientMessage(playerid,blue,"Vehiculo Reparado");
		} else return SendClientMessage(playerid,red,"No estas en un vehiculo");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_fix(playerid,params[])
{
	return dcmd_vr(playerid, params);
}





dcmd_car(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    new tmp[256],   Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(!strlen(tmp)) return SendClientMessage(playerid, red, "/car [modelo/nombre] [color1] [color2]");
		new car, colour1, colour2;
   		if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
		if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "Modelo de vehiculo invalido");
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		new world;
		world = GetPlayerVirtualWorld(playerid);
		if(PlayerInfo[playerid][pCar] != -1 && !IsPlayerAdmin(playerid) ) CarDeleter(PlayerInfo[playerid][pCar]);
		new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
		LVehicleID = CreateVehicle(car, X+3,Y,Z, Angle, colour1, colour2, -1); 
	//	LinkVehicleToInterior(car,int1); SetVehicleVirtualWorld(car,world);
		LinkVehicleToInterior(LVehicleID,int1); SetVehicleVirtualWorld(LVehicleID,world);
		PlayerInfo[playerid][pCar] = LVehicleID;
		CMDMessageToPac0(playerid,"CAR");
		format(string2, sizeof(string2), "%s ha aparecido un \"%s\" [Modelo:%d] - color [%d, %d], el %0.2f, %0.2f, %0.2f", pName(playerid), VehicleNames[car-400], car, colour1, colour2, X, Y, Z);
        SaveToFile("CarSpawns",string2);
		format(string2, sizeof(string2), "Has aparecido un \"%s\" [Modelo:%d] - color [%d, %d]", VehicleNames[car-400], car, colour1, colour2);
		return SendClientMessage(playerid,lightblue, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_carhealth(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/carhealth [jugador] [cantidad]");
		new player1 = strval(tmp), health = strval(tmp2);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
            if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToPac0(playerid,"CARHEALTH");
				format(string2, sizeof(string2), "Has puesto la vida del vehiculo de \"%s\" en '%d", pName(player1), health); SendClientMessage(playerid,red,string2);
				if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha puesto la vida de tu vehiculo en '%d'", pName(playerid), health); SendClientMessage(player1,red,string2); }
   				return SetVehicleHealth(GetPlayerVehicleID(player1), health);
			} else return SendClientMessage(playerid,red,"El jugador no esta en un vehiculo");
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_carcolour(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256],   Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !strlen(tmp3) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/carcolour [jugador] [color1] [color2]");
		new player1 = strval(tmp), colour1, colour2;
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
            if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToPac0(playerid,"CARCOLOUR");
				format(string2, sizeof(string2), "Has cambiado el color del %s de \"%s's\" a '%d,%d'", pName(player1), VehicleNames[GetVehicleModel(GetPlayerVehicleID(player1))-400], colour1, colour2 ); SendClientMessage(playerid,red,string2);
				if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" ha cambiado el color de tu %s a '%d,%d''", pName(playerid), VehicleNames[GetVehicleModel(GetPlayerVehicleID(player1))-400], colour1, colour2 ); SendClientMessage(player1,red,string2); }
   				return ChangeVehicleColor(GetPlayerVehicleID(player1), colour1, colour2);
			} else return SendClientMessage(playerid,red,"El jugador no esta en un vehiculo");
	    } else return SendClientMessage(playerid,red,"El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}



dcmd_sgod(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
   		if(PlayerInfo[playerid][God] == 0)	{
        	PlayerInfo[playerid][God] = 1;
	        SetPlayerHealth(playerid,100000);
			ELOY9N_GivePlayerWeapon(playerid,16,50000); ELOY9N_GivePlayerWeapon(playerid,26,50000);
            return SendClientMessage(playerid,green,"godmode ACTIVADO");
		} else	{
   	        PlayerInfo[playerid][God] = 0;
            SendClientMessage(playerid,red,"godmode DESACTIVADO");
	        SetPlayerHealth(playerid, 100); return ELOY9N_GivePlayerWeapon(playerid,35,0);	}
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_godcar(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
		if(IsPlayerInAnyVehicle(playerid)) {
	    	if(PlayerInfo[playerid][GodCar] == 0) {
        		PlayerInfo[playerid][GodCar] = 1;
   				CMDMessageToPac0(playerid,"GODCAR");
            	return SendClientMessage(playerid,green,"godcarmode ACTIVADO");
			} else {
	            PlayerInfo[playerid][GodCar] = 0;
    	        return SendClientMessage(playerid,red,"godcarmode DESACTIVADO"); }
		} else return SendClientMessage(playerid,red,"Necesitas estar en un vehiculo para usar este comando");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_die(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
		new Float:x, Float:y, Float:z ;
		GetPlayerPos( playerid, Float:x, Float:y, Float:z );
		CreateExplosion(Float:x+10, Float:y, Float:z, 8,10.0);
		CreateExplosion(Float:x-10, Float:y, Float:z, 8,10.0);
		CreateExplosion(Float:x, Float:y+10, Float:z, 8,10.0);
		CreateExplosion(Float:x, Float:y-10, Float:z, 8,10.0);
		CreateExplosion(Float:x+10, Float:y+10, Float:z, 8,10.0);
		CMDMessageToPac0(playerid,"DIE");
		CreateExplosion(Float:x-10, Float:y+10, Float:z, 8,10.0);
		return CreateExplosion(Float:x-10, Float:y-10, Float:z, 8,10.0);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

/*dcmd_get44id(playerid,params[]) {
	if(!strlen(params)) return SendClientMessage(playerid,blue,"Uso Correcto: /getid [parte del nick]");
	new found, playername[MAX_PLAYER_NAME];
	format(string2,sizeof(string2),"Buscado por: \"%s\" ",params);
	SendClientMessage(playerid,red,string2);
	for(new i=0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
	  		GetPlayerName(i, playername, MAX_PLAYER_NAME);
			new namelen = strlen(playername);
			new bool:searched=false;
	    	for(new pos=0; pos <= namelen; pos++)
			{
				if(searched != true)
				{
					if(strfind(playername,params,true) == pos)
					{
		                found++;
						format(string2,sizeof(string2),"%d. %s (ID %d)",found,playername,i);
						SendClientMessage(playerid, green ,string2);
						searched = true;
					}
				}
			}
		}
	}
	if(found == 0) SendClientMessage(playerid, lightblue, "Ningun jugador contiene esa parte en su nick");
	return 1;
}*/

dcmd_asay(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 1) {
	if(!strlen(params)) return SendClientMessage(playerid, red, "/asay [texto]");
    {
	if(PlayerInfo[playerid][Level] == 1)
	{
	format(string2, sizeof(string2), "{00FF00}| Ayudante | : {800080}%s: {FFFFFF}%s", PlayerName2(playerid), params[0] );
	return SendClientMessageToAll(COLOR_WHITE,string2);
 	}
   	if(PlayerInfo[playerid][Level] == 2)
   	{
	format(string2, sizeof(string2), "{FF9900}| Moderador | : {800080}%s: {FFFFFF}%s", PlayerName2(playerid), params[0] );
	return SendClientMessageToAll(COLOR_WHITE,string2);
	}
   	if(PlayerInfo[playerid][Level] == 3)
   	{
	format(string2, sizeof(string2), "{33CCFF}| Administrador | : {800080}%s: {FFFFFF}%s", PlayerName2(playerid), params[0] );
	return SendClientMessageToAll(COLOR_WHITE,string2);
	}
   	if(PlayerInfo[playerid][Level] == 4)
   	{
	format(string2, sizeof(string2), "{FFFF00}| Organizador | : {800080}%s: {FFFFFF}%s", PlayerName2(playerid), params[0] );
	return SendClientMessageToAll(COLOR_WHITE,string2);
	}
   	if(PlayerInfo[playerid][Level] == 5)
   	{
	format(string2, sizeof(string2), "{2C2727}| Director | : {800080}%s: {FFFFFF}%s", PlayerName2(playerid), params[0] );
	return SendClientMessageToAll(COLOR_WHITE,string2);
	}
   	if(PlayerInfo[playerid][Level] == 6)
   	{
	format(string2, sizeof(string2), "{A52A2A}| Supervisor | : {800080}%s: {FFFFFF}%s", PlayerName2(playerid), params[0] );
	return SendClientMessageToAll(COLOR_WHITE,string2);
	}
   	if(PlayerInfo[playerid][Level] == 7)
   	{
	format(string2, sizeof(string2), "{FF9900}| Director | : {800080}%s: {FFFFFF}%s", PlayerName2(playerid), params[0] );
	return SendClientMessageToAll(COLOR_WHITE,string2);
	}
   	if(PlayerInfo[playerid][Level] == 8)
   	{
	format(string2, sizeof(string2), "{FF9900}| Director | : {800080}%s: {FFFFFF}%s", PlayerName2(playerid), params[0] );
	return SendClientMessageToAll(COLOR_WHITE,string2);
	}
	}
	
//	return SendClientMessageToAll(red,string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser Administrador para usar este comando");
	return 1;
}

/*dcmd_decir(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 4) {
 	if (UsarCMD[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
		 	if(DetectarSpam(params))
    {
    if(PlayerInfo[playerid][Level] == 0 && !IsPlayerAdmin(playerid))
	{
		GetPlayerName(playerid,string2,sizeof(string2));
        ShowPlayerDialog(playerid, 12, DIALOG_STYLE_MSGBOX, "{00FFFF}Anti Spam", "{FFFFFF}No Puedes Hacer Spam o Seras {FF0000}Baneado", "Aceptar", "");
		format(string2,sizeof(string2),"[Servidor]: {FFFFFF}%s {FF0000}Id: {FFFFFF}[%i] {FF0000}Posible Spam Dijo: %s",string2,playerid,params);
		MessageToAdmins(COLOR_WHITE,string2);
        return 0;
    }
    }
 		if(!strlen(params)) return SendClientMessage(playerid, red, "/decir [texto]");
		format(string2, sizeof(string2), "~y~%s", params[0] );
		GameTextForAll( string2, 3000, 3 );
     	SendClientMessage(playerid,COLOR_RED,"Ahora debes esperar 5 minutos para usar otro comando Premium.");
        UsarCMD[playerid] = 1;
        return SetTimerEx("Listo", 300000, false, "i", playerid);
	} else return SendClientMessage(playerid,red,"Necesitas ser Usuario Vip Nivel 4 (Diamante)");

}*/



dcmd_setping(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8 && IsPlayerAdmin(playerid)) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "/setping [ping]   0=Desactivado");
	    new ping = strval(params);
		ServerInfo[MaxPing] = ping;
		CMDMessageToPac0(playerid,"SETPING");
		format(file,sizeof(file),"ladmin/config/Config.ini");
		dini_IntSet(file,"MaxPing",ping);
		for(new i = 0; i <= MAX_PLAYERS; i++) if(IsPlayerConnected(i)) PlayerPlaySound(i,1057,0.0,0.0,0.0);
		if(ping == 0) format(string2,sizeof(string2),"STAFF %s ha desactivado el ping maximo", PlayerName2(playerid), ping);
		else format(string2,sizeof(string2),"STAFF %s ha puesto el maximo ping en %d", PlayerName2(playerid), ping);
		return SendClientMessageToAll(red,string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_highlight(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"/highlight [jugador]");
	    new player1, playername[MAX_PLAYER_NAME];
	    player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		 	GetPlayerName(player1, playername, sizeof(playername));
	 	    if(PlayerInfo[player1][blip] == 0) {
				CMDMessageToPac0(playerid,"HIGHLIGHT");
				PlayerInfo[player1][pColour] = GetPlayerColor(player1);
				PlayerInfo[player1][blip] = 1;
				BlipTimer[player1] = SetTimerEx("HighLight", 1000, 1, "i", player1);
				format(string2,sizeof(string2),"Has resaltado el marcador de %s", playername);
			} else {
				KillTimer( BlipTimer[player1] );
				PlayerInfo[player1][blip] = 0;
				SetPlayerColor(player1, PlayerInfo[player1][pColour] );
				format(string2,sizeof(string2),"Has parado de resaltar el marcador de %s", playername);
			}
			return SendClientMessage(playerid,red,string2);
		} else return SendClientMessage(playerid, red, "El jugador no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setgravity(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	new pame[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, pame, sizeof(pame));
		if(!strcmp(NickDePac0,pame,true) || !strcmp(NickAutorizado,pame,true))
		{
	    if(!strlen(params)||!(strval(params)<=50&&strval(params)>=-50)) return SendClientMessage(playerid,red,"/setgravity <-50.0 - 50.0>");
        CMDMessageToPac0(playerid,"SETGRAVITY");
		new adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname)); new Float:Gravity = floatstr(params);format(string2,sizeof(string2),"El Admnistrador %s ha cambiado la gravedad a %f",adminname,Gravity);
		SetGravity(Gravity); return SendClientMessageToAll(red,string2);
		} else return SendClientMessage(playerid,red,"Solo alguien autorizado utiliza este CMD!");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}
/*dcmd_serveriernfo(playerid,params[]) {
	#pragma unused params
    new TotalVehicles = CreateVehicle(411, 0, 0, 0, 0, 0, 0, 1000);    DestroyVehicle(TotalVehicles);
	new numo = CreateDynamicObject(1245,0,0,1000,0,0,0);	DestroyObject(numo);
	new nump = CreatePickup(371,2,0,0,1000);	DestroyPickup(nump);
	new gz = GangZoneCreate(3,3,5,5);	GangZoneDestroy(gz);

	new model[250], nummodel;
	for(new i=1;i<TotalVehicles;i++) model[GetVehicleModel(i)-400]++;
	for(new i=0;i<250;i++)	if(model[i]!=0)	nummodel++;

	format(string2,sizeof(string2),"Server Info: [ Players Connected: %d || Maximum Players: %d ] [Ratio %0.2f ]",ConnectedPlayers(),GetMaxPlayers(),Float:ConnectedPlayers() / Float:GetMaxPlayers() );
	SendClientMessage(playerid,green,string2);
	format(string2,sizeof(string2),"Server Info: [ Vehicles: %d || Models %d || Players In Vehicle: %d || InCar %d / OnBike %d ]",TotalVehicles-1,nummodel, InVehCount(),InCarCount(),OnBikeCount() );
	SendClientMessage(playerid,green,string2);
	format(string2,sizeof(string2),"Server Info: [ Objects: %d || Pickups %d || Gangzones %d ]",numo-1, nump, gz);
	SendClientMessage(playerid,green,string2);
	format(string2,sizeof(string2),"Server Info: [ Players In Jail %d || Players Frozen %d || Muted %d ]",JailedPlayers(),FrozenPlayers(), MutedPlayers() );
	return SendClientMessage(playerid,green,string2);
}*/



dcmd_anuncio(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
        new tmp[256],   Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index) ,tmp3 = strtok(params,Index);
	    if(!strlen(tmp)||!strlen(tmp2)||!strlen(tmp3)) return SendClientMessage(playerid,red,"/announce [estilo] [tiempo] [texto]");
		if(!(strval(tmp) >= 0 && strval(tmp) <= 6) || strval(tmp) == 2)	return SendClientMessage(playerid,red,"Estilo de texto invalido. Range: 0 - 6");
		CMDMessageToPac0(playerid,"ANUNCIO");
		return GameTextAll(params[(strlen(tmp)+strlen(tmp2)+2)], strval(tmp2), strval(tmp));
    } else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

/*dcmd_lslowmo(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 1) {
		new Float:x, Float:y, Float:z; GetPlayerPos(playerid, x, y, z); CreatePickup(1241, 4, x, y, z);
		return CMDMessageToPac0(playerid,"LSLOWMO");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}*/

dcmd_jetpack(playerid,params[]) {
    if(!strlen(params))	{
    	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
			SendClientMessage(playerid,blue,"Jetpack Aparecido.");
			CMDMessageToPac0(playerid,"JETPACK");
			return DarJetpackOficial(playerid);
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else {
	    new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
    	player1 = strval(params);
		if(PlayerInfo[playerid][Level] >= 2)	{
		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid)	{
				CMDMessageToPac0(playerid,"JETPACK");
				DarJetpackOficial(playerid);
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string2,sizeof(string2),"STAFF \"%s\" te ha dado un jetpack",adminname); SendClientMessage(player1,red,string2);
				format(string2,sizeof(string2),"Le has dado a %s un jetpack", playername);
				return SendClientMessage(playerid,red,string2);
			} else return SendClientMessage(playerid, red, "El jugador no esta conectado o eres tu mismo!");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	}
}

dcmd_flip(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) {
		    if(IsPlayerInAnyVehicle(playerid)) {
			new VehicleID, Float:X, Float:Y, Float:Z, Float:Angle; GetPlayerPos(playerid, X, Y, Z); VehicleID = GetPlayerVehicleID(playerid);
			GetVehicleZAngle(VehicleID, Angle);	SetVehiclePos(VehicleID, X, Y, Z); SetVehicleZAngle(VehicleID, Angle); SetVehicleHealth(VehicleID,1000.0);
			CMDMessageToPac0(playerid,"FLIP"); return SendClientMessage(playerid, blue,"Vehiculo dado vuelta , puedes usarlo con alguno jugador /flip [jugador]");
			} else return SendClientMessage(playerid,red,"No estas en un vehiculo. Tambien puedes usarlo con un jugador /flip [jugador]");
		}
	    new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
	    player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToPac0(playerid,"FLIP");
			if (IsPlayerInAnyVehicle(player1)) {
				new VehicleID, Float:X, Float:Y, Float:Z, Float:Angle; GetPlayerPos(player1, X, Y, Z); VehicleID = GetPlayerVehicleID(player1);
				GetVehicleZAngle(VehicleID, Angle);	SetVehiclePos(VehicleID, X, Y, Z); SetVehicleZAngle(VehicleID, Angle); SetVehicleHealth(VehicleID,1000.0);
				CMDMessageToPac0(playerid,"FLIP");
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string2,sizeof(string2),"STAFF %s ha enderezado tu vehiculo",adminname); SendClientMessage(player1,red,string2);
				format(string2,sizeof(string2),"Has enderezado el vehiculo de %s", playername);
				return SendClientMessage(playerid, blue,string2);
			} else return SendClientMessage(playerid,red,"El jugador no esta en un vehiculo!");
		} else return SendClientMessage(playerid, red, "El jugador no esta conectado o eres tu mismo!");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_destroycar(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) return EraseVehicle(GetPlayerVehicleID(playerid));
	else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}


dcmd_warp(playerid,params[])
{
	return dcmd_teleplayer(playerid,params);
}

dcmd_teleplayer(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !IsNumeric(tmp) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/teleplayer [jugador1] hacia [jugador2]");
		new player1 = strval(tmp), player2 = strval(tmp2), Float:plocx,Float:plocy,Float:plocz;
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
 		 	if(IsPlayerConnected(player2) && player2 != INVALID_PLAYER_ID) {
	 		 	CMDMessageToPac0(playerid,"TELEPLAYER");
				GetPlayerPos(player2, plocx, plocy, plocz);
				new intid = GetPlayerInterior(player2);	SetPlayerInterior(player1,intid);
				SetPlayerVirtualWorld(player1,GetPlayerVirtualWorld(player2));
				if (GetPlayerState(player1) == PLAYER_STATE_DRIVER)
				{
					new VehicleID = GetPlayerVehicleID(player1);
					SetVehiclePos(VehicleID, plocx, plocy+4, plocz); LinkVehicleToInterior(VehicleID,intid);
					SetVehicleVirtualWorld(VehicleID, GetPlayerVirtualWorld(player2) );
				}
				else SetPlayerPos(player1,plocx,plocy+2, plocz);
				format(string2,sizeof(string2),"STAFF \"%s\" ha teletransportado a \"%s\" a la ubicacion de \"%s's\"", pName(playerid), pName(player1), pName(player2) );
				SendClientMessage(player1,red,string2); SendClientMessage(player2,blue,string2);
				format(string2,sizeof(string2),"Has teletransportado a \"%s\" hacia \"%s's\" ubicación", pName(player1), pName(player2) );
 		 	    return SendClientMessage(playerid,red,string2);
 		 	} else return SendClientMessage(playerid, red, "El jugador2 no esta conectado");
		} else return SendClientMessage(playerid, red, "El jugador1 no esta conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_goto(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"/goto [jugador]");
	    new player1;
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToPac0(playerid,"GOTO");
			new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z); SetPlayerInterior(playerid,GetPlayerInterior(player1));
			SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(player1));
			if(GetPlayerState(playerid) == 2) {
				SetVehiclePos(GetPlayerVehicleID(playerid),x+3,y,z);	LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(player1));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(player1));
			} else SetPlayerPos(playerid,x+2,y,z);
			format(string2,sizeof(string2),"Has sido transportado hacia \"%s\"", pName(player1));
			return SendClientMessage(playerid,red,string2);
		} else return SendClientMessage(playerid, red, "El jugador no esta conectado o eres tu mismo!");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}
dcmd_ir(playerid,params[]) {
  //  if(bloqueado[player1] == 1) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"/ir [jugador]");
	    new player1;
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
            if(bloqueado[player1] == 1) return SendClientMessage(playerid,red,"El jugador bloqueo su posición.");
		//	CMDMessageToPac0(playerid,"GOTO");
			new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z); SetPlayerInterior(playerid,GetPlayerInterior(player1));
			SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(player1));
			if(GetPlayerState(playerid) == 2) {
				SetVehiclePos(GetPlayerVehicleID(playerid),x+3,y,z);	LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(player1));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(player1));
			} else SetPlayerPos(playerid,x+2,y,z);
			format(string2,sizeof(string2),"Has sido transportado hacia \"%s\"", pName(player1));
			return SendClientMessage(playerid,red,string2);
            format(string2,sizeof(string2),"El jugador \"%s\" se teletrasporto hacia vos con /ir, puedes usar /bloquear para bloquear tu posición.", pName(playerid));
			return SendClientMessage(player1,red,string2);
		} else return SendClientMessage(playerid, red, "El jugador no esta conectado o eres tu mismo!");

		return 1;
	//} else return SendClientMessage(playerid,red,"El jugador bloqueo su posición.");
}
dcmd_desbloquear(playerid,params[]) {
	#pragma unused params
bloqueado[playerid] = 0;
SendClientMessage(playerid,COLOR_RED,"Desbloqueaste tu posición, ahora podran usar /ir para ir a tu posición.");
return 1;
}
dcmd_bloquear(playerid,params[]) {
	#pragma unused params
bloqueado[playerid] = 1;
SendClientMessage(playerid,COLOR_RED,"Bloqueaste tu posición, ahora no podran teletrasportarse hacia vos.");
return 1;
}
dcmd_vgoto(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"/vgoto [vehiculo]");
	    new player1;
	    player1 = strval(params);
		CMDMessageToPac0(playerid,"VGOTO");
		new Float:x, Float:y, Float:z;	GetVehiclePos(player1,x,y,z);
		SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(player1));
		if(GetPlayerState(playerid) == 2) {
			SetVehiclePos(GetPlayerVehicleID(playerid),x+3,y,z);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetVehicleVirtualWorld(player1) );
		} else SetPlayerPos(playerid,x+2,y,z);
		format(string2,sizeof(string2),"Has sido teletransportado hacia un vehiculo de ID %d", player1);
		return SendClientMessage(playerid,red,string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_vget(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"/vget [vehiculo]");
	    new player1;
	    player1 = strval(params);
		CMDMessageToPac0(playerid,"VGET");
		new Float:x, Float:y, Float:z;	GetPlayerPos(playerid,x,y,z);
		SetVehiclePos(player1,x+3,y,z);
		SetVehicleVirtualWorld(player1,GetPlayerVirtualWorld(playerid));
		format(string2,sizeof(string2),"Has traido a un vehiculo de ID %d a tu ubicacion", player1);
		return SendClientMessage(playerid,red,string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}



dcmd_givecar(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"/darauto [jugador]");
	    new player1 = strval(params), playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
	    if(IsPlayerInAnyVehicle(player1)) return SendClientMessage(playerid,red,"El jugador esta en un vehiculo");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToPac0(playerid,"GIVECAR");
			new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z);
			CarSpawner(player1,415);
			GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
			format(string2,sizeof(string2),"STAFF %s te ha dado un coche",adminname);	SendClientMessage(player1,red,string2);
			format(string2,sizeof(string2),"Le has dado a %s un coche", playername); return SendClientMessage(playerid,red,string2);
		} else return SendClientMessage(playerid, red, "El jugador no esta conectado o eres tu mismo");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}
		
	


dcmd_gethere(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/gethere [jugador]");
    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
		player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToPac0(playerid,"GETHERE");
			new Float:x, Float:y, Float:z;	GetPlayerPos(playerid,x,y,z); SetPlayerInterior(player1,GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(player1,GetPlayerVirtualWorld(playerid));
			if(GetPlayerState(player1) == 2)	{
			    new VehicleID = GetPlayerVehicleID(player1);
				SetVehiclePos(VehicleID,x+3,y,z);   LinkVehicleToInterior(VehicleID,GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(GetPlayerVehicleID(player1),GetPlayerVirtualWorld(playerid));
			} else SetPlayerPos(player1,x+2,y,z);
			GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
			format(string2,sizeof(string2),"Has sido teletransportado a la ubicacion de %s",adminname);	SendClientMessage(player1,red,string2);
			format(string2,sizeof(string2),"Has traido a %s a tu ubicacion", playername); return SendClientMessage(playerid,red,string2);
		} else return SendClientMessage(playerid, red, "El jugador no esta conectado o eres tu mismo");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_get(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3|| IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/get [jugador]");
    	new player1;
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToPac0(playerid,"GET");
			new Float:x, Float:y, Float:z;	GetPlayerPos(playerid,x,y,z); SetPlayerInterior(player1,GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(player1,GetPlayerVirtualWorld(playerid));
			if(GetPlayerState(player1) == 2)	{
			    new VehicleID = GetPlayerVehicleID(player1);
				SetVehiclePos(VehicleID,x+3,y,z);   LinkVehicleToInterior(VehicleID,GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(GetPlayerVehicleID(player1),GetPlayerVirtualWorld(playerid));
			} else SetPlayerPos(player1,x+2,y,z);
			format(string2,sizeof(string2),"Has sido teletransportado a la ubicacion de \"%s\"", pName(playerid) );	SendClientMessage(player1,red,string2);
			format(string2,sizeof(string2),"Has traido a \"%s\" a tu ubicacion", pName(player1) );
			if(EstaEnEvento[playerid] == true)
			{
			EstaEnEvento[player1] = true;
			}
			return SendClientMessage(playerid,red,string2);
		} else return SendClientMessage(playerid, red, "El jugador no esta conectado o eres tu mismo");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}


dcmd_warn(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2) {
	    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "/warn [playerid] [Razón]");
    	new warned = strval(tmp);
		if(PlayerInfo[warned][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
	 	if(IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
 	    	if(warned != playerid) {
			    CMDMessageToPac0(playerid,"WARN");
				PlayerInfo[warned][Warnings]++;
				if( PlayerInfo[warned][Warnings] == MAX_WARNINGS) {
					format(str, sizeof (str), "Server: \"%s\" fue expulsado \"%s\".  (Razón: %s) (Warning: %d/%d)", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][Warnings], MAX_WARNINGS);
					SendClientMessageToAll(grey, str);
					SaveToFile("KickLog",str);	Kick(warned);
					return PlayerInfo[warned][Warnings] = 0;
				} else {
					format(str, sizeof (str), "Server: \"%s\" ha dado \"%s\" una advertencia.  (Razón: %s) (Warning: %d/%d)", pName(playerid), pName(warned), params[1+strlen(tmp)], PlayerInfo[warned][Warnings], MAX_WARNINGS);
					return SendClientMessageToAll(red, str);
				}
			} else return SendClientMessage(playerid, red, "No puedes advertirte a ti mismo.");
		} else return SendClientMessage(playerid, red, "El Jugador No Esta Conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_kick(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][Level] >= 1) {
		    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/kick [playerid] [Razón]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToPac0(playerid,"KICK");
				if(!strlen(tmp2)) {
					format(string2,sizeof(string2),"%s Fue expulsado por el administrador {FF0000}%s [Razón no dada] ",playername,adminname); SendClientMessageToAll(grey,string2);
					SaveToFile("KickLog",string2); print(string2); return Kick(player1);
				} else {
					format(string2,sizeof(string2),"%s Fue expulsado por el administrador {FF0000}%s {C2A2DA}[Razón: %s] ",playername,adminname,params[2]); SendClientMessageToAll(grey,string2);
					SaveToFile("KickLog",string2); print(string2); return Kick(player1); }
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es administrador.");
		} else return SendClientMessage(playerid,red,"No tienes el nivel suficiente para usar este comando");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

dcmd_ban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
		    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/ban [playerid] [Razón]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "Necesitas una razón");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
				CMDMessageToPac0(playerid,"BAN");
				format(string2,sizeof(string2),"%s ha sido baneado por el STAFF %s [Razón: %s] [Día: %d/%d/%d] [Time: %d:%d]",playername,adminname,params[2],day,month,year,hour,minuite);
				SendClientMessageToAll(grey,string2);
				SaveToFile("BanLog",string2);
				print(string2);
				if(udb_Exists(PlayerName2(player1)) && PlayerInfo[player1][LoggedIn] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				format(string2,sizeof(string2),"baneado por STAFF %s. Razón: %s", adminname, params[2] );
				return BanEx(player1, string2);
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

dcmd_nunban(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3)
        {
            new tmp[256], Index;        tmp = strtok(params,Index);
            if(!strlen(params)) return SendClientMessage(playerid, red, "/nunban [name]");
            new adminname[MAX_PLAYER_NAME], unbanname[256];
            unbanname = tmp;
            if(udb_Exists(unbanname))    {
            dUserSetINT(unbanname).("banned", 0);
            GetPlayerName(playerid, adminname, sizeof(adminname));
            CMDMessageToPac0(playerid,"NUNBAN");
            format(string2,sizeof(string2),"Administrador: %s (ID: %d) (Desbaneado) el nombre : \"%s\" .",adminname,playerid,unbanname);
            SendClientMessageToAll(green,string2);
           	ShowPlayerDialog(playerid,UNBAN,DIALOG_STYLE_INPUT,"Desbaneo de IP","Desban IP:\n","Desban","Cancelar");
            } else return SendClientMessage(playerid, red, "Este nombre no se encuentra.");
        } else return SendClientMessage(playerid,red,"Necesita ser administrador con rango alto para usar este comando.");
    return 1;
}

dcmd_snombre(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
		CMDMessageToPac0(playerid,"SNOMBRE");
		if(NombreI == 0) {
			NombreI = 1;
			format(string2,sizeof(string2),"STAFF \"%s\" Ha desactivado el cambio de nick", pName(playerid) );
		} else {
			NombreI = 0;
			format(string2,sizeof(string2),"STAFF \"%s\" Ha activado el cambio de nick", pName(playerid) );
		} return SendClientMessageToAll(green,string2);
 	} else return SendClientMessage(playerid,red,"Necesitas nivel 6 para usar este cmd");
}

dcmd_sbotter(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
		CMDMessageToPac0(playerid,"SBOTTER");
		if(AntiBotts == 0) {
			AntiBotts = 1;
			format(string2,sizeof(string2),"STAFF \"%s\" Ha Activado el Anti Bots", pName(playerid) );
		} else {
			AntiBotts = 0;
			format(string2,sizeof(string2),"STAFF \"%s\" Ha Desactivado el Anti Bots", pName(playerid) );
		} return SendClientMessageToAll(green,string2);
 	} else return SendClientMessage(playerid,red,"Necesitas nivel 6 para usar este cmd");
}

/*dcmd_antifreescore(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6) {
		CMDMessageToPac0(playerid,"AntiFreeScore");
		if(AntiFreeScore == 0) {
			AntiFreeScore = 1;
			format(string2,sizeof(string2),"STAFF \"%s\" Ha Activado el Anti FreeScore", pName(playerid) );
		} else {
			AntiFreeScore = 0;
			format(string2,sizeof(string2),"STAFF \"%s\" Ha Desactivado el Anti FreeScore", pName(playerid) );
		} return SendClientMessageToAll(green,string2);
 	} else return SendClientMessage(playerid,red,"Necesitas nivel 6 para usar este cmd");
}*/



dcmd_nombre(playerid,params[]) {
	new MiScore; MiScore=GetPlayerScore(playerid);
  if(NombreI == 0){
  if(MiScore>=500){
  if (UsarCMDNOMBRE[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Tenes que esperar diez minutos para volver a usar este comando y /cambiarclave");
	if(IsValidName(params))
	{
	if(PlayerInfo[playerid][LoggedIn] == 1)
        {
            if(!strlen(params)) return SendClientMessage(playerid, red, "/nombre [nuevo nombre]");
            if (strlen(params) < 3 || strlen(params) > 20) return SendClientMessage(playerid,red,"El nombre debe ser entre 3 y 20 caracteres");
            new nombre[MAX_PLAYER_NAME];
            if(!strcmp("con",params,true) || !strcmp("aux",params,true) || !strcmp("Admin",params,true) || !strcmp("panocha",params,true) || !strcmp("chocha",params,true) || !strcmp("sexo",params,true) || !strcmp("porno",params,true) || !strcmp("pito",params,true)) return SendClientMessage(playerid,red,"Esos Nicks estan prohibidos en el servidor");
            if(udb_Exists(params)) return SendClientMessage(playerid, red, "Este nombre ya existe, selecciona otro");
            GetPlayerName(playerid, nombre, sizeof(nombre));
            format(string2,sizeof(string2),"%s (ID: %d) Se cambio el nombre a : \"%s\".",nombre,playerid,params);
            SendClientMessageToAll(green,string2);
            udb_RenameUser(nombre, params);
            format(string2,sizeof(string2),"{FFFFFF}Recuerda\ndebes iniciar sa-mp con el nuevo nick\n\n{FF0000}%s",params);
           	ShowPlayerDialog(playerid,78,DIALOG_STYLE_MSGBOX,"Nuevo Nombre",string2,"Aceptar","");
            SetPlayerName(playerid, params);
            UsarCMDNOMBRE[playerid] = 1;
            SetTimerEx("ListoNombre", 500000, false, "i", playerid);
         //   SavePlayer(playerid);
        	} else return SendClientMessage(playerid,red,"Usted Necesita Identificarse Para Usar Este Comando");
		} else SendClientMessage(playerid, red, "Nombre no admitido o incorrecto");
	 } else SendClientMessage(playerid, red, "Necesitas minimo 1500 de score para usar este comando.");
  } else return SendClientMessage(playerid,red,"El comando fue desactivado por un administrador");
    return 1;
}
/*dcmd_nombre(playerid,params[]) {
	new MiScore; MiScore=GetPlayerScore(playerid);
  if(NombreI == 0){
  if(MiScore>=1500)
  {
	if(IsValidName(params))
	{
	if(PlayerInfo[playerid][LoggedIn] == 1)
        {
            if(UsarCMDNOMBRE[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Tenes que esperar diez minutos para volver a usar este comando");
            if(!strlen(params)) return SendClientMessage(playerid, red, "/nombre [nuevo nombre]");
            if (strlen(params) < 3 || strlen(params) > 20) return SendClientMessage(playerid,red,"El nombre debe ser entre 3 y 20 caracteres");
            new nombre[MAX_PLAYER_NAME];
            if(!strcmp("con",params,true) || !strcmp("aux",params,true) || !strcmp("Admin",params,true) || !strcmp("panocha",params,true) || !strcmp("chocha",params,true) || !strcmp("sexo",params,true) || !strcmp("porno",params,true) || !strcmp("pito",params,true)) return SendClientMessage(playerid,red,"Esos Nicks estan prohibidos en el servidor");
            if(udb_Exists(params)) return SendClientMessage(playerid, red, "Este nombre ya existe, selecciona otro");
            GetPlayerName(playerid, nombre, sizeof(nombre));
            format(string2,sizeof(string2),"%s (ID: %d) Se cambio el nombre a : \"%s\" .",nombre,playerid,params);
              UsarCMDNOMBRE[playerid] = 1;
            SetTimerEx("ListoNombre", 10000, false, "i", playerid);
            SendClientMessageToAll(green,string2);
            udb_RenameUser(nombre, params);
            format(string2,sizeof(string2),"{FFFFFF}recuerda que proxima vez\ndebes iniciar sa-mp con el nick\n\n{FF0000}%s",params);
           	ShowPlayerDialog(playerid,78,DIALOG_STYLE_MSGBOX,"Nuevo NickName",string2,"Aceptar","");
            SetPlayerName(playerid, params);
        	} else return SendClientMessage(playerid,red,"Usted Necesita Identificarse (/login) Para Usar Este Comando");
		} else SendClientMessage(playerid, red, "Nombre no admitido o incorrecto");
	 } else SendClientMessage(playerid, red, "Necesitas minimo 1000 de score para usar este cmd.");
  } else return SendClientMessage(playerid,red,"El comando fue desactivado por un administrador");
    return 1;
}*/


dcmd_unbanhld(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 8) {
        	ShowPlayerDialog(playerid,UNBAN,DIALOG_STYLE_INPUT,"Desbaneo de IP","Desban IP:\n","Desban","Cancelar");
			} else return SendClientMessage(playerid,red,"Necesita tener el nivel correspondiente para utilizar este cmd.");
		} else return SendClientMessage(playerid,red,"Usted debe identificarse (/login) para usar este comando");
	return 1;
}
        


dcmd_rban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 3 && IsPlayerAdmin(playerid)) {
		    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/rban [playerid] [Razón]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "Debes dar una razón");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
    			CMDMessageToPac0(playerid,"RBAN");
				format(string2,sizeof(string2),"%s ha sido baneado por el STAFF %s [Razón: %s] [Date: %d/%d/%d] [Time: %d:%d]",playername,adminname,params[2],day,month,year,hour,minuite);
				SendClientMessageToAll(grey,string2);
				SaveToFile("BanLog",string2);
				print(string2);
				if(udb_Exists(PlayerName2(player1)) && PlayerInfo[player1][LoggedIn] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				RangeBan(player1);
				return 1;
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

dcmd_sban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 8 && IsPlayerAdmin(playerid)) {
		    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/sban [playerid] [Razón]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "Debes dar una razón");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new serial[64],year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
    			CMDMessageToPac0(playerid,"SBAN");
				gpci(player1, serial, sizeof serial);
				format(string2,sizeof(string2),"%s ha sido baneado por STAFF %s [Razón: %s] [Date: %d/%d/%d] [Time: %d:%d]",playername,adminname,params[2],day,month,year,hour,minuite);
				SendClientMessageToAll(grey,string2);
				format(string2,sizeof(string2),"%s Fue baneado por %s [Razón: %s][Serial:%s]",playername,adminname,params[2],serial);
				if(udb_Exists(PlayerName2(player1)) && PlayerInfo[player1][LoggedIn] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				print(string2);
				SaveToFile("BanLog",string2);
				SaveToSerial(serial);
				Ban(player1);
				return 1;
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

/*dcmd_dnsban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 6 && IsPlayerAdmin(playerid)) {
		    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/sban [playerid] [Razón]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "You must give a Razón");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

			new clientMsg[128], File:file;
			if (!fexist("banned_hosts.txt"))
			{
				file = fopen("banned_hosts.txt", io_write);
			}
			else
			{
				file = fopen("banned_hosts.txt", io_append);
			}
			if (file)
			{
				fwrite(file, params);
				fwrite(file, "\r\n");
				fclose(file);
			}
			format(clientMsg, sizeof(clientMsg), "The hostname \"%s\" was successfully banned.", params);
			SendClientMessage(playerid, 0xFF0000FF, clientMsg);
	
				format(string2,sizeof(string2),"%s has been [S]banned by STAFF %s [Razón: %s] [Date: %d/%d/%d] [Time: %d:%d]",playername,adminname,params[2],day,month,year,hour,minuite);
				SendClientMessageToAll(grey,string2);

				return 1;
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}*/

dcmd_slap(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
		    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/slap [playerid] [Razón/with]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);
			
		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToPac0(playerid,"SLAP");
		        new Float:Health, Float:x, Float:y, Float:z; GetPlayerHealth(player1,Health); SetPlayerHealth(player1,Health-25);
				GetPlayerPos(player1,x,y,z); SetPlayerPos(player1,x,y,z+5); PlayerPlaySound(playerid,1190,0.0,0.0,0.0); PlayerPlaySound(player1,1190,0.0,0.0,0.0);

				if(strlen(tmp2)) {
					format(string2,sizeof(string2),"Has sido abofeteado por el administrador %s %s ",adminname,params[2]);	SendClientMessage(player1,red,string2);
					format(string2,sizeof(string2),"Tú has abofeteado a %s %s ",playername,params[2]); return SendClientMessage(playerid,red,string2);
				} else {
					format(string2,sizeof(string2),"Has sido abofeteado por el administrador %s ",adminname);	SendClientMessage(player1,red,string2);
					format(string2,sizeof(string2),"Tú has abofeteado %s",playername); return SendClientMessage(playerid,red,string2); }
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es un administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

dcmd_explode(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 3) {
		    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/explode [playerid] [Razón]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToPac0(playerid,"EXPLODE");
				new Float:burnx, Float:burny, Float:burnz; GetPlayerPos(player1,burnx, burny, burnz); CreateExplosion(burnx, burny , burnz, 7,10.0);

				if(strlen(tmp2)) {
					format(string2,sizeof(string2),"fuiste explotado por STAFF %s [Razón: %s]",adminname,params[2]); SendClientMessage(player1,red,string2);
					format(string2,sizeof(string2),"explotaste a %s [Razón: %s]", playername,params[2]); return SendClientMessage(playerid,red,string2);
				} else {
					format(string2,sizeof(string2),"fuiste explotado por STAFF %s",adminname); SendClientMessage(player1,red,string2);
					format(string2,sizeof(string2),"explotaste a %s", playername); return SendClientMessage(playerid,red,string2); }
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es un administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

/*dcmd_jail(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 1) {
		    new tmp[256],   Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/jail [playerid] [minutos] [Razón]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Jailed] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					new jtime = strval(tmp2);
					if(jtime == 0) jtime = 9999;

			       	CMDMessageToPac0(playerid,"JAIL");
					PlayerInfo[player1][JailTime] = jtime*1000*60;
    			    SetTimerEx("JailPlayer",5000,0,"d",player1);
		    	    SetTimerEx("Jail1",1000,0,"d",player1);
		        	PlayerInfo[player1][Jailed] = 1;

					if(jtime == 9999) {
						if(!strlen(params[strlen(tmp2)+1])) format(string2,sizeof(string2),"{FF0000}Administrador {C2A2DA}%s {FFFFFF}encarcelo a {FF0000}%s ",adminname, playername);
						else format(string2,sizeof(string2),"{FF0000}Administrador {C2A2DA}%s encarcelo a {FF0000}%s {C2A2DA}[Razón: %s]",adminname, playername, params[strlen(tmp)+1] );
   					} else {
						if(!strlen(tmp3)) format(string2,sizeof(string2),"{FF0000}Administrador {C2A2DA}%s {FFFFFF}encarcelo a {FF0000}%s {C2A2DA}por %d minutos",adminname, playername, jtime);
						else format(string2,sizeof(string2),"{FF0000}Administrador {C2A2DA}%s encarcelo a {FF0000}%s {C2A2DA}por %d minutos [Razón: %s]",adminname, playername, jtime, params[strlen(tmp2)+strlen(tmp)+1] );
					}
	    			return SendClientMessageToAll(red,string2);
				} else return SendClientMessage(playerid, red, "El jugador ya esta encarcelado.");
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es administrador.");
		} else return SendClientMessage(playerid,red,"No tienes nivel suficiente para utilizar este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}*/

/*dcmd_unjail(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
		    new tmp[256], Index; tmp = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/jail [playerid]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Jailed] == 1) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string2,sizeof(string2),"STAFF %s has unjailed you",adminname);	SendClientMessage(player1,red,string2);
					format(string2,sizeof(string2),"STAFF %s has unjailed %s",adminname, playername);
					JailRelease(player1);
					return SendClientMessageToAll(red,string2);
				} else return SendClientMessage(playerid, red, "Player is not in jail");
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es un administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}*/

dcmd_curar(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
		    new tmp[256], Index; tmp = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/curar [playerid]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				if((gTeam[player1] == TEAM_ZOMBIES) || (InfeccionEnprogreso[player1]==1))
				{
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string2,sizeof(string2),"STAFF %s te ha curado",adminname);	SendClientMessage(player1,red,string2);
					format(string2,sizeof(string2),"STAFF %s ha curado a %s",adminname, playername);
					HumanSetup(player1);
					return SendClientMessageToAll(red,string2);
				} else return SendClientMessage(playerid, red, "El jugador no esta infectado");
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es un administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

/*dcmd_jailed(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
	 		new bool:First2 = false, Count, adminname[MAX_PLAYER_NAME], i;
		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Jailed]) Count++;
			if(Count == 0) return SendClientMessage(playerid,red, "No players are jailed");

		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Jailed]) {
	    		GetPlayerName(i, adminname, sizeof(adminname));
				if(!First2) { format(string2, sizeof(string2), "Jailed Players: (%d)%s", i,adminname); First2 = true; }
		        else format(string2,sizeof(string2),"%s, (%d)%s ",string2,i,adminname);
	        }
		    return SendClientMessage(playerid,COLOR_WHITE,string2);
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}*/

dcmd_freeze(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
		    new tmp[256],   Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/freeze [playerid] [minutos] [razón]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(PlayerInfo[player1][Frozen] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					new ftime = strval(tmp2);
					if(ftime == 0) ftime = 9999;

			       	CMDMessageToPac0(playerid,"FREEZE");
					TogglePlayerControllable(player1,false); PlayerInfo[player1][Frozen] = 1; PlayerPlaySound(player1,1057,0.0,0.0,0.0);
					PlayerInfo[player1][FreezeTime] = ftime*1000*60;
			        FreezeTimer[player1] = SetTimerEx("UnFreezeMe",PlayerInfo[player1][FreezeTime],0,"d",player1);

					if(ftime == 9999) {
						if(!strlen(params[strlen(tmp2)+1])) format(string2,sizeof(string2),"STAFF %s ha congelado a %s ",adminname, playername);
						else format(string2,sizeof(string2),"STAFF %s ha congelado a %s [Razón: %s]",adminname, playername, params[strlen(tmp)+1] );
	   				} else {
						if(!strlen(tmp3)) format(string2,sizeof(string2),"STAFF %s ha congelado a %s por %d minutos",adminname, playername, ftime);
						else format(string2,sizeof(string2),"STAFF %s ha congelado a %s por %d minutos [Razón: %s]",adminname, playername, ftime, params[strlen(tmp2)+strlen(tmp)+1] );
					}
		    		return SendClientMessageToAll(red,string2);
				} else return SendClientMessage(playerid, red, "Jugador ya esta congelado.");
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es un administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

dcmd_unfreeze(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][Level] >= 2|| IsPlayerAdmin(playerid)) {
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/unfreeze [playerid]");
	    	new player1;
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		 	    if(PlayerInfo[player1][Frozen] == 1) {
			       	CMDMessageToPac0(playerid,"UNFREEZE");
					UnFreezeMe(player1);
					format(string2,sizeof(string2),"STAFF %s te ha descongelado", PlayerName2(playerid) ); SendClientMessage(player1,red,string2);
					format(string2,sizeof(string2),"STAFF %s ha descongelado a %s", PlayerName2(playerid), PlayerName2(player1));
		    		return SendClientMessageToAll(red,string2);
				} else return SendClientMessage(playerid, red, "El jugador no esta congelado.");
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es un administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

dcmd_frozen(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
	 		new bool:First2 = false, Count, adminname[MAX_PLAYER_NAME], i;
		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Frozen]) Count++;
			if(Count == 0) return SendClientMessage(playerid,red, "No hay jugadores congelados.");
			
		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Frozen]) {
	    		GetPlayerName(i, adminname, sizeof(adminname));
				if(!First2) { format(string2, sizeof(string2), "Jugadores congelados: (%d)%s", i,adminname); First2 = true; }
		        else format(string2,sizeof(string2),"%s, (%d)%s ",string2,i,adminname);
	        }
		    return SendClientMessage(playerid,COLOR_WHITE,string2);
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

dcmd_mute(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 1) {
		    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/mute [playerid] [Razón]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Muted] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
					CMDMessageToPac0(playerid,"MUTE");
					PlayerPlaySound(player1,1057,0.0,0.0,0.0);  PlayerInfo[player1][Muted] = 1; PlayerInfo[player1][MuteWarnings] = 0;

					if(strlen(tmp2)) {
						format(string2,sizeof(string2),"{FFFFFF}Fuiste muteado por el administrador {FF0000}%s {FFFFFF}[{C2A2DA}Razón: {FF0000}%s{FFFFFF}]",adminname,params[2]); SendClientMessage(player1,red,string2);
						format(string2,sizeof(string2),"{FFFFFF}Muteaste a {FF0000}%s {FFFFFF}[{C2A2DA}Razón: {FF0000}%s{FFFFFF}]", playername,params[2]); return SendClientMessage(playerid,red,string2);
					} else {
						format(string2,sizeof(string2),"{FFFFFF}Fuiste muteado por el administrador {FF0000}%s",adminname); SendClientMessage(player1,red,string2);
						format(string2,sizeof(string2),"{FFFFFF}Muteaste a {FF0000}%s", playername); return SendClientMessage(playerid,red,string2); }
				} else return SendClientMessage(playerid, red, "{FF0000}El jugador ya esta muteado");
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando..");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

dcmd_unmute(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 1) {
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/unmute [playerid]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Muted] == 1) {
					GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
					CMDMessageToPac0(playerid,"UNMUTE");
					PlayerPlaySound(player1,1057,0.0,0.0,0.0);  PlayerInfo[player1][Muted] = 0; PlayerInfo[player1][MuteWarnings] = 0;
					format(string2,sizeof(string2),"Fuiste desmuteado por el administrador {FF0000}%s",adminname); SendClientMessage(player1,red,string2);
					format(string2,sizeof(string2),"Desmuteaste a {FF0000}%s", playername); return SendClientMessage(playerid,red,string2);
				} else return SendClientMessage(playerid, red, "El jugador no esta muteado");
			} else return SendClientMessage(playerid, red, "Jugador desconectado o es administrador.");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

dcmd_muteados(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
	 		new bool:First2 = false, Count, adminname[MAX_PLAYER_NAME], i;
		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Muted]) Count++;
			if(Count == 0) return SendClientMessage(playerid,red, "No hay jugadores muteados");

		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Muted]) {
	    		GetPlayerName(i, adminname, sizeof(adminname));
				if(!First2) { format(string2, sizeof(string2), "Jugadores muteados: (%d)%s", i,adminname); First2 = true; }
		        else format(string2,sizeof(string2),"%s, (%d)%s ",string2,i,adminname);
	        }
		    return SendClientMessage(playerid,COLOR_WHITE,string2);
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}

dcmd_akill(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 8) {
	    if(PlayerInfo[playerid][Level] >= 5|| IsPlayerAdmin(playerid)) {
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/akill [playerid]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if( (PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel] ) )
					return SendClientMessage(playerid, red, "You cannot akill the highest level admin");
				CMDMessageToPac0(playerid,"AKILL");
				GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string2,sizeof(string2),"STAFF %s has killed you",adminname);	SendClientMessage(player1,red,string2);
				format(string2,sizeof(string2),"You have killed %s",playername); SendClientMessage(playerid,red,string2);
				return SetPlayerHealth(player1,0.0);
			} else return SendClientMessage(playerid, red, "El Jugador No Esta Conectado");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}



dcmd_aka(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/aka [playerid]");
    	new player1, playername[MAX_PLAYER_NAME];
		player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
  		  	GetPlayerIp(player1,tmp3,50);
			GetPlayerName(player1, playername, sizeof(playername));
		    format(str,sizeof(str),"AKA: [%s id:%d] [%s] %s", playername, player1, tmp3, dini_Get("ladmin/config/aka.txt",tmp3) );
	        return SendClientMessage(playerid,red,str);
		} else return SendClientMessage(playerid, red, "Jugador no conectado o eres tu mismo");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_screen(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/screen [playerid] [text]");
    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
		player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
			GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
			CMDMessageToPac0(playerid,"SCREEN");
			format(string2,sizeof(string2),"STAFF %s has sent you a screen message",adminname);	SendClientMessage(player1,red,string2);
			format(string2,sizeof(string2),"You have sent %s a screen message (%s)", playername, params[2]); SendClientMessage(playerid,red,string2);

			if(PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel])
			{
			format(string2, sizeof(string2), "|-%s(%d) envio a %s(%d) : %s", adminname, playerid, playername, player1, params[2]);
  			for (new b = 0; b < MAX_PLAYERS; b++)
			if(IsPlayerConnected(b) && (PlayerInfo[b][Level] >= 3) && b != playerid)
			SendClientMessage(b, lightblue, string2);
			}
			
			return GameTextPlayer(player1, params[2],4000,3);
		} else return SendClientMessage(playerid, red, "Jugador desconectado o es administrador.");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_laston(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8) {
    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, adminname, sizeof(adminname));

	    if(!strlen(params)) {
			format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(adminname));
			if(!fexist(file)) return SendClientMessage(playerid, red, "File doesnt exist, player isnt registered");
			if(dUserINT(PlayerName2(playerid)).("LastOn")==0) {	format(str, sizeof(str),"Never"); tmp2 = str;
			} else { tmp2 = dini_Get(file,"LastOn"); }
			format(str, sizeof(str),"You were last on the server on %s",tmp2);
			return SendClientMessage(playerid, red, str);
		}
		player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToPac0(playerid,"LASTON");
   	    	GetPlayerName(player1,playername,sizeof(playername)); format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(playername));
			if(!fexist(file)) return SendClientMessage(playerid, red, "File doesnt exist, player isnt registered");
			if(dUserINT(PlayerName2(player1)).("LastOn")==0) { format(str, sizeof(str),"Never"); tmp2 = str;
			} else { tmp2 = dini_Get(file,"LastOn"); }
			format(str, sizeof(str),"%s was last on the server on %s",playername,tmp2);
			return SendClientMessage(playerid, red, str);
		} else return SendClientMessage(playerid, red, "El Jugador No Esta Conectado or is yourself");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

//LISTA CLANES
dcmd_sd(playerid,params[])
{
#pragma unused params
new conteo, vips[7000],texto[128],titulo[128];
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
{
if(PlayerInfo[i][CLAN_TIENE] == 1)
{
conteo++;
}
}
if(conteo == 0)return SendClientMessage(playerid,red,"No hay miembros SD conectados"); //Si no hay Vips
format(titulo,128,"Miembros SD conectados: {FFFFFF} %d ",conteo);
//Se contaron los vips conectados
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][CLAN_TIENE] == 1 || PlayerInfo[i][CLAN_TIENEREP]  == 1 || PlayerInfo[i][CLAN_TIENELIDER] == 1)
{
//Si el player es VIP
if(PlayerInfo[i][CLAN_TIENEREP] == 1)
{
format(texto,128,"{FFFFFF}%s [%d] * {FF0000}Representante \n",PlayerName2(i),i);
}
else if(PlayerInfo[i][CLAN_TIENELIDER] == 1)
{
format(texto,128,"{FFFFFF}%s [%d] * {41FFEC}Lider \n",PlayerName2(i),i);
}
else if(PlayerInfo[i][CLAN_TIENE] == 1)
{
format(texto,128,"{FFFFFF}%s [%d] * {FFFF00}Miembro \n",PlayerName2(i),i);
}
strcat(vips,texto);
}
}
ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,titulo,vips,"Cerrar","");
return 1;
}
dcmd_god(playerid,params[])
{
#pragma unused params
new conteo, vips[7000],texto[128],titulo[128];
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
{
if(PlayerInfo[i][CLAN_TIENE] == 4)
{
conteo++;
}
}
if(conteo == 0)return SendClientMessage(playerid,red,"No hay miembros GOD conectados"); //Si no hay Vips
format(titulo,128,"Miembros GOD conectados: {FFFFFF} %d ",conteo);
//Se contaron los vips conectados
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][CLAN_TIENE] == 4 || PlayerInfo[i][CLAN_TIENEREP]  == 4 || PlayerInfo[i][CLAN_TIENELIDER] == 4)
{
//Si el player es VIP
if(PlayerInfo[i][CLAN_TIENEREP] == 4)
{
format(texto,128,"{FFFFFF}%s [%d] * {FF0000}Representante \n",PlayerName2(i),i);
}
else if(PlayerInfo[i][CLAN_TIENELIDER] == 4)
{
format(texto,128,"{FFFFFF}%s [%d] * {41FFEC}Lider \n",PlayerName2(i),i);
}
else if(PlayerInfo[i][CLAN_TIENE] == 4)
{
format(texto,128,"{FFFFFF}%s [%d] * {FFFF00}Miembro \n",PlayerName2(i),i);
}
strcat(vips,texto);
}
}
ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,titulo,vips,"Cerrar","");
return 1;
}
/*dcmd_mid(playerid,params[])
{
#pragma unused params
new conteo, vips[7000],texto[128],titulo[128];
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
{
if(PlayerInfo[i][CLAN_TIENE] == 2)
{
conteo++;
}
}
if(conteo == 0)return SendClientMessage(playerid,red,"No hay miembros MID conectados"); //Si no hay Vips
format(titulo,128,"Miembros MID conectados: {FFFFFF} %d ",conteo);
//Se contaron los vips conectados
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][CLAN_TIENE] == 2 || PlayerInfo[i][CLAN_TIENEREP]  == 2 || PlayerInfo[i][CLAN_TIENELIDER] == 2)
{
//Si el player es VIP
if(PlayerInfo[i][CLAN_TIENEREP] == 2)
{
format(texto,128,"{FFFFFF}%s [%d] * {FF0000}Representante \n",PlayerName2(i),i);
}
else if(PlayerInfo[i][CLAN_TIENELIDER] == 2)
{
format(texto,128,"{FFFFFF}%s [%d] * {41FFEC}Lider \n",PlayerName2(i),i);
}
else if(PlayerInfo[i][CLAN_TIENE] == 2)
{
format(texto,128,"{FFFFFF}%s [%d] * {FFFF00}Miembro \n",PlayerName2(i),i);
}
strcat(vips,texto);
}
}
ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,titulo,vips,"Cerrar","");
return 1;
}*/
dcmd_swo(playerid,params[])
{
#pragma unused params
new conteo, vips[7000],texto[128],titulo[128];
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
{
if(PlayerInfo[i][CLAN_TIENE] == 3)
{
conteo++;
}
}
if(conteo == 0)return SendClientMessage(playerid,red,"No hay miembros SWO conectados"); //Si no hay Vips
format(titulo,128,"Miembros SWO conectados: {FFFFFF} %d ",conteo);
//Se contaron los vips conectadosw
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][CLAN_TIENE] == 3 || PlayerInfo[i][CLAN_TIENEREP]  == 3 || PlayerInfo[i][CLAN_TIENELIDER] == 3)
{
//Si el player es VIP
if(PlayerInfo[i][CLAN_TIENEREP] == 3)
{
format(texto,128,"{FFFFFF}%s [%d] * {FF0000}Representante \n",PlayerName2(i),i);
}
else if(PlayerInfo[i][CLAN_TIENELIDER] == 3)
{
format(texto,128,"{FFFFFF}%s [%d] * {41FFEC}Lider \n",PlayerName2(i),i);
}
else if(PlayerInfo[i][CLAN_TIENE] == 3)
{
format(texto,128,"{FFFFFF}%s [%d] * {FFFF00}Miembro \n",PlayerName2(i),i);
}
strcat(vips,texto);
}
}
ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,titulo,vips,"Cerrar","");
return 1;
}
///
/*dcmd_ws(playerid,params[])
{
#pragma unused params
new conteo, vips[7000],texto[128],titulo[128];
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
{
if(PlayerInfo[i][CLAN_TIENE] >= 3 || PlayerInfo[i][CLAN_TIENEREP]  >= 3 || PlayerInfo[i][CLAN_TIENELIDER] >= 3)
{
conteo++;
}
}
if(conteo == 0)return SendClientMessage(playerid,red,"No hay miembros WS conectados"); //Si no hay Vips
format(titulo,128,"Miembros WS Conectados: {FFFFFF} %d ",conteo);
//Se contaron los vips conectados
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][CLAN_TIENE] >= 3)
{
//Si el player es VIP
if(PlayerInfo[i][CLAN_TIENEREP] == 3)
{
format(texto,128,"{FFFFFF}%s [%d] * {FF0000}Representante \n",PlayerName2(i),i);
}
else if(PlayerInfo[i][CLAN_TIENELIDER] == 3)
{
format(texto,128,"{FFFFFF}%s [%d] * {41FFEC}Lider \n",PlayerName2(i),i);
}
else if(PlayerInfo[i][CLAN_TIENE] == 3)
{
format(texto,128,"{FFFFFF}%s [%d] * {FFFF00}Miembro \n",PlayerName2(i),i);
}
strcat(vips,texto);
}
}
ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,titulo,vips,"Cerrar","");
return 1;
}*/
///LISTA EVENTO

dcmd_users(playerid,params[])
{
#pragma unused params
new conteo, vips[7000],texto[128],titulo[128];
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
{
if(EstaEnEvento[i] == true)
{
conteo++;
}
}
if(conteo == 0)return SendClientMessage(playerid,red,"No hay usuarios en el evento o no nay un evento."); //Si no hay Vips
format(titulo,128,"Usuarios en evento: {FFFFFF} %d ",conteo);
//Se contaron los vips conectados
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(EstaEnEvento[i] == true)
{
//Si el player es VIP
if(PlayerInfo[i][Level] > 0)
{
format(texto,128,"{FFFFFF}%s [%d] * {FF8040}STAFF \n",PlayerName2(i),i);
}
if(PlayerInfo[i][Level] == 0)
{
format(texto,128,"{FFFFFF}%s [%d] * {FFFFFF}Jugador \n",PlayerName2(i),i);
}
strcat(vips,texto);
}
}
ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,titulo,vips,"Cerrar","");
return 1;
}

//----------------lista vips----------------
/*dcmd_historialclanes(playerid,params[])
{
	#pragma unused params
	new string[2048];
    format(string, sizeof(string), "{FA00FE}LTC: {FFFFFF}%d\n", VariablesInfo[LTC_MASACRE]);
	//format(string, sizeof(string), "{FA00FE}WE: {FFFFFF}%d\n", VariablesInfo[WEARE_MASACRE]);
	//format(string, sizeof(string), "{FA00FE}MID: {FFFFFF}%d\n", VariablesInfo[MID_MASACRE]);

	ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_MSGBOX, "{FFFFFF}Historial de masacres ganadas de los clanes oficiales de War Blood.", string, "Aceptar", "");

    return 1;
}*/
dcmd_misiones(playerid, params[])
{
	#pragma unused params
	new string[512];
	format(string, sizeof(string), "{FFFFFF}Progreso de la misión 1: {00FF00}%d{FFFFFF}/100 zombies/humanos {FF0000}eliminados.", Player_GetMissionProgress(playerid));
	SendClientMessage(playerid, COLOR_GREEN, "Estas misiones las puedes volver a repetir cuantas veces desees.");
	SendClientMessage(playerid, COLOR_GREEN, "Una vez llegues a tu progreso se te recompensará y automáticamente comenzarás nuevamente la misión.");
	SendClientMessage(playerid, COLOR_GREEN, "*Misión 2: Solo eventos individuales*.");
	format(string, sizeof(string), "%s\n{FFFFFF}Progreso de la misión 2: {00FF00}%d{FFFFFF}/10 eventos ganados.", string, Player_GetMissionProgress2(playerid));
	ShowPlayerDialog(playerid, DIALOG_MISSIONS, DIALOG_STYLE_MSGBOX, "{00FF00}Misiones", string, "{FFFFFF}Aceptar", "");
	return 1;
}


/*dcmd_historialclanes(playerid, params[])
{
    #pragma unused params
    new string[2048];
    
    format(string, sizeof(string), "{87CEEB}SD: {FF0000}%d{FFFFFF} masacres ganadas\n\n{FF0000}SWO: {FF0000}%d{FFFFFF} masacres ganadas\n\n{FFFFFF}Usuarios sin clan: {FF0000}%d{FFFFFF} masacres ganadas\n", VariablesInfo[SD_MASACRE], VariablesInfo[SWO_MASACRE], VariablesInfo[SINCLAN_MASACRE]);

    ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_MSGBOX, "{FFFFFF}Historial de clanes.", string, "Aceptar", "");

    return 1;
}*/

dcmd_vips(playerid,params[])
{
#pragma unused params
new conteo, vips[7000],texto[128],titulo[128];
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
{
if(PlayerInfo[i][VIP_TIENE] >= 1)
{
conteo++;
}
}
if(conteo == 0)return SendClientMessage(playerid,red,"No hay vips conectados"); //Si no hay Vips
format(titulo,128,"Vips conectados: {FFFFFF} %d ",conteo);
//Se contaron los vips conectados
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][VIP_TIENE] >= 1)
{
//Si el player es VIP
if(PlayerInfo[i][VIP_TIENE] == 1)
{
format(texto,128,"{FFFFFF}%s [%d] * {FFFFFF}Plata \n",PlayerName2(i),i);
}
if(PlayerInfo[i][VIP_TIENE] == 2)
{
format(texto,128,"{FFFFFF}%s [%d] * {FF8040}Bronce \n",PlayerName2(i),i);
}
if(PlayerInfo[i][VIP_TIENE] == 3)
{
format(texto,128,"{FFFFFF}%s [%d] * {FFFF00}ORO \n",PlayerName2(i),i);
}
if(PlayerInfo[i][VIP_TIENE] == 4)
{
format(texto,128,"{FFFFFF}%s [%d] * {41FFEC}Prime \n",PlayerName2(i),i);
}
if(PlayerInfo[i][VIP_TIENE] == 5)
{
format(texto,128,"{FFFFFF}%s [%d] * {FF0000}Patreon \n",PlayerName2(i),i);
}
strcat(vips,texto);
}
}
ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,titulo,vips,"Cerrar","");
return 1;
}
///

///
dcmd_admins(playerid,params[])
{
#pragma unused params
new conteo, vips[7000],texto[128],titulo[128];
for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
{
if(PlayerInfo[i][Level] >= 1)
{
conteo++;
}
}
if(conteo == 0)return SendClientMessage(playerid,red,"No hay miembros del staff conectados"); //Si no hay Vips
format(titulo,128,"Staff Online: {FFFFFF} %d ",conteo);
//Se contaron los vips conectados
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][Level] >= 1)
{
//Si el player es administrados
if(PlayerInfo[i][Level] == 1)
{
format(texto,128,"{FFFFFF}%s [%d] - {00FF00}Ayudante \n",PlayerName2(i),i);
}
if(PlayerInfo[i][Level] == 2)
{
format(texto,128,"{FFFFFF}%s [%d] - {FF9900}Moderador \n",PlayerName2(i),i);
}
if(PlayerInfo[i][Level] == 3)
{
format(texto,128,"{FFFFFF}%s [%d] - {33CCFF}Administrador \n",PlayerName2(i),i);
}
if(PlayerInfo[i][Level] == 4)
{
format(texto,128,"{FFFFFF}%s [%d] - {FFFF00}Organizador \n",PlayerName2(i),i);
}
if(PlayerInfo[i][Level] == 5)
{
format(texto,128,"{FFFFFF}%s [%d] - {2C2727}Director \n",PlayerName2(i),i);
}
if(PlayerInfo[i][Level] == 6)
{
format(texto,128,"{FFFFFF}%s [%d] - {A52A2A}Supervisor \n",PlayerName2(i),i);
}
if(PlayerInfo[i][Level] == 7)
{
format(texto,128,"{FFFFFF}%s [%d] - {FF0000}Director \n",PlayerName2(i),i);
}
if(PlayerInfo[i][Level] == 8)
{
format(texto,128,"{FFFFFF}%s [%d] - {FF0000}Director \n",PlayerName2(i),i);
}
strcat(vips,texto);
}
}
ShowPlayerDialog(playerid,79,DIALOG_STYLE_MSGBOX,titulo,vips,"Cerrar","");
return 1;
}
//--------------------------------------------

dcmd_morning(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 8) {
        CMDMessageToPac0(playerid,"MORNING");
        return SetPlayerTime(playerid,7,0);
    } else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}


//---------------zonas vip----------------------------

//------------------------------------------------------------
//----------------------------------------------------------
dcmd_daradmin(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
        new pame[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, pame, sizeof(pame));
		if(!strcmp(NickDePac0,pame,true) || !strcmp(NickAutorizado,pame,true))
		{
		if(PlayerInfo[playerid][Level] >= 8) {
		    new tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "/daradmin [playerid] [level]");
	    	new player1, level, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME];
			player1 = strval(tmp);
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "/daradmin [playerid] [level]");
			level = strval(tmp2);

			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(PlayerInfo[player1][LoggedIn] == 1) {
					if(level > ServerInfo[MaxAdminLevel] ) return SendClientMessage(playerid,red,"Nivel incorrecto");
					if(level == PlayerInfo[player1][Level]) return SendClientMessage(playerid,red,"El jugador ya tiene este nivel");
	       			CMDMessageToPac0(playerid,"DARADMIN");
					GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(playerid, adminname, sizeof(adminname));
			       	new year,month,day;   getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);

					if(level > 0) format(string2,sizeof(string2),"STAFF %s te asgino cierto rango de administrador.",adminname);
					else format(string2,sizeof(string2),"STAFF %s te asgino usuario del servidor",adminname);
					SendClientMessage(player1,red,string2);

					//if(level > PlayerInfo[player1][Level]) GameTextPlayer(player1,"Ascendido", 2000, 3);
					//else GameTextPlayer(player1,"Descendido", 2000, 3);

					format(string2,sizeof(string2),"Tu has hecho a %s Level %d on %d/%d/%d at %d:%d:%d", playername, level, day, month, year, hour, minute, second); SendClientMessage(playerid,red,string2);
					//format(string2,sizeof(string2),"STAFF %s ha hecho a %s Level %d on %d/%d/%d at %d:%d:%d",adminname, playername, level, day, month, year, hour, minute, second);
					SaveToFile("AdminLog",string2);
					//if(level == PlayerInfo[player1][Level])
					dUserSetINT(PlayerName2(player1)).("level",(level));
					PlayerInfo[player1][Level] = level;
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"Jugador desconectado.");
			} else return SendClientMessage(playerid, red, "El Jugador No Esta Conectado");
		} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
		} else return SendClientMessage(playerid,red,"Solo alguien autorizado utiliza este CMD,");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.");
}
dcmd_darrepresentante(playerid,params[]) {
        if(PlayerInfo[playerid][Level] >= 8)
		{
		    if(!sscanf(params, "dd", params[0], params[1]))
		    {
                new ftext[30];
		        if(params[1] < 0 || params[1] > 5) 				return SendClientMessage(playerid, COLOR_RED, "ID de clan incorrecto.");
		        if(!IsPlayerConnected(params[0]))                   return SendClientMessage(playerid, COLOR_RED, "Jugador desconectado.");
		        switch(params[1])
		        {
		            case 0: 	{PlayerInfo[params[0]][CLAN_TIENEREP] = 0; ftext = "Sin Clan"; }
		            case 1: 	{PlayerInfo[params[0]][CLAN_TIENEREP] = 1; ftext = "SD"; }
		            case 2: 	{PlayerInfo[params[0]][CLAN_TIENEREP] = 2; ftext = "MID"; }
		            case 3: 	{PlayerInfo[params[0]][CLAN_TIENEREP] = 3; ftext = "SWO"; }
		            case 4: 	{PlayerInfo[params[0]][CLAN_TIENEREP] = 4; ftext = "GOD"; }
		            case 5:     {PlayerInfo[params[0]][CLAN_TIENEREP] = 5; ftext = "OG"; }
		        }
		        new string[128];
		        PlayerInfo[params[0]][CLAN_TIENELIDER] = params[1];
		        PlayerInfo[params[0]][CLAN_TIENE] = params[1];
		        format(string, sizeof(string), "{FFFF00}Administrador %s te asignó representante de el clan {FFFFFF}%s.", PlayerName2(playerid), ftext);
		        SendClientMessage(params[0], 0xFFFF00AA, string);
		        format(string, sizeof(string), "[CLANES]: %s asigno representante de el clan %s a %s.", PlayerName2(playerid), ftext, PlayerName2(params[0]));
		        MessageToAdmins(0xFFFF00AA, string);
		        CMDMessageToPac0(playerid,"DARREPRESENTANTE");
		    }
		    else SendClientMessage(playerid, COLOR_RED, "/darrepresentante [Jugador] [Clan]");
		}
		else SendClientMessage(playerid, COLOR_RED, "Necesitas ser administrador con el nivel que requiere este comando..");
        return 1;
    }
    
/*dcmd_darvip(playerid,params[]) {
        if(PlayerInfo[playerid][Level] >= 8)
		{
		    if(!sscanf(params, "dd", params[0], params[1], params[2]))
		    {
                new ftext[30];
		        if(params[1] < 0 || params[1] > 5) 				return SendClientMessage(playerid, COLOR_RED, "ID de vip incorrecto.");
				if(params[2] < 0 || params[2] > 365) 				return SendClientMessage(playerid, COLOR_RED, "Cantidad de días incorrectos.");
		        if(!IsPlayerConnected(params[0]))                   return SendClientMessage(playerid, COLOR_RED, "Jugador desconectado.");
		        switch(params[1])
		        {
		            case 0: 	{PlayerInfo[params[0]][VIP_TIENE] = 0; ftext = "Sin Vip"; }
		            case 1: 	{PlayerInfo[params[0]][VIP_TIENE] = 1; ftext = "Plata"; }
		            case 2: 	{PlayerInfo[params[0]][VIP_TIENE] = 2; ftext = "Bronce"; }
		            case 3: 	{PlayerInfo[params[0]][VIP_TIENE] = 3; ftext = "Oro"; }
		            case 4: 	{PlayerInfo[params[0]][VIP_TIENE] = 4; ftext = "Prime"; }
		            case 5:     {PlayerInfo[params[0]][VIP_TIENE] = 5; ftext = "Patreon"; }
	             //	case 6:     {PlayerInfo[params[0]][CLAN_TIENEREP] = 5; ftext = "OG"; }
		        }
		        new string[128];
		        PlayerInfo[params[0]][VIP_TIENE] = params[1];
				PlayerInfo[params[0]][VIP_EXPIRATION] = gettime() + (params[2] * 24 * 60 * 60); // Duración personalizada en días

				new dias = params[2];

		      //  PlayerInfo[params[0]][CLAN_TIENE] = params[1];
		        format(string, sizeof(string), "{FFFF00}Administrador %s te asignó vip nivel {FFFFFF}%s.", PlayerName2(playerid), ftext);
		        SendClientMessage(params[0], 0xFFFF00AA, string);
		        format(string, sizeof(string), "[VIPS]: %s asigno vip %s a %s.", PlayerName2(playerid), ftext, PlayerName2(params[0]));
				MessageToPac0(0xFFFF00AA, string);
		        format(string, sizeof(string), "[VIPS]: por %s días.",dias);
				MessageToPac0(0xFFFF00AA, string);				

		        CMDMessageToPac0(playerid,"DARVIP");
		    }
		    else SendClientMessage(playerid, COLOR_RED, "/darvip [Jugador] [Nivel de vip] [días]");
		}
		else SendClientMessage(playerid, COLOR_RED, "Necesitas ser administrador con el nivel que requiere este comando..");
        return 1;
    }*/
dcmd_darvip(playerid,params[]) {
        if(PlayerInfo[playerid][Level] >= 7)
		{
		    if(!sscanf(params, "dd", params[0], params[1]))
		    {
                new ftext[30];
		        if(params[1] < 0 || params[1] > 5) 				return SendClientMessage(playerid, COLOR_RED, "ID de vip incorrecto.");
		        if(!IsPlayerConnected(params[0]))                   return SendClientMessage(playerid, COLOR_RED, "Jugador desconectado.");
		        switch(params[1])
		        {
		         /*   case 0: 	{PlayerInfo[params[0]][VIP_TIENE] = 0; ftext = "Sin Vip"; }
		            case 1: 	{PlayerInfo[params[0]][VIP_TIENE] = 1; ftext = "Plata"; }
		            case 2: 	{PlayerInfo[params[0]][VIP_TIENE] = 2; ftext = "Bronce"; }*/

		          	 case 0: 	{PlayerInfo[params[0]][VIP_TIENE] = 0; ftext = "Ranura vacia"; }
		            case 1: 	{PlayerInfo[params[0]][VIP_TIENE] = 1; ftext = "Ranura vacia"; }
		            case 2: 	{PlayerInfo[params[0]][VIP_TIENE] = 2; ftext = "Ranura vacia"; }					

		            case 3: 	{PlayerInfo[params[0]][VIP_TIENE] = 3; ftext = "Oro"; }
		            case 4: 	{PlayerInfo[params[0]][VIP_TIENE] = 4; ftext = "Prime"; }
		            case 5:     {PlayerInfo[params[0]][VIP_TIENE] = 5; ftext = "Patreon"; }
	             //	case 6:     {PlayerInfo[params[0]][CLAN_TIENEREP] = 5; ftext = "OG"; }
		        }
		        new string[128];
		        PlayerInfo[params[0]][VIP_TIENE] = params[1];
		      //  PlayerInfo[params[0]][CLAN_TIENE] = params[1];
		        format(string, sizeof(string), "{FFFF00}Administrador %s te asignó vip nivel {FFFFFF}%s.", PlayerName2(playerid), ftext);
		        SendClientMessage(params[0], 0xFFFF00AA, string);
		        format(string, sizeof(string), "[VIPS]: %s asigno vip %s a %s.", PlayerName2(playerid), ftext, PlayerName2(params[0]));
		        MessageToAdmins(0xFFFF00AA, string);
		        CMDMessageToPac0(playerid,"DARVIP");
		    }
		    else SendClientMessage(playerid, COLOR_RED, "/darvip [Jugador] [Nivel de vip]");
		}
		else SendClientMessage(playerid, COLOR_RED, "Necesitas ser administrador con el nivel que requiere este comando..");
        return 1;
    }









dcmd_darrangoplayer(playerid,params[]) {
        if(PlayerInfo[playerid][Level] >= 8)
		{
		    if(!sscanf(params, "dd", params[0], params[1]))
		    {
                new ftext[30];
		        if(params[1] < 0 || params[1] > 16) 				return SendClientMessage(playerid, COLOR_RED, "ID de jugador incorrecto.");
		        if(!IsPlayerConnected(params[0]))                   return SendClientMessage(playerid, COLOR_RED, "Jugador desconectado.");
		        switch(params[1])
		        {
		            case 0: 	{PlayerInfo[params[0]][RANGO_PLAYER] = 0; ftext = "Novato"; }
		            case 1: 	{PlayerInfo[params[0]][RANGO_PLAYER] = 1; ftext = "Civil"; }
		            case 2: 	{PlayerInfo[params[0]][RANGO_PLAYER] = 2; ftext = "Superviviente"; }
		            case 3: 	{PlayerInfo[params[0]][RANGO_PLAYER] = 3; ftext = "Superviviente I"; }
		            case 4: 	{PlayerInfo[params[0]][RANGO_PLAYER] = 4; ftext = "Superviviente II"; }
		            case 5:     {PlayerInfo[params[0]][RANGO_PLAYER] = 5; ftext = "Superviviente III"; }
		            case 6:     {PlayerInfo[params[0]][RANGO_PLAYER] = 6; ftext = "Superviviente IV"; }
		            case 7:     {PlayerInfo[params[0]][RANGO_PLAYER] = 7; ftext = "Superviviente Avanzado"; }
		            case 8:     {PlayerInfo[params[0]][RANGO_PLAYER] = 8; ftext = "Superviviente Experto"; }
		            case 9:     {PlayerInfo[params[0]][RANGO_PLAYER] = 9; ftext = "Sub Oficial"; }
		            case 10:     {PlayerInfo[params[0]][RANGO_PLAYER] = 10; ftext = "Oficial"; }
		            case 11:     {PlayerInfo[params[0]][RANGO_PLAYER] = 11; ftext = "Comisario"; }
		            case 12:     {PlayerInfo[params[0]][RANGO_PLAYER] = 12; ftext = "Soldado"; }
		            case 13:     {PlayerInfo[params[0]][RANGO_PLAYER] = 13; ftext = "Cabo"; }
		            case 14:     {PlayerInfo[params[0]][RANGO_PLAYER] = 14; ftext = "Navy"; }
		            case 15:     {PlayerInfo[params[0]][RANGO_PLAYER] = 15; ftext = "Elite"; }
		            case 16:     {PlayerInfo[params[0]][RANGO_PLAYER] = 16; ftext = "Warframe"; }
	             //	case 6:     {PlayerInfo[params[0]][CLAN_TIENEREP] = 5; ftext = "OG"; }
		        }
		        new string[128];
		        PlayerInfo[params[0]][RANGO_PLAYER] = params[1];
             //  TextDrawHideForPlayer(playerid,TextdrawRangoTotal[playerid]);
             //   TextDrawShowForPlayer(playerid,TextdrawRangoTotal[playerid]);
           //    TextDrawHideForPlayer(params[1],TextdrawRangoTotal[playerid]);
         //       TextDrawShowForPlayer(params[1],TextdrawRangoTotal[playerid]);                
		      //  PlayerInfo[params[0]][CLAN_TIENE] = params[1];
		        format(string, sizeof(string), "{FFFF00}Administrador %s te asignó rango nivel {FFFFFF}%s.", PlayerName2(playerid), ftext);
		        SendClientMessage(params[0], 0xFFFF00AA, string);
		        format(string, sizeof(string), "[RANGOS]: %s asigno rango %s a %s.", PlayerName2(playerid), ftext, PlayerName2(params[0]));
		        MessageToAdmins(0xFFFF00AA, string);
		        CMDMessageToPac0(playerid,"DARRANGOPLAYER");
		    }
		    else SendClientMessage(playerid, COLOR_RED, "/darrangoplayer [Jugador] [Rango]");
		}
		else SendClientMessage(playerid, COLOR_RED, "Necesitas ser administrador con el nivel que requiere este comando.");
        return 1;
    }
dcmd_darlideradm(playerid,params[]) {
        if(PlayerInfo[playerid][Level] >= 8)
		{
		    if(!sscanf(params, "dd", params[0], params[1]))
		    {
                new ftext[30];
		        if(params[1] < 0 || params[1] > 5) 				return SendClientMessage(playerid, COLOR_RED, "ID de clan incorrecto.");
		        if(!IsPlayerConnected(params[0]))                   return SendClientMessage(playerid, COLOR_RED, "Jugador desconectado.");
		        switch(params[1])
		        {
		            case 0: 	{PlayerInfo[params[0]][CLAN_TIENELIDER] = 0; ftext = "Sin Clan"; }
		            case 1: 	{PlayerInfo[params[0]][CLAN_TIENELIDER] = 1; ftext = "SD"; }
		            case 2: 	{PlayerInfo[params[0]][CLAN_TIENELIDER] = 2; ftext = "MID"; }
		            case 3: 	{PlayerInfo[params[0]][CLAN_TIENELIDER] = 3; ftext = "SWO"; }
		            case 4: 	{PlayerInfo[params[0]][CLAN_TIENELIDER] = 4; ftext = "GOD"; }
		            case 5:     {PlayerInfo[params[0]][CLAN_TIENELIDER] = 5; ftext = "OG"; }
		        }
		        new string[128];
		        PlayerInfo[params[0]][CLAN_TIENEREP] = 0;
		        PlayerInfo[params[0]][CLAN_TIENE] = params[1];
		        format(string, sizeof(string), "{FFFF00}Administrador %s te asignó lider de el clan {FFFFFF}%s.", PlayerName2(playerid), ftext);
		        SendClientMessage(params[0], 0xFFFF00AA, string);
		        format(string, sizeof(string), "[CLANES]: %s asigno lider de el clan %s a %s.", PlayerName2(playerid), ftext, PlayerName2(params[0]));
		        MessageToAdmins(0xFFFF00AA, string);
				CMDMessageToPac0(playerid,"DARLIDER");
		    }
		    else SendClientMessage(playerid, COLOR_RED, "/darlideradm [Jugador] [Clan]");
		}
		else SendClientMessage(playerid, COLOR_RED, "Necesitas ser administrador con el nivel que requiere este comando..");
        return 1;
    }
dcmd_darclan(playerid,params[]) {
    if(PlayerInfo[playerid][CLAN_TIENELIDER] > 0){
          //  new string[128];
            new giveplayerid;
        	if(!sscanf(params, "d", giveplayerid)){
        	    if(IsPlayerConnected(giveplayerid)){
        	      //  if(ProxDetector(8.0, playerid, giveplayerid)){
	            	    if(giveplayerid == playerid) 		return	SendClientMessage(playerid, COLOR_RED, "No puedes invitarte a vos mismo.");
	            	    //if(Info[giveplayerid][pFMember] < 255)	return	SendClientMessage(playerid, COLOR_WHITE, "No puedes invitar a una persona que está en una banda o familia.");
	            	  //  if(Facturing[giveplayerid] > 0)    return 	SendClientMessage(playerid, COLOR_RED, "{FFFF00}Servidor:{FFFFFF} Este jugador está en otra tarea, espera.");
	            	    if(PlayerInfo[giveplayerid][CLAN_TIENE] > 0 || PlayerInfo[giveplayerid][CLAN_TIENELIDER] > 0 || PlayerInfo[giveplayerid][CLAN_TIENEREP] > 0) return 	SendClientMessage(playerid, COLOR_RED, "Este jugador ya pertenece a un {F81414}CLAN.");
						new string[256];
	            	    switch(PlayerInfo[playerid][CLAN_TIENELIDER]){
						    case 1: 	ReqF_Name[giveplayerid] = "SD";
						    case 2: 	ReqF_Name[giveplayerid] = "MID";
						    case 3: 	ReqF_Name[giveplayerid] = "SWO";
						    case 4: 	ReqF_Name[giveplayerid] = "GOD";
						    case 5:     ReqF_Name[giveplayerid] = "OG";
						}
                        ReqF_Faction[giveplayerid] = PlayerInfo[playerid][CLAN_TIENELIDER];
                      //  Facturing[giveplayerid] = 1;
                    //   SendClientMessage(giveplayerid, COLOR_WHITE, "Te ofrecieron unirte a un clan");
                        //SendClientMessage(playerid, COLOR_WHITE, "Ofreciste a %s unirse a tu clan.",PlayerName2(giveplayerid));
   						format(string, sizeof(string), "Ofreciste a %s unirse a tu CLAN.",PlayerName2(giveplayerid));
						SendClientMessage(playerid, COLOR_RED, string);
						format(string, sizeof(string), "\t¿Deseas pertenecer a el clan %s?", ReqF_Name[giveplayerid]);
		        		ShowPlayerDialog(giveplayerid,REQF_ACCEPT,DIALOG_STYLE_MSGBOX, "{00F70C}Unirse al CLAN", string, "Aceptar", "Rechazar");
	            	//}else SendClientMessage(playerid, COLOR_WHITE, "Jugador muy lejos.");
        	    }else SendClientMessage(playerid, COLOR_RED, "Jugador desconectado.");
			  }else SendClientMessage(playerid, COLOR_RED, "/darclan {F81414}[ID].");
       }else SendClientMessage(playerid, COLOR_RED, "Usted no es un lider o representate de un clan.");
	return 1;
}
dcmd_premiar(playerid,params[]) {
if(PlayerInfo[playerid][Level] >= 2) {
    if(PlayerInfo[playerid][Level] > 0){
            new giveplayerid;
        	if(!sscanf(params, "d", giveplayerid)){
        	    if(IsPlayerConnected(giveplayerid)){
        	      //  if(ProxDetector(8.0, playerid, giveplayerid)){
	            	    if(giveplayerid == playerid) 		return	SendClientMessage(playerid, COLOR_RED, "No podes premiarte a vos mismo.");
	            	    if(PlayerInfo[giveplayerid][Level] >= 1) 		return	SendClientMessage(playerid, COLOR_RED, "Este jugador es parte del staff -. No puede ganar eventos.");
						if(EstaEnEvento[giveplayerid] == false)	return SendClientMessage(playerid,green,"El jugador no esta en un evento.");
						//if(Info[giveplayerid][pFMember] < 255)	return	SendClientMessage(playerid, COLOR_WHITE, "No puedes invitar a una persona que está en una banda o familia.");
	            	  //  if(Facturing[giveplayerid] > 0)    return 	SendClientMessage(playerid, COLOR_RED, "{FFFF00}Servidor:{FFFFFF} Este jugador está en otra tarea, espera.");
//						new string[256];
                        new string[80];
						if(EstaEnEvento[giveplayerid] == true)
						{
						new rand = random(sizeof(RandomSpawnsHumano));
						gTeam[giveplayerid] = NO_TEAM;
						SetPlayerTeam(giveplayerid, gTeam[giveplayerid]);
						ELOY9N_ResetPlayerWeapons(giveplayerid);
						SetPlayerHealth(giveplayerid,100);
						StopAudioStreamForPlayer(giveplayerid);
						ELOY9N_GivePlayerWeapon(giveplayerid, 24, 200);  //DK
						ELOY9N_GivePlayerWeapon(giveplayerid, 31, 100);   //m4
						SetPlayerColor(giveplayerid, 0x218C07FF);
						SetPlayerPos(giveplayerid, RandomSpawnsHumano[rand][0], RandomSpawnsHumano[rand][1], RandomSpawnsHumano[rand][2]);
						SetPlayerInterior(giveplayerid,0);
						SetPlayerArmour(giveplayerid,0);
						SetPlayerVirtualWorld(giveplayerid, 0);
						SetPlayerSkin(giveplayerid, 285);
						EstaEnEvento[giveplayerid] = false;				

						if (PlayerInfo[giveplayerid][MISION2_PLAYER] >= 10)
						{
							SendClientMessage(giveplayerid, COLOR_GREEN, "¡Felicidades! Has completado la misión de ganar 10 eventos. {FFFFFF}*Se te ha recompensado con $400.000 y 50 puntos de rango.");
							ELOY9N_GivePlayerMoney(giveplayerid, 400000);
							PlayerInfo[giveplayerid][PUNTOS_PLAYER_2]+= 50;
							PlayerInfo[giveplayerid][MISION2_PLAYER] = 0;
						/*	format(string2, sizeof(string2), "%d", PlayerInfo[giveplayerid][PUNTOS_PLAYER_2]);
							TextDrawSetString(TextdrawPuntosTotal[giveplayerid], string2);
							TextDrawShowForPlayer(giveplayerid, TextdrawPuntosTotal[giveplayerid]);*/
							
						}
						PlayerInfo[giveplayerid][MISION2_PLAYER] += 1;
						ShowPlayerDialog(giveplayerid,DIALOG_RECOMPENSA,DIALOG_STYLE_LIST,"{FFF000}Panel de premios","Score {FF0000}[CANTIDAD] {33FF33}[1000]\nDinero {FF0000}[CANTIDAD] {33FF33}[$150.000]\nRPG {FF0000}[MUNICIÓN] {33FF33}[200]\nMinigun {FF0000}[MUNICIÓN] {33FF33}[1.000]\nRhino\nHunter\nHydra\nPuntos de rango {33FF33}[300]","Seleccionar","Salir");
						CMDMessageToPac0(playerid,"PREMIAR");
						format(string, sizeof(string), "premiaste a %s.",PlayerName2(giveplayerid));
						new Nombre[MAX_PLAYERS];
						new Nombre2[MAX_PLAYERS];
						GetPlayerName(playerid, Nombre, sizeof(Nombre));
						GetPlayerName(giveplayerid, Nombre2 , sizeof(Nombre2));
						format(string2,sizeof(string2),"{00FF7C}%s dio un premio a {FF0000}%s.",Nombre,Nombre2);
						SendClientMessageToAll(COLOR_WHITE,string2);		
						SaveToFile("AdminLog",string2);
						}
			
						//SendClientMessage(playerid, COLOR_RED, string);
					//	SendClientMessage(playerid, red, "premiaste a %s.",PlayerName2(giveplayerid));
        	    }else SendClientMessage(playerid, COLOR_RED, "Jugador desconectado.");
			  }else SendClientMessage(playerid, COLOR_RED, "/premiar {F81414}[ID].");
              }else SendClientMessage(playerid, COLOR_RED, "No puedes premiar a un administrador.");
			  }else SendClientMessage(playerid, COLOR_RED, "Necesitas ser administrador para usar este comando y ser superior nivel 3.");
	return 1;
}
dcmd_EXTERMINADOR2ocult(playerid,params[]) {
#pragma unused params
//if(PlayerInfo[playerid][EXTERMINADOR_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer EXTERMINADOR corporatión para poder usar este comando");
if(gTeam[playerid] == TEAM_EXTERMINADOR) return SendClientMessage(playerid,red,"Ya te convertiste en un agente EXTERMINADOR.");
if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid,red,"Necesitas ser humano para convertirte en EXTERMINADOR");
if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true) return  SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando dentro de un evento.");
//    gTeam[playerid] = 0;
//	if(gTeam[playerid] == TEAM_ZOMBIES)
SendClientMessage(playerid,red,"EXTERMINADOR temporalmente gratis. -¡Disfrute!-");
    gTeam[playerid] = TEAM_EXTERMINADOR;
//    if(gTeam[playerid] == TEAM_EXTERMINADOR)
	SetPlayerTeam(playerid, gTeam[playerid]);
    SetPlayerHealth(playerid,100);
 //   SetPlayerArmour(playerid,100);
 //   SetPlayerTeam(playerid, gTeam[playerid]=3);
 	ELOY9N_ResetPlayerWeapons(playerid);
 	SetPlayerHealth(playerid,100);
	ELOY9N_GivePlayerWeapon(playerid, 16, 10);  //granada
	ELOY9N_GivePlayerWeapon(playerid, 24, 500);  //DK
	ELOY9N_GivePlayerWeapon(playerid, 31, 600);   //m4
	ELOY9N_GivePlayerWeapon(playerid, 27, 350);  //EDC
	ELOY9N_GivePlayerWeapon(playerid, 34, 120);  //SNIPER 804000
 	SetPlayerSkin(playerid, 285); 	
 	SetPlayerColor(playerid,0x804000AA);
 	SetPlayerPos(playerid,915.4669,-1215.9471,16.9766);
	SendClientMessage(playerid,red,"¡Eres un EXTERMINADOR!, recuerda matar a todos los humanos y zombies que se encuentren en tu camino");
 	SendClientMessage(playerid, COLOR_RED, "Bienvenido a {804000}EXTERMINADOR {FFFFFF}Corporatión.");
return 1;
}
/*dcmd_centinela(playerid,params[]) {
#pragma unused params
//if(PlayerInfo[playerid][EXTERMINADOR_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer EXTERMINADOR corporatión para poder usar este comando");
if(gTeam[playerid] == TEAM_CENTINELAS) return SendClientMessage(playerid,red,"Ya te convertiste en un Centinela.");
if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid,red,"Necesitas ser humano para convertirte en Centinela.");
if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true) return  SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando dentro de un evento.");
    gTeam[playerid] = TEAM_CENTINELAS;
	SetPlayerTeam(playerid, gTeam[playerid]);
    SetPlayerHealth(playerid,100);
 	ELOY9N_ResetPlayerWeapons(playerid);
 	SetPlayerHealth(playerid,100);
//	ELOY9N_GivePlayerWeapon(playerid, 16, 10);  //granada
	ELOY9N_GivePlayerWeapon(playerid, 24, 500);  //DK
	ELOY9N_GivePlayerWeapon(playerid, 31, 600);   //m4
	//ELOY9N_GivePlayerWeapon(playerid, 27, 350);  //EDC
//	ELOY9N_GivePlayerWeapon(playerid, 34, 120);  //SNIPER 804000
 	SetPlayerSkin(playerid, 287); 	
 	SetPlayerColor(playerid,0xFFFF00AA); 
 	SetPlayerPos(playerid,1128.1803, -1434.2914, 15.9447);
	SendClientMessage(playerid,red,"¡Eres un Centinela!, recuerda matar a todos los que se opongan en tu camino.");
 //	SendClientMessage(playerid, COLOR_RED, "Bienvenido a {804000}EXTERMINADOR {FFFFFF}Corporatión.");
return 1;
}*/
dcmd_expulsar(playerid,params[]) {
		new give;
        if(PlayerInfo[playerid][CLAN_TIENELIDER] == 0) return SendClientMessage(playerid, COLOR_RED, "Usted no es lider de un clan.");
		if(sscanf(params, "d", give)) return SendClientMessage(playerid, COLOR_RED, "/expulsar [jugador]");
		if(!IsPlayerConnected(give)) return SendClientMessage(playerid, COLOR_RED, "Jugador desconectado.");
        if(PlayerInfo[give][CLAN_TIENEREP] >= 1) return	SendClientMessage(playerid, COLOR_RED, "No podes expulsar a un representante.");
	 	if(give == playerid) return	SendClientMessage(playerid, COLOR_RED, "No podes expulsarte a vos mismo.");
      //  if(PlayerInfo[give][CLAN_TIENEREP] >= 1) 
        if(PlayerInfo[playerid][CLAN_TIENELIDER] == PlayerInfo[give][CLAN_TIENE]){
			new string[80];
   			format(string, sizeof(string), "El lider o representante %s te ha expulsado del CLAN.",PlayerName2(playerid));
 	    	SendClientMessage(give, COLOR_RED, string);
			format(string, sizeof(string), "Expulsaste a %s de tu CLAN.",PlayerName2(give));
			SendClientMessage(playerid, COLOR_RED, string);
			PlayerInfo[give][CLAN_TIENE] = 0;
			PlayerInfo[give][CLAN_TIENELIDER] = 0;
			PlayerInfo[give][CLAN_TIENEREP] = 0;
					}
		else SendClientMessage(playerid, COLOR_RED, "El jugador no pertenece a tu clan.");
        return 1;
    }
dcmd_ascender(playerid,params[]) {
		new give;
        if(PlayerInfo[playerid][CLAN_TIENELIDER] == 0) return SendClientMessage(playerid, COLOR_RED, "Usted no es representante de un clan.");
		if(sscanf(params, "d", give)) return SendClientMessage(playerid, COLOR_RED, "/ascender [jugador]");
		if(!IsPlayerConnected(give)) return SendClientMessage(playerid, COLOR_RED, "Jugador desconectado.");
        if(PlayerInfo[give][CLAN_TIENEREP] >= 1) return	SendClientMessage(playerid, COLOR_RED, "No podes bajarle el rango a un representante.");
	 	if(give == playerid) return	SendClientMessage(playerid, COLOR_RED, "No podes darte lider a vos mismo.");
      //  if(PlayerInfo[give][CLAN_TIENEREP] >= 1) 
        if(PlayerInfo[playerid][CLAN_TIENELIDER] == PlayerInfo[give][CLAN_TIENE]){
			new string[80];
   			format(string, sizeof(string), "El representante %s te ha ascendido a lider de tu CLAN.",PlayerName2(playerid));
 	    	SendClientMessage(give, COLOR_RED, string);
			format(string, sizeof(string), "Ascendiste a %s a lider de tu CLAN.",PlayerName2(give));
			SendClientMessage(playerid, COLOR_RED, string);
			PlayerInfo[give][CLAN_TIENE] = PlayerInfo[playerid][CLAN_TIENE];
			PlayerInfo[give][CLAN_TIENELIDER] = PlayerInfo[playerid][CLAN_TIENE];
					}
		else SendClientMessage(playerid, COLOR_RED, "El jugador no pertenece a tu clan.");
        return 1;
    }	
dcmd_renunciar(playerid,params[]) {
	#pragma unused params
        if(PlayerInfo[playerid][CLAN_TIENE] == 0) return SendClientMessage(playerid, COLOR_RED, "Usted no esta en un clan.");
        else{
			new string[80];
			format(string, sizeof(string), "Saliste del clan en el que estabas");
			SendClientMessage(playerid, COLOR_RED, string);
			PlayerInfo[playerid][CLAN_TIENE] = 0;
			PlayerInfo[playerid][CLAN_TIENELIDER] = 0;
			PlayerInfo[playerid][CLAN_TIENEREP] = 0;
        }
        return 1;
    }    
/*dcmd_miembros(playerid,params[]) {
	#pragma unused params
	new member = PlayerInfo[playerid][CLAN_TIENE];
    new leader = PlayerInfo[playerid][CLAN_TIENELIDER];
    new representante = PlayerInfo[playerid][CLAN_TIENEREP];
    new teamnumber;
	if (PlayerInfo[playerid][CLAN_TIENELIDER] != 0) teamnumber = PlayerInfo[playerid][CLAN_TIENELIDER];
	else if (PlayerInfo[playerid][CLAN_TIENE] != 0) teamnumber = PlayerInfo[playerid][CLAN_TIENE];
	else if (PlayerInfo[playerid][CLAN_TIENEREP] != 0) teamnumber = PlayerInfo[playerid][CLAN_TIENEREP];
    if(member > 0 || leader > 0 || representante > 0)
    {
	    SendClientMessage(playerid, red, "{FFFFFF}Miembros Conectados:");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    new string[32];
			if (IsPlayerConnected(i))  
			{
		 	//	if (PlayerInfo[i][CLAN_TIENEREP] == teamnumber) format(string, sizeof(string), "%s Representante.",GetPlayerName(i));
			//	else if (PlayerInfo[i][CLAN_TIENELIDER] == teamnumber) format(string, sizeof(string), "%s Líder",GetPlayerName(i));
			//	else if (PlayerInfo[i][CLAN_TIENE] == teamnumber) format(string, sizeof(string), "%s Miembro",GetPlayerName(i));
	 			if (PlayerInfo[i][CLAN_TIENEREP] == teamnumber) format(string, sizeof(string), "%s {FF0000}Rep.",PlayerName2(i));
				else if (PlayerInfo[i][CLAN_TIENELIDER] == teamnumber) format(string, sizeof(string), "%s {33CCFF}Líder.",PlayerName2(i));
				else if (PlayerInfo[i][CLAN_TIENE] == teamnumber) format(string, sizeof(string), "%s {00FF00}Miembro.",PlayerName2(i));
				if(strlen(string) > 0) SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
	}
	else SendClientMessage(playerid, COLOR_RED, "{FF0000}{FFFFFF}No perteneces a ninguna facción.");
    return 1;
}*/
dcmd_reportar(playerid,params[]) {
    new reported, tmp[256], tp3[256], Index;		tmp = strtok(params,Index), tp3 = strtok(params,Index);
    if(!strlen(params)) return SendClientMessage(playerid, red, "/reportar [playerid] [razón]");
	reported = strval(tmp);

 	if(IsPlayerConnected(reported) && reported != INVALID_PLAYER_ID) {
	
		if(PlayerInfo[reported][Level] == ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No podes reportar a ese administrador.");
		if(playerid == reported) return SendClientMessage(playerid,red,"No podes reportarte a vos mismo");
		if(strlen(params) > 7) {
			new reportedname[MAX_PLAYER_NAME], reporter[MAX_PLAYER_NAME], str2[128], hour,minute,second; gettime(hour,minute,second);
			GetPlayerName(reported, reportedname, sizeof(reportedname));	GetPlayerName(playerid, reporter, sizeof(reporter));
			format(str2, sizeof(str2), "[Reporte]  %s(%d) Reporto %s(%d) Razon: %s [%d:%d:%d]", reporter,playerid, reportedname, reported, params[strlen(tmp)+1], hour,minute,second);
			MessageToAdmins(COLOR_WHITE,str2);
			SaveToFile("ReportLog",str2);
			format(str2, sizeof(str2), "Reporte(%d:%d:%d): %s(%d) Reporto %s(%d) Razon: %s", hour,minute,second, reporter,playerid, reportedname, reported, params[strlen(tmp)+1]);
			for(new i = 1; i < MAX_REPORTS-1; i++) Reports[i] = Reports[i+1];
			Reports[MAX_REPORTS-1] = str2;
			return SendClientMessage(playerid,red, "Tu reporte fue enviado a los administradores conectados");
		} else return SendClientMessage(playerid,red,"Razón invalida");
	} else return SendClientMessage(playerid, red, "El jugador no esta conectado");
}

//------------------------report adm------------------

/*dcmd_reportadmin(playerid,params[]) {
    new reported, tmp[256],  Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
    if(!strlen(params)) return SendClientMessage(playerid, red, "/reportarAdmin [AdminId] [razon]");
	reported = strval(tmp);

 	if(IsPlayerConnected(reported) && reported != INVALID_PLAYER_ID) {
 		if (PlayerInfo[playerid][pVip] >= 1) {
		if(playerid == reported) return SendClientMessage(playerid,red,"{FFFFFF}{29FF0D}No Puedes Reportarte a Ti Mismo!");
		if(PlayerInfo[reported][Level] == 0) return SendClientMessage(playerid,red,"{FFFFFF}{29FF0D}El Jugador No Es Administrador!");
		if(HaReportado[playerid]==1) return SendClientMessage(playerid,red,"{FFFFFF}{29FF0D}Solo Se Puede Reportar Una Vez ");
		if(strlen(params) > 7) {
			new reportedname[MAX_PLAYER_NAME], reporter[MAX_PLAYER_NAME], hour,minute,second; gettime(hour,minute,second);
			GetPlayerName(reported, reportedname, sizeof(reportedname));	GetPlayerName(playerid, reporter, sizeof(reporter));
			format(str, sizeof(str), "%s Reporto a %s Razon: %s ", reporter, reportedname, params[strlen(tmp)+1]);
			SaveToFile("AdminReport",str);
			HaReportado[playerid]=1;
			return SendClientMessage(playerid,red, "{29FF0D}Tu Reporte Fue Guardado y Sera Revisado Por {FFFFFF}[GT]Bullet[L] y [ImS]Nikki!");
		} else return SendClientMessage(playerid,red,"{FFFFFF}{29FF0D}Esa No Es Una Razon {FFFFFF}Valida!");
		} else return SendClientMessage(playerid,red,"{FFFFFF}[Advertencia]: {29FF0D}Lo Sentimos Solo Usuarios {FFFFFF}VIP!");
	} else return SendClientMessage(playerid, red, "{29FF0D}El Jugador Que {FFFFFF}Reportas {29FF0D}No Esta Conectado");
}*/

//--------------------------------------------------

/*dcmd_hide(playerid,params[])
{
    #pragma unused params
	if (PlayerInfo[playerid][Level] >= 6)
	{
	    if (PlayerInfo[playerid][Hide] == 1)
 		return SendClientMessage(playerid,red,"Tu ya estas en estado HIDE!");

 		PlayerInfo[playerid][Hide] = 1;
   		return SendClientMessage(playerid,green,"|- Has cambiado tu estado a HIDE haora no te veras en /admins -|");
	}
	return SendClientMessage(playerid,red,"NECESITA LEVEL 7 Admin Para Usar Este Cmd");
}

dcmd_unhide(playerid,params[])
{
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6)
	{
 		if (PlayerInfo[playerid][Hide] == 0)
 		return SendClientMessage(playerid,red,"Tu no estas en estado HIDE!");
  		PlayerInfo[playerid][Hide] = 0;
   		return SendClientMessage(playerid,green,"|- Ya Esta De Nuevo Visible en /admins -|");
	}
 	return SendClientMessage(playerid,red,"NECESITA LEVEL 7 Admin Para Usar Este Cmd");
}*/

dcmd_reportes(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 1) {
        new ReportCount;
		for(new i = 1; i < MAX_REPORTS; i++)
		{
			if(strcmp( Reports[i], "<ninguno>", true) != 0) { ReportCount++; SendClientMessage(playerid,COLOR_WHITE,Reports[i]); }
		}
		if(ReportCount == 0) SendClientMessage(playerid,COLOR_WHITE,"No hay ningun reporte");
    } else SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
}




dcmd_uconfig(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8)
	{
		UpdateConfig();
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return CMDMessageToPac0(playerid,"UCONFIG");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_botcheck(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
		for(new i=0; i<MAX_PLAYERS; i++) BotCheck(i);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return CMDMessageToPac0(playerid,"BOTCHECK");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_lockserver(playerid,params[]) {
		if(PlayerInfo[playerid][Level] >= 8 && IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/lockserver [password]");
    	new adminname[MAX_PLAYER_NAME];
		ServerInfo[Locked] = 1;
		strmid(ServerInfo[Password], params[0], 0, strlen(params[0]), 128);
		GetPlayerName(playerid, adminname, sizeof(adminname));
		format(string2, sizeof(string2), "STAFF \"%s\" ha bloqueado el servidor",adminname);
  		SendClientMessageToAll(red,"________________________________________");
  		SendClientMessageToAll(red," ");
		SendClientMessageToAll(red,string2);
		SendClientMessageToAll(red,"________________________________________");
		for(new i = 0; i <= MAX_PLAYERS; i++) if(IsPlayerConnected(i)) { PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][AllowedIn] = true; }
		CMDMessageToPac0(playerid,"LOCKSERVER");
		format(string2, sizeof(string2), "STAFF \"%s\" ha establecido la contraseña del servidor en '%s'",adminname, ServerInfo[Password] );
		return MessageToAdmins(COLOR_WHITE, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_unlockserver(playerid,params[]) {
    #pragma unused params
		if(PlayerInfo[playerid][Level] >= 8 && IsPlayerAdmin(playerid)) {
	    if(ServerInfo[Locked] == 1) {
	    	new adminname[MAX_PLAYER_NAME];
			ServerInfo[Locked] = 0;
			strmid(ServerInfo[Password], "", 0, strlen(""), 128);
			GetPlayerName(playerid, adminname, sizeof(adminname));
			format(string2, sizeof(string2), "STAFF \"%s\" ha desbloqueado el servidor",adminname);
  			SendClientMessageToAll(green,"________________________________________");
	  		SendClientMessageToAll(green," ");
			SendClientMessageToAll(green,string2);
			SendClientMessageToAll(green,"________________________________________");
			for(new i = 0; i <= MAX_PLAYERS; i++) if(IsPlayerConnected(i)) { PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][AllowedIn] = true; }
			return CMDMessageToPac0(playerid,"UNLOCKSERVER");
		} else return SendClientMessage(playerid,red,"El servidor no está bloqueado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

/*dcmd_password(playerid,params[]) {
	if(!strlen(params)) return SendClientMessage(playerid, red, "/password [password]");
	if(ServerInfo[Locked] == 1) {
	    if(PlayerInfo[playerid][AllowedIn] == false) {
			if(!strcmp(ServerInfo[Password],params[0],true)) {
				KillTimer( LockKickTimer[playerid] );
				PlayerInfo[playerid][AllowedIn] = true;
				SendClientMessage(playerid,COLOR_WHITE,"Ha ingresado con éxito la contraseña del servidor.");
				format(string2, sizeof(string2), "%s ha ingresado con éxito la contraseña del servidor",PlayerName2(playerid));
				return MessageToAdmins(COLOR_WHITE, string2);
			} else return SendClientMessage(playerid,red,"Contraseña de servidor incorrecta");
		} else return SendClientMessage(playerid,red,"Ya se ha autentificado");
	} else return SendClientMessage(playerid,red,"El servidor no está bloqueado");
}*/

dcmd_respawncars(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 4 ) {
 	for(new i; i != MAX_VEHICLES; i++) if(!EsVehiculoOcupado(i)) SetVehicleToRespawn(i);
	CMDMessageToPac0(playerid,"RESPAWNCARS");
	return SendClientMessage(playerid,red,"Servidor: Vehiculos Respawneados");
	} else return SendClientMessage(playerid,red,"No Tienes El Nivel Suficiente Para Usar Este Comando");
}

dcmd_pm(playerid,params[])
{
    new id;
    new mensage[256];
    new namax[MAX_PLAYERS];
    new namax2[MAX_PLAYERS];
	new idx, pid[256];
    pid = strtok(params, idx); mensage = strtok(params, idx);
    if(!strlen(pid) || !strlen(mensage)) return SendClientMessage(playerid,red,"Usage: /pm [ID] [mensaje]");
	id=strval(pid);
	
    if(id == playerid) return SendClientMessage(playerid, COLOR_RED, "No podes enviarte un mensaje a vos mismo.");

    if(ADpm[id] == 0)
    {
    if(IsPlayerConnected(id))
    {
    
    if(ServerInfo[AntiSwear] == 1 && PlayerInfo[playerid][Level] < 6)
	for(new s = 0; s < ForbiddenWordCount; s++)
    {
		new pos;
		while((pos = strfind(mensage,ForbiddenWords[s],true)) != -1) for(new i = pos, j = pos + strlen(ForbiddenWords[s]); i < j; i++) mensage[i] = '*';
	}
	
 	if(DetectarSpam(params[strlen(pid)+1]))
    {
    if(PlayerInfo[playerid][Level] == 0 && !IsPlayerAdmin(playerid))
	{
		GetPlayerName(playerid,string2,sizeof(string2));
        ShowPlayerDialog(playerid, 12, DIALOG_STYLE_MSGBOX, "{00FFFF}Anti Spam", "{FFFFFF}No hagas spam o seras {FF0000}Baneado", "Aceptar", "");
		format(string2,sizeof(string2),"[Servidor]: {FFFFFF}%s {FF0000}ID: {FFFFFF}[%i] {FF0000}Posible spam: %s",string2,playerid,mensage);
		MessageToAdmins(COLOR_WHITE,string2);
        return 1;
    }
    }
    
    GetPlayerName(playerid, namax, sizeof(namax));
    GetPlayerName(id, namax2, sizeof(namax2));
    format(string2, sizeof(string2), "PM %s(%d): %s", namax2, id, params[strlen(pid)+1]);
    SendClientMessage(playerid,COLOR_YELLOW, string2);
    format(string2, sizeof(string2), "PM %s(%d): %s", namax, playerid, params[strlen(pid)+1]);
    SendClientMessage(id,COLOR_YELLOW,string2);
 	PlayerPlaySound(id,1057,0.0,0.0,0.0);
    
    if(ServerInfo[ReadPMs] == 1 && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel])
	{
		format(string2, sizeof(string2), "PM: %s(%d) a %s(%d): %s", namax, playerid, namax2, id, params[strlen(pid)+1]);
  		for (new a = 0; a < MAX_PLAYERS; a++)
		if(IsPlayerConnected(a) && (PlayerInfo[a][Level] == 8) && a != playerid)
		SendClientMessage(a, COLOR_RED, string2);
	}
    
    }
    else SendClientMessage(playerid, COLOR_RED, "Este jugador no esta conectado.");
    }
    else SendClientMessage(playerid, COLOR_RED, "Este jugador tiene los mensajes privados desactivados.");
 	return 1;
}

//------------------------------------------------------------------------------
dcmd_forbidname(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
		if(!strlen(params)) return SendClientMessage(playerid, red, "/forbidname [nickname]");
		new File:BLfile, string[128];
		BLfile = fopen("ladmin/config/ForbiddenNames.cfg",io_append);
		format(string,sizeof(string),"%s\r\n",params[1]);
		fwrite(BLfile,string);
		fclose(BLfile);
		UpdateConfig();
		CMDMessageToPac0(playerid,"FORBIDNAME");
		format(string, sizeof(string), "STAFF \"%s\" has added the name \"%s\" to the forbidden name list", pName(playerid), params );
		return MessageToAdmins(green,string);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_forbidword(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
		if(!strlen(params)) return SendClientMessage(playerid, red, "/forbidword [word]");
		new File:BLfile, string[128];
		BLfile = fopen("ladmin/config/ForbiddenWords.cfg",io_append);
		format(string,sizeof(string),"%s\r\n",params[1]);
		fwrite(BLfile,string);
		fclose(BLfile);
		UpdateConfig();
		CMDMessageToPac0(playerid,"FORBIDWORD");
		format(string, sizeof(string), "STAFF \"%s\" has added the word \"%s\" to the forbidden word list", pName(playerid), params );
		return MessageToAdmins(green,string);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}


//==========================[ Spectate Commands ]===============================
#if defined ENABLE_SPEC

dcmd_spec(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params) || !IsNumeric(params)) return SendClientMessage(playerid, red, "/spec [playerid]");
		new specplayerid = strval(params);
		if(PlayerInfo[specplayerid][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(specplayerid) && specplayerid != INVALID_PLAYER_ID) {
			if(specplayerid == playerid) return SendClientMessage(playerid, red, "No puedes spectearte a ti mismo.");
			if(GetPlayerState(specplayerid) == PLAYER_STATE_SPECTATING && PlayerInfo[specplayerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "Spectate: el jugador esta viendo a otra persona.");
			if(GetPlayerState(specplayerid) != 1 && GetPlayerState(specplayerid) != 2 && GetPlayerState(specplayerid) != 3) return SendClientMessage(playerid, red, "Spectate: el jugador no spawneo.");
			if( (PlayerInfo[specplayerid][Level] != ServerInfo[MaxAdminLevel]) || (PlayerInfo[specplayerid][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] == ServerInfo[MaxAdminLevel]) )	{
				StartSpectate(playerid, specplayerid);
				CMDMessageToPac0(playerid,"spec");
				SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));
				SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(specplayerid));
				GetPlayerPos(playerid,Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]);
				GetPlayerFacingAngle(playerid,Pos[playerid][3]);
				return SendClientMessage(playerid,blue,"Estas especteando.");
			} else return SendClientMessage(playerid,red,"No puedes espectar a un alto nivel.");
		} else return SendClientMessage(playerid,red,"Jugador no conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}
//DEBES SER HUMANO




dcmd_notificar(playerid, params[])
{
    if(PlayerInfo[playerid][Level] < 2) return SendClientMessage(playerid, red, "No tienes permisos para usar este comando.");

    if(!strlen(params) || !IsNumeric(params)) return SendClientMessage(playerid, red, "/notificar [ID de jugador]");
    new suspectid = strval(params);

    // Verificar que el jugador sospechoso existe y está conectado
    if(IsPlayerConnected(suspectid))
    {
        // Enviar el TextDraw al jugador sospechoso
		SendClientMessage(suspectid, COLOR_RED,"Sistema: Un administrador te ha declarado como sospechoso. Tienes 5 minutos para ponerte a grabar y poder defenderte en un ticket futuro.");
        ShowPlayerDialog(suspectid, DIALOG_NOTIFICACION, DIALOG_STYLE_MSGBOX, "Sistema", "Un administrador te ha declarado como sospechoso. Tienes 5 minutos para ponerte a grabar y poder defenderte en un ticket futuro.", "Aceptar", "");
		
		PlayerPlaySound(suspectid,1057,0.0,0.0,0.0);
		PlayerPlaySound(suspectid,1057,0.0,0.0,0.0);
		PlayerPlaySound(suspectid,1057,0.0,0.0,0.0);
		PlayerPlaySound(suspectid,1057,0.0,0.0,0.0);
		PlayerPlaySound(suspectid,1057,0.0,0.0,0.0);


        return SendClientMessage(playerid, green, "Mensaje enviado al jugador sospechoso.");
    }
    else
    {
        return SendClientMessage(playerid, red, "El jugador especificado no está conectado.");
    }
}


dcmd_observar(playerid, params[])
{
    if(!strlen(params) || !IsNumeric(params)) return SendClientMessage(playerid, red, "/observar [playerid]");
    new specplayerid = strval(params);
    if(PlayerInfo[specplayerid][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
    if(IsPlayerConnected(specplayerid) && specplayerid != INVALID_PLAYER_ID) {
        if(EstaEnEvento[specplayerid] == false) return SendClientMessage(playerid, red, "Este jugador no esta en un evento.");
        if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true) return SendClientMessage(playerid, red, "Estas dentro de un evento , no puedes observar.");
        if(specplayerid == playerid) return SendClientMessage(playerid, red, "No puedes observarte a ti mismo.");
        if(GetPlayerState(specplayerid) != PLAYER_STATE_ONFOOT && GetPlayerState(specplayerid) != PLAYER_STATE_DRIVER && GetPlayerState(specplayerid) != PLAYER_STATE_PASSENGER) return SendClientMessage(playerid, red, "Observar: el jugador no ha aparecido.");

        // Buscar un espacio vacío en la lista de observadores para este jugador
        new freeSlot = -1;
        for(new i = 0; i < MAX_OBSERVERS; i++)
        {
            if(Observando[specplayerid][i] == INVALID_PLAYER_ID)
            {
                freeSlot = i;
                break;
            }
        }

        if(freeSlot == -1) return SendClientMessage(playerid, red, "Este jugador ya está siendo observado por el máximo de observadores.");

        // Agregar al jugador actual a la lista de observadores de specplayerid
        Observando[specplayerid][freeSlot] = playerid;

        StartSpectate(playerid, specplayerid);
        CMDMessageToPac0(playerid,"spec");
        SetPlayerInterior(playerid, GetPlayerInterior(specplayerid));
        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specplayerid));
        GetPlayerPos(playerid, Pos[playerid][0], Pos[playerid][1], Pos[playerid][2]);
        GetPlayerFacingAngle(playerid, Pos[playerid][3]);
        return SendClientMessage(playerid, blue, "Estas especteando.");
    } else {
        return SendClientMessage(playerid, red, "Jugador no conectado");
    }
}


dcmd_specvehicle(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/specvehicle [vehicleid]");
		new specvehicleid = strval(params);
		if(specvehicleid < MAX_VEHICLES) {
			TogglePlayerSpectating(playerid, 1);
			PlayerSpectateVehicle(playerid, specvehicleid);
			PlayerInfo[playerid][SpecID] = specvehicleid;
			PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
			CMDMessageToPac0(playerid,"SPEC VEHICLE");
			GetPlayerPos(playerid,Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]);
			GetPlayerFacingAngle(playerid,Pos[playerid][3]);
			return SendClientMessage(playerid,blue,"Estas especteando.");
		} else return SendClientMessage(playerid,red, "Vehiculo invalido.");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}
/*dcmd_specoff(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
        if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) {
			StopSpectate(playerid);
			return SendClientMessage(playerid,blue,"No Longer Spectating");
		} else return SendClientMessage(playerid,red,"You are not spectating");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}
*/
dcmd_specoff(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
        if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) {
			StopSpectate(playerid);
			SetTimerEx("PosAfterSpec",3000,0,"d",playerid);
			CMDMessageToPac0(playerid,"specOFF");
			
			return SendClientMessage(playerid,red,"Ya paraste de spectear.");
		} else return SendClientMessage(playerid,red,"{FFFFFF}No estas espiando.");
	} else return SendClientMessage(playerid,red,"{FFFFFF}Necesitas ser administrador con el nivel que requiere este comando.");
}
dcmd_dobservar(playerid,params[]) {
	#pragma unused params
    //if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
        if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) {
			StopSpectate(playerid);
			SetTimerEx("PosAfterSpec",3000,0,"d",playerid);
			CMDMessageToPac0(playerid,"dobservar");
			return SendClientMessage(playerid,red,"Ya paraste de observar.");
		} else return SendClientMessage(playerid,red,"{FFFFFF}No estas observando.");
	//} else return SendClientMessage(playerid,red,"{FFFFFF}Necesitas ser administrador con el nivel que requiere este comando.");
}
#endif

//==========================[ CHAT COMMANDS ]===================================

dcmd_disablechat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
		CMDMessageToPac0(playerid,"DISABLECHAT");
		if(ServerInfo[DisableChat] == 0) {
			ServerInfo[DisableChat] = 1;
			format(string2,sizeof(string2),"STAFF \"%s\" apago el chat.", pName(playerid) );
		} else {
			ServerInfo[DisableChat] = 0;
			format(string2,sizeof(string2),"STAFF \"%s\" prendio el chat.", pName(playerid) );
		} return SendClientMessageToAll(red,string2);
 	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_clearchat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 2) {
		CMDMessageToPac0(playerid,"CLEARCHAT");
		for(new i = 0; i < 11; i++) SendClientMessageToAll(green," "); return 1;
 	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_clearallchat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
		CMDMessageToPac0(playerid,"CLEARALLCHAT");
		for(new i = 0; i < 100; i++) SendClientMessageToAll(green," "); return 1;
 	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

/*dcmd_caps(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 6) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || IsNumeric(tmp2)) return SendClientMessage(playerid, red, "/caps [playerid] [\"on\" / \"off\"]");
		new player1 = strval(tmp);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			if(strcmp(tmp2,"on",true) == 0)	{
				CMDMessageToPac0(playerid,"CAPS");
				PlayerInfo[player1][Caps] = 0;
				if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" te ha permitido usar mayúsculas en el chat", pName(playerid) ); SendClientMessage(playerid,red,string2); }
				format(string2,sizeof(string2),"You have allowed \"%s\" to use capitals in chat", pName(player1) ); return SendClientMessage(playerid,red,string2);
			} else if(strcmp(tmp2,"off",true) == 0)	{
				CMDMessageToPac0(playerid,"CAPS");
				PlayerInfo[player1][Caps] = 1;
				if(player1 != playerid) { format(string2,sizeof(string2),"STAFF \"%s\" has prevented you from using capitals in chat", pName(playerid) ); SendClientMessage(playerid,red,string2); }
				format(string2,sizeof(string2),"You have prevented \"%s\" from using capitals in chat", pName(player1) ); return SendClientMessage(playerid,red,string2);
			} else return SendClientMessage(playerid, red, "/caps [playerid] [\"on\" / \"off\"]");
	    } else return SendClientMessage(playerid,red,"El Jugador No Esta Conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}*/

//==================[ Object & Pickup ]=========================================
dcmd_pickup(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8 && IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"USAGE: /pickup [pickup id]");
	    new pickup = strval(params), Float:x, Float:y, Float:z, Float:a;
	    CMDMessageToPac0(playerid,"PICKUP");
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
		x += (3 * floatsin(-a, degrees));
		y += (3 * floatcos(-a, degrees));
		CreatePickup(pickup, 2, x+2, y, z);
		format(string2, sizeof(string2), "CreatePickup(%d, 2, %0.2f, %0.2f, %0.2f);", pickup, x+2, y, z);
       	SaveToFile("Pickups",string2);
		return SendClientMessage(playerid,red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando. (6 y Rcon)");
}

dcmd_objeto(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8 && IsPlayerAdmin(playerid)) {
	    if(!strlen(params)) return SendClientMessage(playerid,red,"USAGE: /object [object id]");
	    new object = strval(params), Float:x, Float:y, Float:z, Float:a;
	    CMDMessageToPac0(playerid,"OBJECT");
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
		x += (3 * floatsin(-a, degrees));
		y += (3 * floatcos(-a, degrees));
	CreateDynamicObject(object, x, y, z, 0.0, 0.0, a);
		format(string2, sizeof(string2), "CreateDynamicObject(%d, %0.2f, %0.2f, %0.2f, 0.00, 0.00, %0.2f);", object, x, y, z, a);
       	SaveToFile("Objects",string2);
		format(string2, sizeof(string2), "You Have Created Object %d, at %0.2f, %0.2f, %0.2f Angle %0.2f", object, x, y, z, a);
		return SendClientMessage(playerid,red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando. (6 y Rcon)");
}

//===================[ Move ]===================================================





//===================[ Fake ]===================================================

#if defined ENABLE_FAKE_CMDS
dcmd_fakedeath(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256],   Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2) || !strlen(tmp3)) return SendClientMessage(playerid, red, "/fakedeath [killer] [killee] [weapon]");
		new killer = strval(tmp), killee = strval(tmp2), weap = strval(tmp3);
		if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"Invalid Weapon ID");
		if(PlayerInfo[killer][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
		if(PlayerInfo[killee][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");

        if(IsPlayerConnected(killer) && killer != INVALID_PLAYER_ID) {
	        if(IsPlayerConnected(killee) && killee != INVALID_PLAYER_ID) {
	    	  	CMDMessageToPac0(playerid,"FAKEDEATH");
				SendDeathMessage(killer,killee,weap);
				return SendClientMessage(playerid,blue,"Fake death message sent");
		    } else return SendClientMessage(playerid,red,"Killee is not connected");
	    } else return SendClientMessage(playerid,red,"Killer is not connected");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_fakechat(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "/fakechat [playerid] [text]");
		new player1 = strval(tmp);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToPac0(playerid,"FAKECHAT");
			SendPlayerMessageToAll(player1, params[strlen(tmp)+1]);
			return SendClientMessage(playerid,blue,"Fake message sent");
	    } else return SendClientMessage(playerid,red,"El Jugador No Esta Conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_fakecmd(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "/fakecmd [playerid] [command]");
		new player1 = strval(tmp);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"No puedes usar este comando.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToPac0(playerid,"FAKECMD");
	        CallRemoteFunction("OnPlayerCommandText", "is", player1, tmp2);
			return SendClientMessage(playerid,blue,"Fake command sent");
	    } else return SendClientMessage(playerid,red,"El Jugador No Esta Conectado");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}
#endif

//----------------------------------------------------------------------------//
// 		             	/all Commands                                         //
//----------------------------------------------------------------------------//

//------------------------------------------------------------------------------
#if defined USE_ALL_CMDS

dcmd_spawnall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6) {
		CMDMessageToPac0(playerid,"SPAWNAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerPos(i, 0.0, 0.0, 0.0); SpawnPlayer(i);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" spawneo a todos los jugadores", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_muteall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
		CMDMessageToPac0(playerid,"MUTEALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][Muted] = 1; PlayerInfo[i][MuteWarnings] = 0;
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has muted all players", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_unmuteall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
		CMDMessageToPac0(playerid,"UNMUTEAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][Muted] = 0; PlayerInfo[i][MuteWarnings] = 0;
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has unmuted all players", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

/*dcmd_getall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6) {
		CMDMessageToPac0(playerid,"GETAll");
		new Float:x,Float:y,Float:z, interior = GetPlayerInterior(playerid);
    	GetPlayerPos(playerid,x,y,z);
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerPos(i,x+(playerid/4)+1,y+(playerid/4),z); SetPlayerInterior(i,interior);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has teleported all players", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}*/

dcmd_healall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6) {
		CMDMessageToPac0(playerid,"HEALALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerHealth(i,100.0);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has healed all players", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_armourall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6) {
		CMDMessageToPac0(playerid,"ARMOURALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerArmour(i,100.0);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has restored all players armour", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_healarmour(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
	new Float:x, Float:y, Float:z;
  	GetPlayerPos(playerid, x, y, z);
		CMDMessageToPac0(playerid,"HEALARMOUR");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
			if(IsPlayerInRangeOfPoint(i,50, x, y, z)){
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerArmour(i,100.0);
			 	SetPlayerHealth(i,100.0);
			 	ELOY9N_ResetPlayerWeapons(i);
				}
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" Restauro Vida y Chaleco ", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_killall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
		CMDMessageToPac0(playerid,"KILLALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerHealth(i,0.0);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has killed all players", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}
#endif

//=============================================VIP CMD============================
/*	dcmd_bici(playerid,params[]) {
    #pragma unused params
        if(PlayerInfo[playerid][pVip] >= 2)
        {
        if(SaltosBici[playerid] > 0)
                {
                		CMDMessageToVip(playerid,"BICI");
                        SaltosBici[playerid] = 0;
                        SendClientMessage(playerid,COLOR_RED,"Super saltos en bici desactivado.");
                }
                else
                {
                        CMDMessageToVip(playerid,"BICI");
                        SaltosBici[playerid] = 1;
                        SendClientMessage(playerid,COLOR_RED,"Super saltos en bici activado. Usa /bici para desactivarlo.");
                }
                }
                else {
                SendClientMessage(playerid,COLOR_RED,"Usted No Es Un Player Gold o Premium.");
                }
        return 1;
        }

	dcmd_auto(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 4)
	{
	if(SaltosAuto[playerid] > 0)
	{
	SaltosAuto[playerid] = 0;
	SendClientMessage(playerid,COLOR_RED,"saltos en Auto desactivado.");
 	CMDMessageToVip(playerid,"AUTO");
	}
	else
	{
	SaltosAuto[playerid] = 1;
	SendClientMessage(playerid,COLOR_RED,"saltos en Auto activado. Usa /Auto para desactivarlo.");
 	CMDMessageToVip(playerid,"AUTO");
	}
	}
	else {
	SendClientMessage(playerid,COLOR_RED,"Usted No Es Un Player Platinum.");
	}
	return 1;
	}



dcmd_vida(playerid,params[]) {
    #pragma unused params
        if (UsarCMD[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
        if(PlayerInfo[playerid][pVip] >= 3)
        {
        SetPlayerHealth(playerid,100);
        SendClientMessage(playerid,COLOR_RED,"Se Restauro Vida.");
        SendClientMessage(playerid,COLOR_RED,"Ahora debes esperar 5 minutos para usar otro comando Premium.");
        UsarCMD[playerid] = 1;
        SetTimerEx("Listo", 300000, false, "i", playerid);
        CMDMessageToVip(playerid,"VIDA");
        }
        else {
        SendClientMessage(playerid,COLOR_RED,"Usted No Es Un Player Premium.");
        }
		return 1;
		}*/

/*	dcmd_bomberman(playerid,params[]) {
    #pragma unused params
        if (UsarCMD[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
        if(PlayerInfo[playerid][VIP_TIENE] >= 5)
        {
        SetPlayerHealth(playerid,100);
        SendClientMessage(playerid,COLOR_RED,"Preparate Para Morir");
        SendClientMessage(playerid,COLOR_RED,"Ahora debes esperar 5 minutos para usar otro comando Extremo.");
        UsarCMD[playerid] = 1;
        SetTimerEx("Listo", 300000, false, "i", playerid);
        CMDMessageToVip(playerid,"BOMBERMAN");
       	new Float:x, Float:y, Float:z;
  		GetPlayerPos(playerid, x, y, z);
  		SetPlayerHealth(playerid,0);

		for(new a=0;a<20;a++)
        {
       	CreateExplosion(x,y,z, 6, 20.0);
        }
        }

        else
		{
        SendClientMessage(playerid,COLOR_RED,"Usted No Es Un Player Extremo.");
        }
		return 1;
		}

dcmd_nuclear(playerid,params[]) {
    #pragma unused params
        if (YaUsoNuclear[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Ya Has Usado Este Comando, Solo Se Permite 1 Vez!");
        if(PlayerInfo[playerid][pVip] >= 5)
        {
        YaUsoNuclear[playerid]=1;
        SendClientMessage(playerid,COLOR_RED,"Suicida Plantaste Una Bomba Nuclear En EL Servidor!");
        CMDMessageToVip(playerid,"NUCLEAR");
        format(string2,sizeof(string2),"~n~~n~~n~~n~~n~~p~%s Planto Una Bomba En El Servidor, Tienen 60 Segundos~n~Para Buscarlo y Matarlo o Si No Moriran Todos!",PlayerName2(playerid));
		GameTextForAll(string2,6000,4);
        SetTimerEx("Bomba", 60000, false, "i", playerid);
        BuscadoPorNuclear[playerid]=1;
        }
        else
		{
        SendClientMessage(playerid,COLOR_RED,"Usted No Es Un Player Extremo.");
        }
		return 1;
		}

dcmd_chaleco(playerid,params[]) {
    #pragma unused params
        if (UsarCMD[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
        if(PlayerInfo[playerid][pVip] >= 3)
        {
        SetPlayerArmour(playerid,100);
        SendClientMessage(playerid,COLOR_RED,"Se Restauro Armadura.");
        SendClientMessage(playerid,COLOR_RED,"Ahora debes esperar 5 minutos para usar otro comando Premium.");
		UsarCMD[playerid] = 1;
        SetTimerEx("Listo", 300000, false, "i", playerid);
        CMDMessageToVip(playerid,"CHALECO");
        }
        else {
        SendClientMessage(playerid,COLOR_RED,"Usted No Es Un Player Premium.");
        }
		return 1;
		}

dcmd_jetpack1(playerid,params[]) {
    #pragma unused params
        if (UsarCMD[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
        if(PlayerInfo[playerid][pVip] >= 3)
        {
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
        SendClientMessage(playerid,COLOR_RED,"Ahora debes esperar 5 minutos para usar otro comando Premium.");
        UsarCMD[playerid] = 1;
        SetTimerEx("Listo", 300000, false, "i", playerid);
        CMDMessageToVip(playerid,"JETPACK1");
        }
        else {
        SendClientMessage(playerid,COLOR_RED,"Usted No Es Un Player Premium.");
        }
		return 1;
		}

dcmd_invisible(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 1)
	{
		if(PlayerInfo[playerid][Hide] == 0)
		{
		    iColor = GetPlayerColor(playerid);
			SetPlayerColor(playerid, 0xFFFFFF00);
			for(new i; i < GetMaxPlayers(); i++) ShowPlayerNameTagForPlayer(i, playerid, false);  //quita el tag
   			GameTextPlayer(playerid, "~n~~n~~n~~n~~g~Invisible!",2500,3);
   			PlayerInfo[playerid][Hide] = 1;
   			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
   			{
   	    		new int1 = GetPlayerInterior(playerid);
   	    		LinkVehicleToInterior(GetPlayerVehicleID(playerid),int1+1);
    		}
    		return 1;
		}
		else return SendClientMessage(playerid, red,"Tu Ya Estas Invisible!");
	}
	else return  SendClientMessage(playerid,red,"Tu No Eres Player Gold");
}


dcmd_visible(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 1)
	{
		if(PlayerInfo[playerid][Hide] == 1)
		{
			SetPlayerColor(playerid, iColor);
			for(new i; i < GetMaxPlayers(); i++) ShowPlayerNameTagForPlayer(i, playerid, true);  //regresa el tag
   			GameTextPlayer(playerid, "~n~~n~~n~~n~~b~Visible!",2500,3);
   			PlayerInfo[playerid][Hide] = 0;
   			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
   			{
   	    		new int1 = GetPlayerInterior(playerid);
   	    		LinkVehicleToInterior(GetPlayerVehicleID(playerid),int1);
   			}
   			return 1;
		}
		else return SendClientMessage(playerid, red,"Tu Ya Estas Visible!");
	}
	else return  SendClientMessage(playerid,red,"Tu No Eres Player Gold");
}

dcmd_autostun(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 1)
	{
	    ShowPlayerDialog(playerid, AutosTuning, DIALOG_STYLE_LIST, "Autos Tuneados para vip", "Auto 1\nAuto 2\nAuto 3\nAuto 4\nAuto 5\nAuto 6\nAuto 7\nAuto 8\nAuto 9\nAuto 10\nAuto 11\nAuto 12\nAuto 13", "Seleccionar","Cancelar");
	} else SendClientMessage(playerid, red,"Tu No Eres Player Gold");
	return 1;
}

dcmd_autosrc(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][pVip] >= 1)
	{
	    ShowPlayerDialog(playerid, AutosRC, DIALOG_STYLE_LIST, "Autos RC para vip", "Bandit\nRaider\nGoblin\nTiger\nCam", "Seleccionar","Cancelar");
	} else SendClientMessage(playerid, red,"Tu No Eres Player Gold");
	return 1;
}*/
/*dcmd_jetpack1(playerid,params[]) {
    #pragma unused params
        if (UsarCMD[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Debes Esperar 5 Minutos Para Volver A Usar Este Comando !");
        if(PlayerInfo[playerid][VIP_TIENE] >= 3)
        {
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
        SendClientMessage(playerid,COLOR_RED,"Ahora debes esperar 5 minutos para usar otro comando Premium.");
        UsarCMD[playerid] = 1;
        SetTimerEx("Listo", 300000, false, "i", playerid);
        CMDMessageToVip(playerid,"JETPACK1");
        }
        else {
        SendClientMessage(playerid,COLOR_RED,"Usted No Es Un Player Premium.");
        }
		return 1;
		}*/
//------------------------------------------------------------------------------------

#if defined USE_ALL_CMDS

dcmd_freezeall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6) {
		CMDMessageToPac0(playerid,"FREEZEALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(playerid,false); PlayerInfo[i][Frozen] = 1;
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" todos los jugadores fueron congelados", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_unfreezeall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6) {
		CMDMessageToPac0(playerid,"UNFREEZEALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(playerid,true); PlayerInfo[i][Frozen] = 0;
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" todos los jugadores fueron descongelados", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_kickall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
		CMDMessageToPac0(playerid,"KICKALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); Kick(i);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" fueron expulsado todos los jugadores", pName(playerid) );
		SaveToFile("KickLog",string2);
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_slapall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6) {
		CMDMessageToPac0(playerid,"SLAPALL");
		new Float:x, Float:y, Float:z;
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1190,0.0,0.0,0.0); GetPlayerPos(i,x,y,z);	SetPlayerPos(i,x,y,z+4);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" le dio un cachetazo a todos los jugadores", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_explodeall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6) {
		CMDMessageToPac0(playerid,"EXPLODEALL");
		new Float:x, Float:y, Float:z;
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1190,0.0,0.0,0.0); GetPlayerPos(i,x,y,z);	CreateExplosion(x, y , z, 7, 10.0);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" Exploto a todos los jugadores", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_disarmall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
		CMDMessageToPac0(playerid,"DISARMALL");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); ELOY9N_ResetPlayerWeapons(i);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has disarmed all players", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_ejectall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
    	CMDMessageToPac0(playerid,"EJECTALL");
        new Float:x, Float:y, Float:z;
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
			    if(IsPlayerInAnyVehicle(i)) {
					PlayerPlaySound(i,1057,0.0,0.0,0.0); GetPlayerPos(i,x,y,z); SetPlayerPos(i,x,y,z+3);
				}
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has ejected all players", pName(playerid) );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

//-------------==== Set All Commands ====-------------//

dcmd_setallskin(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/setallskin [skinid]");
		new var = strval(params);
	//	if(!IsValidSkin(var)) return SendClientMessage(playerid, red, "Invaild Skin ID");
       	CMDMessageToPac0(playerid,"SETALLSKIN");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerSkin(i,var);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has set all players skin to '%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setallwanted(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/setallwanted [wanted level]");
		new var = strval(params);
       	CMDMessageToPac0(playerid,"SETALLWANTED");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerWantedLevel(i,var);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has set all players wanted level to '%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setallweather(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 6) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/setallweather [weather ID]");
		new var = strval(params);
       	CMDMessageToPac0(playerid,"SETALLWEATHER");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerWeather(i, var);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" cambio el clima a '%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setalltime(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 6) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/setalltime [hora]");
		new var = strval(params);
		if(var > 24) return SendClientMessage(playerid, red, "hora no valida");
       	CMDMessageToPac0(playerid,"SETALLTIME");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetWorldTime(var);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" cambio el clima de todos los jugadores '%d:00'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

dcmd_setallworld(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 6) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/setallworld [virtual world]");
		new var = strval(params);
       	CMDMessageToPac0(playerid,"SETALLWORLD");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerVirtualWorld(i,var);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" cambio el Virtual World de todos los jugadores a '%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

/*dcmd_setallscore(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 6) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/setallscore [score]");
		new var = strval(params);
       	CMDMessageToPac0(playerid,"SETALLSCORE");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerScore(i,var);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has set all players scores to '%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}*/

/*dcmd_setallcash(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 6) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/setallcash [Amount]");
		new var = strval(params);
       	CMDMessageToPac0(playerid,"SETALLCASH");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				ELOY9N_ResetMoney(i);
				ELOY9N_GivePlayerMoney(i,var);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" has set all players cash to '$%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}*/

dcmd_dm(playerid,params[]){
#pragma unused params 

	SendClientMessage(playerid,green,"Comando desactivado");
return 1;
}
dcmd_salirdm(playerid,params[]){
#pragma unused params
if(EstaEnDesmadre[playerid] == true) 
{
new rand = random(sizeof(RandomSpawnsHumano));
EstaEnDesmadre[playerid] = false;
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{00FF7C}%s salio de la sala {FF0000}deathmatch {FFFFFF}/dm.",Nombre);
//return SendClientMessageToAll(COLOR_WHITE,string2);	
SendClientMessageToAll(COLOR_WHITE,string2);	
SetPlayerPos(playerid, RandomSpawnsHumano[rand][0], RandomSpawnsHumano[rand][1], RandomSpawnsHumano[rand][2]);
SetPlayerInterior(playerid,0);
SetPlayerArmour(playerid,0);
SetPlayerVirtualWorld(playerid,0);
ELOY9N_ResetPlayerWeapons(playerid);
g_RadarInvisible[playerid] = 0;
ELOY9N_GivePlayerWeapon(playerid,24,30);
ELOY9N_GivePlayerWeapon(playerid,25,5);
ELOY9N_GivePlayerWeapon(playerid,31,150);
//} else SendClientMessage(playerid,red,"No estas en la sala DM.") 
}
if(EstaEnDesmadre[playerid] == false) 
{
SendClientMessage(green,red,"No estas dentro de la sala DM.");
}
return 1;
}
///EVENTOS
dcmd_evento(playerid,params[]) {
#pragma unused params
		if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado.");
		if(Event[Trancado]) return SendClientMessage(playerid, red, "Evento cerrado.");
		if(EstaEnEvento[playerid]) return SendClientMessage(playerid, red, "Ya estás en el evento.");
		if(EstaEnDesmadre[playerid] == true) return SendClientMessage(playerid, red, "No puedes unirte a un evento si estas en una sala dm.");
		if(InfeccionEnprogreso[playerid] == 1) return SendClientMessage(playerid, red, "Estas infectado no podes ingresar en ese estado al evento.");
		SendClientMessage(playerid,green,"Utiliza el comando /ignorar para dejar de escuchar cualquier sonido o canción del servidor");
        EstaEnEvento[playerid] = true;
        
		if(Event[Oceanside] == true)
        {
		gTeam[playerid] = TEAM_NOCLAN;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
	  new rand = random(sizeof(RandomSpawnsOcean));

	  SetPlayerPos(playerid, RandomSpawnsOcean[rand][0], RandomSpawnsOcean[rand][1], RandomSpawnsOcean[rand][2]);
	  


		SetPlayerInterior(playerid,0);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);		
		SetPlayerVirtualWorld(playerid,55);
		//SendClientMessage(playerid, red, "Ingresaste al evento masacre en Oceanside.");
		//SendClientMessage(playerid, red, "Si queres salir usa /salirevento.");

		PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/fi/hv3czfjw8ft8r82sr54gg/Civilian_-sub-espa-ol-Wye-Oak.mp3?rlkey=27co5svh003mtijv8lbmdkmpp&st=oib0wazs&dl=0");
		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~masacre en Oceanside.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);



		if(PlayerInfo[playerid][CLAN_TIENE] == 0) return SetPlayerColor(playerid,COLOR_WHITE);
		if(PlayerInfo[playerid][CLAN_TIENE] == 1) return SetPlayerColor(playerid,color_SD);
		if(PlayerInfo[playerid][CLAN_TIENE] == 2) return SetPlayerColor(playerid,color_MID);
		if(PlayerInfo[playerid][CLAN_TIENE] == 3) return SetPlayerColor(playerid,color_SWO);
		if(PlayerInfo[playerid][CLAN_TIENE] == 4) return SetPlayerColor(playerid,color_GOD);
		if(PlayerInfo[playerid][CLAN_TIENE] == 5) return SetPlayerColor(playerid,color_og);



		return 1;
        }
	/*	if(Event[TDM] == true)
        {

		ELOY9N_ResetPlayerWeapons(playerid);

		Equipo[playerid] = RandomTDM[random(2)];
		gTeam[playerid] = Equipo[playerid];
		SetPlayerTeam(playerid, gTeam[playerid]);		 


		if(GetPlayerTeam(playerid) == TEAM_HUMANOS)
		{
		new rand3 = random(sizeof(RandomSpawnsTDMH));
		SetPlayerPos(playerid, RandomSpawnsTDMH[rand3][0], RandomSpawnsTDMH[rand3][1], RandomSpawnsTDMH[rand3][2]);
		if(g_RadarInvisible[playerid] == 0)
		{
		SetPlayerColor(playerid,CELESTE_ADMIN);
		}
		
		}
	    if (GetPlayerTeam(playerid) == TEAM_EXTERMINADOR2)		
		{
		new rand4 = random(sizeof(RandomSpawnsTDML));
		SetPlayerPos(playerid, RandomSpawnsTDML[rand4][0], RandomSpawnsTDML[rand4][1], RandomSpawnsTDML[rand4][2]);
		if(g_RadarInvisible[playerid] == 0)
		{
		SetPlayerColor(playerid,marron);
		}
		}	

		SetPlayerInterior(playerid,0);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);		
		SetPlayerVirtualWorld(playerid,24);

		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~TDM - Humanos vs Exterminadores.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);		

		return 1;
        }	*/

if (Event[TDM] == true)
{
    ELOY9N_ResetPlayerWeapons(playerid);

    // Contadores de jugadores en cada equipo
    new numHumanos = 0, numExterminadores = 0;
    
    // Contar jugadores en cada equipo
    for (new i = 0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i))
        {
            if (GetPlayerTeam(i) == TEAM_HUMANOS)
                numHumanos++;
            else if (GetPlayerTeam(i) == TEAM_EXTERMINADOR2)
                numExterminadores++;
        }
    }

    // Asignar al jugador al equipo con menos jugadores
    if (numHumanos <= numExterminadores)
    {
        Equipo[playerid] = TEAM_HUMANOS;
        gTeam[playerid] = TEAM_HUMANOS;
    }
    else
    {
        Equipo[playerid] = TEAM_EXTERMINADOR2;
        gTeam[playerid] = TEAM_EXTERMINADOR2;
    }

    SetPlayerTeam(playerid, gTeam[playerid]); 

    if (GetPlayerTeam(playerid) == TEAM_HUMANOS)
    {
        new rand3 = random(sizeof(RandomSpawnsTDMH));
        SetPlayerPos(playerid, RandomSpawnsTDMH[rand3][0], RandomSpawnsTDMH[rand3][1], RandomSpawnsTDMH[rand3][2]);
        if (g_RadarInvisible[playerid] == 0)
        {
            SetPlayerColor(playerid, CELESTE_ADMIN);
        }
    }
    else if (GetPlayerTeam(playerid) == TEAM_EXTERMINADOR2)		
    {
        new rand4 = random(sizeof(RandomSpawnsTDML));
        SetPlayerPos(playerid, RandomSpawnsTDML[rand4][0], RandomSpawnsTDML[rand4][1], RandomSpawnsTDML[rand4][2]);
        if (g_RadarInvisible[playerid] == 0)
        {
            SetPlayerColor(playerid, marron);
        }
    }	

    SetPlayerInterior(playerid, 0);
    SetPlayerArmour(playerid, 100);
    SetPlayerHealth(playerid, 100);		
    SetPlayerVirtualWorld(playerid, 24);

	PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/fi/k63iunbcp5e1iqjgaimt7/Resident-Evil-Afterlife-Soundtrack-The-Outsider-_Renholder-Apocalypse-Mix_.mp3?rlkey=9ssa0mol1zo7we8mbrdr86yba&st=m8gnwzyl&dl=0");
    ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~TDM - Humanos vs Exterminadores.");
    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
    ShowTDN(playerid, 20000, "Si quieres salir usa /salirevento.");
    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);		

    return 1;
}
if(Event[TDM2] == true)
{
    ELOY9N_ResetPlayerWeapons(playerid);

    // Contadores de jugadores en cada equipo
    new numHumanos = 0, numExterminadores = 0;
    
    // Contar jugadores en cada equipo
    for (new i = 0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i))
        {
            if (GetPlayerTeam(i) == TEAM_HUMANOS)
                numHumanos++;
            else if (GetPlayerTeam(i) == TEAM_EXTERMINADOR2)
                numExterminadores++;
        }
    }

    // Asignar al jugador al equipo con menos jugadores
    if (numHumanos <= numExterminadores)
    {
        Equipo[playerid] = TEAM_HUMANOS;
        gTeam[playerid] = TEAM_HUMANOS;
    }
    else
    {
        Equipo[playerid] = TEAM_EXTERMINADOR2;
        gTeam[playerid] = TEAM_EXTERMINADOR2;
    }

    SetPlayerTeam(playerid, gTeam[playerid]); 

    if (GetPlayerTeam(playerid) == TEAM_HUMANOS)
    {
        new rand3 = random(sizeof(RandomSpawnsTDM2H));
        SetPlayerPos(playerid, RandomSpawnsTDM2H[rand3][0], RandomSpawnsTDM2H[rand3][1], RandomSpawnsTDM2H[rand3][2]);
        if (g_RadarInvisible[playerid] == 0)
        {
            SetPlayerColor(playerid, CELESTE_ADMIN);
        }
    }
    else if (GetPlayerTeam(playerid) == TEAM_EXTERMINADOR2)		
    {
        new rand4 = random(sizeof(RandomSpawnsTDM2L));
        SetPlayerPos(playerid, RandomSpawnsTDM2L[rand4][0], RandomSpawnsTDM2L[rand4][1], RandomSpawnsTDM2L[rand4][2]);
        if (g_RadarInvisible[playerid] == 0)
        {
            SetPlayerColor(playerid, marron);
        }
    }	

    SetPlayerInterior(playerid, 0);
    SetPlayerArmour(playerid, 100);
    SetPlayerHealth(playerid, 100);		
    SetPlayerVirtualWorld(playerid, 24);

	PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/fi/k63iunbcp5e1iqjgaimt7/Resident-Evil-Afterlife-Soundtrack-The-Outsider-_Renholder-Apocalypse-Mix_.mp3?rlkey=9ssa0mol1zo7we8mbrdr86yba&st=m8gnwzyl&dl=0");
    ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~TDM - Humanos vs Exterminadores.");
    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
    ShowTDN(playerid, 20000, "Si quieres salir usa /salirevento.");
    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);		

    return 1;
}			

		if(Event[WoodBury] == true)
        {
		gTeam[playerid] = TEAM_NOCLAN2;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
	    new rand = random(sizeof(RandomSpawnsWoodBury));

	   SetPlayerPos(playerid, RandomSpawnsWoodBury[rand][0], RandomSpawnsWoodBury[rand][1], RandomSpawnsWoodBury[rand][2]);
		SetPlayerInterior(playerid,0);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);		
		SetPlayerVirtualWorld(playerid,46);

		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~MASACRE EN WOODBURY.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);		
		PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/fi/6ib9gis0adriv37c8dlcw/U2-The-Troubles-_Traducida-al-Espa-ol__TWD__Rick-Grimes-Video_.mp3?rlkey=04wu8he01jxlz2csfp139z490&st=5vmxs3cr&dl=0");


		if(PlayerInfo[playerid][CLAN_TIENE] == 0) return SetPlayerColor(playerid,CELESTE_ADMIN);
		if(PlayerInfo[playerid][CLAN_TIENE] == 1) return SetPlayerColor(playerid,CELESTE_ADMIN);
		if(PlayerInfo[playerid][CLAN_TIENE] == 2) return SetPlayerColor(playerid,CELESTE_ADMIN);
		if(PlayerInfo[playerid][CLAN_TIENE] == 3) return SetPlayerColor(playerid,CELESTE_ADMIN);
		if(PlayerInfo[playerid][CLAN_TIENE] == 4) return SetPlayerColor(playerid,CELESTE_ADMIN);
		if(PlayerInfo[playerid][CLAN_TIENE] == 5) return SetPlayerColor(playerid,CELESTE_ADMIN);
		return 1;
        }        
		if(Event[Escondidas] == true)
        {
		gTeam[playerid] = TEAM_NOCLAN2;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
	    

	   	SetPlayerPos(playerid, 2235.7468,1680.6305,1008.3594);
		SetPlayerInterior(playerid,1);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);		
		SetPlayerVirtualWorld(playerid,35);

		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~escondidas en el casino.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/fi/5p18qynm67ce8dc7q4cpf/Flyleaf-I_m-So-Sick-_Official-Music-Video_.mp3?rlkey=vhxixg4jo6y8zxh77oqxvhui8&st=duseyqmg&dl=0");	
		SetPlayerColor(playerid,COLOR_INVISIBLE);
		return 1;
        }
		if(Event[Masacre] == true)
		{
		gTeam[playerid] = TEAM_NOCLAN;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
        new rand = random(sizeof(RandomSpawnsMasacre));
        SetPlayerPos(playerid, RandomSpawnsMasacre[rand][0], RandomSpawnsMasacre[rand][1], RandomSpawnsMasacre[rand][2]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,45);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);
		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~Masacre en el desierto.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);	
		PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/fi/3x44ujr1ygtfqer0uea05/videoplayback-_9_.mp3?rlkey=xbswonujec7ziii7yr3kelu9o&st=clxbabci&dl=0");


		if(PlayerInfo[playerid][CLAN_TIENE] == 0) return SetPlayerColor(playerid,COLOR_WHITE);
		if(PlayerInfo[playerid][CLAN_TIENE] == 1) return SetPlayerColor(playerid,color_SD);
		if(PlayerInfo[playerid][CLAN_TIENE] == 2) return SetPlayerColor(playerid,color_MID);
		if(PlayerInfo[playerid][CLAN_TIENE] == 3) return SetPlayerColor(playerid,color_SWO);
		if(PlayerInfo[playerid][CLAN_TIENE] == 4) return SetPlayerColor(playerid,color_GOD);
		if(PlayerInfo[playerid][CLAN_TIENE] == 5) return SetPlayerColor(playerid,color_og);
		return 1;
		}
		if(Event[MasacreDocks] == true)
		{
		gTeam[playerid] = TEAM_NOCLAN2;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
        new rand = random(sizeof(RandomSpawnsMasacreDocks));
        SetPlayerPos(playerid, RandomSpawnsMasacreDocks[rand][0], RandomSpawnsMasacreDocks[rand][1], RandomSpawnsMasacreDocks[rand][2]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,48);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);


		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~Masacre en Ocean Docks.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/fi/3t7hz78xorxy6j0otnktu/Lee-DeWyze-_Blackbird-Song_-as-heard-on-The-Walking-Dead.mp3?rlkey=3osstrkqy7152z6n9p1dqesuw&st=lr1de8fc&dl=0");


		if(PlayerInfo[playerid][CLAN_TIENE] == 0) return SetPlayerColor(playerid,CELESTE_ADMIN);
		if(PlayerInfo[playerid][CLAN_TIENE] == 1) return SetPlayerColor(playerid,CELESTE_ADMIN);
		if(PlayerInfo[playerid][CLAN_TIENE] == 2) return SetPlayerColor(playerid,CELESTE_ADMIN);
		if(PlayerInfo[playerid][CLAN_TIENE] == 3) return SetPlayerColor(playerid,CELESTE_ADMIN);
		if(PlayerInfo[playerid][CLAN_TIENE] == 4) return SetPlayerColor(playerid,CELESTE_ADMIN);
		if(PlayerInfo[playerid][CLAN_TIENE] == 5) return SetPlayerColor(playerid,CELESTE_ADMIN);
		return 1;
		}	

		if(Event[EscapeAvion] == true)
		{
		gTeam[playerid] = TEAM_NOCLAN2;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,33);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);

		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~avion asesino.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/fi/qkhctje5mo7eydhd9vn7a/cancion-para-persecucion-graciosa.mp3?rlkey=878bp7rclsgd92l1ivglixqx2&st=s2y9ssl4&dl=0");

		SetPlayerPos(playerid,421.9713, 2530.4839, 16.3425);
		SetPlayerColor(playerid,AMARELO);
		return 1;
		}

		if(Event[PurgaLS] == true)
		{
        new rand = random(sizeof(ATTACHED_OBJECT_INDEX_MASK));
		SetPlayerAttachedObject(playerid, Masacara_OBJETO, ATTACHED_OBJECT_INDEX_MASK[rand][0], 2, 0.086, 0.043, -0.007, 86.100196, 91.500007, 0.0, 1.0, 1.0, 1.0);

		gTeam[playerid] = TEAM_NOCLAN2;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,33);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);
		SetPlayerTime(playerid,0,0);


		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~purga en Los Santos.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");

		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);	
		//PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/3lkr7l0br9xe3hq/Purga.mp3");
		SetPlayerPos(playerid,1479.4601, -1686.6536, 13.4345);
		if(g_RadarInvisible[playerid] == 0)
		{
		SetPlayerColor(playerid,red);
		}
		return 1;
		}	

		if(Event[Supervivencia] == true)
		{

		gTeam[playerid] = TEAM_SD;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,33);
		ELOY9N_GivePlayerWeapon(playerid, 24, 100); // Desert Eagle
        ELOY9N_GivePlayerWeapon(playerid, 29, 200); // MP5
        ELOY9N_GivePlayerWeapon(playerid, 30, 200); // AK47
        ELOY9N_GivePlayerWeapon(playerid, 34, 50);  // Sniper Rifle		
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);
		//SetPlayerTime(playerid,0,0);
		SetPlayerColor(playerid, color_SD);

		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~Supervivencia del nemesis.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");

		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);	
		//PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/3lkr7l0br9xe3hq/Purga.mp3");
		new rand = random(sizeof(Spawns_Supervivencia));
        SetPlayerPos(playerid, Spawns_Supervivencia[rand][0], Spawns_Supervivencia[rand][1], Spawns_Supervivencia[rand][2]);
		return 1;
		}

		if(Event[Royal_1] == true)
		{
		TogglePlayerControllable(playerid,false);
		gTeam[playerid] = NO_TEAM;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,33);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);
		//SetPlayerTime(playerid,0,0);
		SetPlayerColor(playerid, COLOR_RED);

		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~Royal Rumble.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");

		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);	
		PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/fi/qkhctje5mo7eydhd9vn7a/cancion-para-persecucion-graciosa.mp3?rlkey=878bp7rclsgd92l1ivglixqx2&st=s2y9ssl4&dl=0");
		new rand = random(sizeof(RandomSpawnsRoyal_1));
        SetPlayerPos(playerid, RandomSpawnsRoyal_1[rand][0], RandomSpawnsRoyal_1[rand][1], RandomSpawnsRoyal_1[rand][2]);
		TogglePlayerControllable(playerid,true);
	//	TogglePlayerControllable(playerid,false);
		return 1;
		}

		if(Event[Royal_2] == true)
		{
		TogglePlayerControllable(playerid,false);
		gTeam[playerid] = NO_TEAM;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,33);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);
		//SetPlayerTime(playerid,0,0);
		SetPlayerColor(playerid, COLOR_RED);

		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~Royal Rumble.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");

		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);	
		PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/fi/qkhctje5mo7eydhd9vn7a/cancion-para-persecucion-graciosa.mp3?rlkey=878bp7rclsgd92l1ivglixqx2&st=s2y9ssl4&dl=0");
		new rand = random(sizeof(RandomSpawnsRoyal_2));
        SetPlayerPos(playerid, RandomSpawnsRoyal_2[rand][0], RandomSpawnsRoyal_2[rand][1], RandomSpawnsRoyal_2[rand][2]);
		TogglePlayerControllable(playerid,true);
		//TogglePlayerControllable(playerid,false);
		return 1;
		}



		if(Event[HarryPotter] == true)
		{

	//	new attachedObj;
	//	attachedObj = CreateDynamicObject(19037, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	//	AttachObjectToPlayer(attachedObj, playerid, 0.0, 0.05, 0.1, 0.0, 0.0, 0.0);

      //  new rand = random(sizeof(ATTACHED_OBJECT_INDEX_MASK));
	//	SetPlayerAttachedObject(playerid, Masacara_OBJETO, ATTACHED_OBJECT_INDEX_MASK[rand][0], 2, 0.086, 0.043, -0.007, 86.100196, 91.500007, 0.0, 1.0, 1.0, 1.0);

		gTeam[playerid] = TEAM_NOCLAN2;
		SetPlayerTeam(playerid, gTeam[playerid]);
		ELOY9N_ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,66);

		SetPlayerArmour(playerid,100000);
		SetPlayerHealth(playerid,100000);
	//	SetPlayerTime(playerid,0,0);
		TogglePlayerControllable(playerid,false);

		ShowTDN(playerid, 20000, "Ingresaste al evento ~n~~r~sobrevive a Harry Potter.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);

		//PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/djwpihsej2l5vww/Harry%20Potter%20Cumbia.mp3");
	
		new rand = random(sizeof(RandomSpawnsHarry));
        SetPlayerPos(playerid, RandomSpawnsHarry[rand][0], RandomSpawnsHarry[rand][1], RandomSpawnsHarry[rand][2]);
		SetPlayerColor(playerid,red);
		return 1;
		}	

		if(Event[Personalizado] == true)
		{
		gTeam[playerid] = TEAM_EXTERMINADOR;
		SetPlayerTeam(playerid, gTeam[playerid]);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);		
		ELOY9N_ResetPlayerWeapons(playerid);
        SetPlayerPos(playerid, Event[X22]+1, Event[Y22], Event[Z22]+0.5);
		SetPlayerInterior(playerid, Event[Interior]);
		SetPlayerVirtualWorld(playerid, Event[VirtualWorld]);
		ShowTDN(playerid, 20000, "Ingresaste a un evento ~n~~r~personalizado.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		ShowTDN(playerid, 20000, "Si queres salir usa /salirevento.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);		
		return 1;
		}  
        return 1;      
}				
dcmd_cerrarevento(playerid,params[]) {
#pragma unused params
		if(PlayerInfo[playerid][Level] >= 4) {
		if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
		if(Event[Trancado]) return SendClientMessage(playerid, red, "El evento ya esta cerrado");
		Event[Trancado] = true;
	//	GetPlayerName(playerid, n, MAX_PLAYER_NAME);
		CMDMessageToPac0(playerid,"CERRAREVENTO");
	//	format(String, sizeof String, "{FF0000}STAFF {FFFFFF}%s {FFFFFF}cerro el {FFFFFF}ingreso para miembros que llegaron tarde.", n, Check());
	//	SendClientMessageToAll(red, String);
		GameTextAll("~w~EVENTO\n~b~CERRADO", 4000, 3);
     //   format(string2,sizeof(string2),"STAFF \"%s\" Cerro el evento", pName(playerid) );
	//	 SendClientMessageToAll(red, string2);
    for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
         SendClientMessage(i, red, "{FF0000}El STAFF Cerro el evento.");
            }
    }
	//	ELOY9N_GivePlayerWeapon(GetMaxPlayers, 24, 9999);
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}
dcmd_abrirevento(playerid,params[]) {
#pragma unused params
 		if(PlayerInfo[playerid][Level] >= 2) {
		if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado.");
		if(!Event[Trancado]) return SendClientMessage(playerid, red, "El evento no está cerrado.");
		CMDMessageToPac0(playerid,"ABRIREVENTO");
		Event[Trancado] = false;
		KillTimer(VariableEventoTimerIntermedio);
		KillTimer(VariableEventoTimer);
		VariableEventoTimerIntermedio = SetTimer("EventoTimerIntermedio", 20000, 1);
		SendClientMessage(playerid, red, "Usar este comando una sola vez para abrir un evento o se puede buguear.");

		
		SendClientMessage(playerid, red, "Abriste un evento.");
	if(Event[Masacre] == true)
	{
		GameTextAll("~w~MASACRE EN EL DESIERTO\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}
	if(Event[MasacreDocks] == true)
	{
		GameTextAll("~w~MASACRE EN OCEAN DOCKS\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[Oceanside] == true)
	{
		GameTextAll("~w~MASACRE EN OCENASIDE\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[WoodBury] == true)
	{
		GameTextAll("~w~MASACRE EN WOODBURY\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[Personalizado] == true)
	{
		GameTextAll("~w~EVENTO CUSTOMIZADO\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[Escondidas] == true)
	{
		GameTextAll("~w~ESCONDIDAS EN EL CASINO\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}
	if(Event[PurgaLS] == true)
	{
		GameTextAll("~w~PURGA EN LOS SANTOS\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
 		KillTimer(VariableEventoTimerIntermedio);
	}
	if(Event[Royal_1] == true)
	{
		GameTextAll("~w~ROYAL RUMBLE\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
 		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[Supervivencia] == true)
	{
		GameTextAll("~w~SUPERVIVENCIA DEL NEMESIS\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
 		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[Royal_2] == true)
	{
		GameTextAll("~w~ROYAL RUMBLE\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
 		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[HarryPotter] == true)
	{
		GameTextAll("~w~SOBREVIVE A HARRY POTTER\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
 		KillTimer(VariableEventoTimerIntermedio);
	}		
	if(Event[EscapeAvion] == true)
	{
		GameTextAll("~w~avion asesino\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}			
	if(Event[TDM] == true)
	{
		GameTextAll("~w~HUMANOS VS EXTERMINADORES - TDM\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}

	if(Event[TDM2] == true)
	{
		GameTextAll("~w~HUMANOS VS EXTERMINADORES - TDM\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}

        for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
        SendClientMessage(i, red, "{FF0000}La administración comenzo un evento.");
            }
        }
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}


dcmd_salirevento(playerid,params[]) {
#pragma unused params
		if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay ningun evento creado");
		if(!EstaEnEvento[playerid]) return SendClientMessage(playerid, red, "Usted no está en el evento!");

		ELOY9N_ResetPlayerWeapons(playerid);
		new rand = random(sizeof(RandomSpawnsHumano));
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerSkin(playerid, skinsh[random(213)]);
		gTeam[playerid] = NO_TEAM;
		StopAudioStreamForPlayer(playerid);
		SetPlayerHealth(playerid,100);
       SetPlayerArmour(playerid,0);
		RemovePlayerAttachedObject(playerid, Masacara_OBJETO);
		TogglePlayerControllable(playerid,true);
		g_RadarInvisible[playerid] = 0;
		SetPlayerTeam(playerid, gTeam[playerid]);
			ELOY9N_GivePlayerWeapon(playerid, 25, 20);  //escopeta
			ELOY9N_GivePlayerWeapon(playerid, 29, 114);   //mp5
			ELOY9N_GivePlayerWeapon(playerid, 24, 75);
			ELOY9N_GivePlayerWeapon(playerid, 31, 90);  //m4
			SetPlayerPos(playerid, RandomSpawnsHumano[rand][0], RandomSpawnsHumano[rand][1], RandomSpawnsHumano[rand][2]);			
			SetPlayerColor(playerid, 0x218C07FF);
		EstaEnEvento[playerid] = false;
		SendClientMessage(playerid, red, "Usted salió del Evento.");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(!EstaEnEvento[i]) continue;
   		}
   		return 1;
	}
dcmd_terminarevento(playerid,params[]) {
#pragma unused params
		 if(PlayerInfo[playerid][Level] >= 2) {
		if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado.");

		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(!EstaEnEvento[i]) continue;
  			new rand = random(sizeof(RandomSpawnsHumano));
			gTeam[i] = NO_TEAM;
			SetPlayerTeam(i, gTeam[i]);
			ELOY9N_ResetPlayerWeapons(i);
   			SetPlayerHealth(i,100);
			SetPlayerArmour(i,0);
            StopAudioStreamForPlayer(i);
			ELOY9N_GivePlayerWeapon(i, 25, 20);  //escopeta
			ELOY9N_GivePlayerWeapon(i, 29, 114);   //mp5
			ELOY9N_GivePlayerWeapon(i, 24, 200);
			g_RadarInvisible[i] = 0;
			ELOY9N_GivePlayerWeapon(i, 31, 100);  //m4
			SetPlayerPos(i, RandomSpawnsHumano[rand][0], RandomSpawnsHumano[rand][1], RandomSpawnsHumano[rand][2]);			
			SetPlayerColor(i, 0x218C07FF);
			SetPlayerInterior(i, 0);
			SetPlayerVirtualWorld(i, 0);
			//SetPlayerSkin(i, 285);
			TogglePlayerControllable(i,true);
			//SetPlayerSkin(i, skinsh[random(213)]);
			EstaEnEvento[i] = false;
		}		
		
		Event[Creado] = false;
        Event[Personalizado] = false;
        Event[Trancado] = false;
        Event[Masacre] = false;
		Event[Escondidas] = false;
		Event[TDM] = false;
		Event[TDM2] = false; 
		EstaEnEvento[playerid] = false;
		Event[Oceanside] = false;
		Event[MasacreDocks] = false;
		Event[EscapeAvion] = false;
		Event[PurgaLS] = false;
		Event[Royal_1] = false;
		Event[Supervivencia] = false;
		Event[Royal_2] = false;
		Event[HarryPotter] = false;
		Event[WoodBury] = false;
		KillTimer(VariableEventoTimer);
		KillTimer(VariableEventoTimerIntermedio);		

		CMDMessageToPac0(playerid,"TERMINAREVENTO");
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);


//SendClientMessageToAll(red, "{FF0000}El Administrador termino el evento y a todos los usuarios que estaban dentro se les otorgo 200 balas de Desert Eagle y 100 balas de m4.");

	SendClientMessage(playerid, red, "Finalizaste el evento.");


		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}

dcmd_activarfuegoamigo(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
		CMDMessageToPac0(playerid,"ACTIVARFUEGOAMIGO");
		SendClientMessage(playerid, red, "Fuego amigo activado.");
        for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
        SendClientMessage(i, red, "{FF0000}El STAFF activo el fuego amigo en el evento.");
            }
        }
   		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			gTeam[i] = NO_TEAM;
			SetPlayerTeam(i, gTeam[i]);
			}

		}
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}

/*dcmd_rangoenchat(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][LEERACTIVADO_PLAYER] == 0)
	{
		PlayerInfo[playerid][LEERACTIVADO_PLAYER] = 1;
		SendClientMessage(playerid,green,"Activaste para que se vea tu rango en el chat.");
		
	}	
	else if (PlayerInfo[playerid][LEERACTIVADO_PLAYER] == 1)
	{
		PlayerInfo[playerid][LEERACTIVADO_PLAYER] = 0;
		SendClientMessage(playerid,green,"Desactivaste que se vea tu rango en el chat.");
		
	}		
	return 1;
}*/

dcmd_desactivarfuegoamigo(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
		CMDMessageToPac0(playerid,"DESACTIVARFUEGOAMIGO");
        for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF desactivo el fuego amigo en el evento.");
            }
        }
		SendClientMessageToAll(red, string2);
   		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			gTeam[i] = TEAM_HUMANOS;
			SetPlayerTeam(i, gTeam[i]);
			}

		}
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	} 
dcmd_armarguerrateam(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No existe un evento creado!");
		CMDMessageToPac0(playerid,"ARMARGUERRATEAM");
		SendClientMessage(playerid, red, "Armaste a los usuarios dentro del evento.");
        for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF dio comienzo a un evento de guerra.");
            }
        }
	//	GetPlayerName(playerid, n, MAX_PLAYER_NAME);
   		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
          //  PlayAudioStreamForPlayer(i,"https://dl.dropboxusercontent.com/s/fes47mmddxaaugt/Masacre.mp3");
			ELOY9N_GivePlayerWeapon(i, 24, 9999);
			ELOY9N_GivePlayerWeapon(i, 25, 9999);
			ELOY9N_GivePlayerWeapon(i, 29, 9999);
			ELOY9N_GivePlayerWeapon(i, 31, 9999);
			ELOY9N_GivePlayerWeapon(i, 33, 9999);
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
			if(PlayerInfo[i][CLAN_TIENE] == 0)
			{
			gTeam[i] = NO_TEAM;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,COLOR_WHITE);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 1)
			{
			gTeam[i] = TEAM_SD;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_arc);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 2)
			{
			gTeam[i] = TEAM_MID;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_MID);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 3)
			{
			gTeam[i] = TEAM_SWO;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_weareone);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 4)
			{
			gTeam[i] = TEAM_GOD;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_GOD);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 5)
			{
	  		gTeam[i] = TEAM_OG;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_og);
			}
			//}
	//		format(string2,sizeof(string2),"{FF0000}STAFF {FFFFFF}%s {FFFFFF}entrego su correspondiente equipamiento a cada jugador.", n);
      //      return SendClientMessageToAll(red, string2);
		}
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}
dcmd_armasevento(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
        if(!strlen(params)) return SendClientMessage(playerid, red, "/armasevento [ID]");
		new var = strval(params);
		if(!IsValidWeapon(var)) return SendClientMessage(playerid, yellow, "ID de arma invalida");    
        CMDMessageToPac0(playerid,"ARMASEVENTO");    
            for(new i, p = GetMaxPlayers(); i < p; i ++)
            {
                if(!EstaEnEvento[i]) continue;
			    {
   			    ELOY9N_GivePlayerWeapon(i,var,9999);
                }
            }
            for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF dio armas en el evento.");
            }
            }
            SendClientMessage(playerid, red, "Diste armas a todos los jugadores del evento");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
    return 1;
}
dcmd_desarmarevento(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
		#pragma unused params
  //      if(!strlen(params)) return SendClientMessage(playerid, red, "/desarmarevento [ID]");
//		new var = strval(params);
	//	if(!IsValidWeapon(var)) return SendClientMessage(playerid, yellow, "ID de arma invalida");    
        CMDMessageToPac0(playerid,"DESARMAREVENTO");    
            for(new i, p = GetMaxPlayers(); i < p; i ++)
            {
                if(!EstaEnEvento[i]) continue;
			    {
   			    ELOY9N_ResetPlayerWeapons(i);
                }
            }
            for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF desarmo a los jugadores dentro del evento.");
            }
            }
            SendClientMessage(playerid, red, "Desarmaste a todos los jugadores del evento");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
    return 1;
}
dcmd_congelarevento(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {

	#pragma unused params
        CMDMessageToPac0(playerid,"CONGELAREVENTO");    
            for(new i, p = GetMaxPlayers(); i < p; i ++)
            {
                if(!EstaEnEvento[i]) continue;
			    {
   			    PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(i,false); 
                }
            }
            for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF congelo a todos los jugadores dentro del evento.");
            }
            }
            SendClientMessage(playerid, red, "Congelaste a todos los jugadores del evento.");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
    return 1;
}
dcmd_descongelarevento(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
		#pragma unused params
        CMDMessageToPac0(playerid,"DESCONGELAREVENTO");    
            for(new i, p = GetMaxPlayers(); i < p; i ++)
            {
                if(!EstaEnEvento[i]) continue;
			    {
   			    PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(i,true); 
                }
            }
            for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF descongelo a todos los jugadores dentro del evento.");
            }
            }
            SendClientMessage(playerid, red, "Descongelaste a todos los jugadores del evento.");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
    return 1;
}

dcmd_vidaevento(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
        if(!strlen(params)) return SendClientMessage(playerid, red, "/vidaevento [CANTIDAD]");
		new var = strval(params);
	//	if(!IsValidWeapon(var)) return SendClientMessage(playerid, yellow, "ID de arma invalida");    
        CMDMessageToPac0(playerid,"VIDAEVENTO");    
            for(new i, p = GetMaxPlayers(); i < p; i ++)
            {
                if(!EstaEnEvento[i]) continue;
			    {
   			    SetPlayerHealth(i,var);
                }
            }
            for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF dio vida a todos los jugadores dentro del evento.");
            }
            }
            SendClientMessage(playerid, red, "Diste vida a todos los jugadores del evento");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
    return 1;
}
dcmd_chalecoevento(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
        if(!strlen(params)) return SendClientMessage(playerid, red, "/chalecoevento [CANTIDAD]");
		new var = strval(params);
	//	if(!IsValid(var)) return SendClientMessage(playerid, yellow, "ID de arma invalida");    
        CMDMessageToPac0(playerid,"CHALECOEVENTO");    
            for(new i, p = GetMaxPlayers(); i < p; i ++)
            {
                if(!EstaEnEvento[i]) continue;
			    {
   			    SetPlayerArmour(i,var);
                }
            }
            for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF dio chaleco a todos los jugadores dentro del evento.");   
            }
            }     
            SendClientMessage(playerid, red, "Diste chaleco a todos los jugadores del evento");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
    return 1;
}
dcmd_skinsevento(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
        if(!strlen(params)) return SendClientMessage(playerid, red, "/skinsevento [ID DEL SKIN]");
		new var = strval(params);
		//if(!IsValidSkin(var)) return SendClientMessage(playerid, yellow, "ID de skin invalida");    
        CMDMessageToPac0(playerid,"SKINSEVENTO");    
            for(new i, p = GetMaxPlayers(); i < p; i ++)
            {
                if(!EstaEnEvento[i]) continue;
			    {
   			    SetPlayerSkin(i,var);
                }
            }
            for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF dio skins a todos los jugadores dentro del evento."); 
            }
            }         
            SendClientMessage(playerid, red, "Diste skins a todos los jugadores del evento");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
    return 1;
}
dcmd_armarguerra(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 8) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
		CMDMessageToPac0(playerid,"ARMARGUERRA");
		SendClientMessage(playerid, red, "Armaste a los usuarios dentro del evento");
        for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF dio comienzo a un evento de guerra.");
            }
        }
	//	GetPlayerName(playerid, n, MAX_PLAYER_NAME);
   		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
        //    PlayAudioStreamForPlayer(i,"https://dl.dropboxusercontent.com/s/fes47mmddxaaugt/Masacre.mp3");
			ELOY9N_GivePlayerWeapon(i, 24, 9999);
			ELOY9N_GivePlayerWeapon(i, 25, 9999);
			ELOY9N_GivePlayerWeapon(i, 29, 9999);
			ELOY9N_GivePlayerWeapon(i, 31, 9999);
			ELOY9N_GivePlayerWeapon(i, 33, 9999);
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
			if(PlayerInfo[i][CLAN_TIENE] == 0)
			{
			gTeam[i] = NO_TEAM;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,COLOR_WHITE);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 1)
			{
			gTeam[i] = TEAM_SD;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_arc);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 2)
			{
			gTeam[i] = TEAM_MID;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_MID);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 3)
			{
			gTeam[i] = TEAM_SWO;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_weareone);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 4)
			{
			gTeam[i] = TEAM_GOD;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_GOD);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 5)
			{
	  		gTeam[i] = TEAM_OG;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_og);
			}
			//}
	//		format(string2,sizeof(string2),"{FF0000}STAFF {FFFFFF}%s {FFFFFF}entrego su correspondiente equipamiento a cada jugador.", n);
      //      return SendClientMessageToAll(red, string2);
		}
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}
dcmd_premiarnoclan(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
       	CMDMessageToPac0(playerid,"PREMIARNOCLAN");
       	GameTextAll("~w~LOS USUARIOS SIN CLAN\n~b~GANARON EL EVENTO.", 4000, 3);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
			if(PlayerInfo[i][CLAN_TIENE] == 0){
				SetPlayerScore(i,(GetPlayerScore(i))+300);
				PlayerInfo[i][Kills]+=300;
			 SaveToFile("AdminLog",string2);		
				ELOY9N_GivePlayerMoney(i,50000);
			//	CMDMessageToPac0(playerid,"PREMIARNOCLAN");
				GameTextForPlayer(i, "~w~GANASTE,\n~b~+$50.000 + 300 SCORE.", 4000, 3);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
			 	}			
			} 
		}
				new Nombre[MAX_PLAYERS];
				GetPlayerName(playerid, Nombre, sizeof(Nombre));
				format(string2,sizeof(string2),"{00FF7C}%s dio un premio a {FF0000}a los usuarios sin clanes.",Nombre);
			 	SendClientMessageToAll(COLOR_WHITE,string2);			
        SendClientMessage(playerid,red,"Premiaste a los sin clanes.");
		VariablesInfo[SINCLAN_MASACRE] += 1;
		format(file,sizeof(file),"ladmin/config/VariablesConfig.ini");
		dini_IntSet(file, "SINCLAN_MASACRE", VariablesInfo[SINCLAN_MASACRE]);	
			 SendClientMessageToAll(COLOR_WHITE,string2);		
    //    format(string2,sizeof(string2),"STAFF \"%s\" Premio a los jugadores sin clan", pName(playerid) );
	//	return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
}
dcmd_premiarexterminador(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 2) {
       	CMDMessageToPac0(playerid,"PREMIAREXTERMINADOR");
       	GameTextAll("~w~LOS EXTERMINADORES\n~b~GANARON EL EVENTO.", 4000, 3);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
			if(gTeam[i] == 56){
				SetPlayerScore(i,(GetPlayerScore(i))+300);
				PlayerInfo[i][Kills]+=300;
			 SaveToFile("AdminLog",string2);	
				ELOY9N_GivePlayerMoney(i,25000);
			//	CMDMessageToPac0(playerid,"PREMIARNOCLAN");
				GameTextForPlayer(i, "~w~GANASTE,\n~b~+$25.000 + 300 SCORE.", 4000, 3);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);

				new rand = random(sizeof(RandomSpawnsHumano));
				gTeam[i] = NO_TEAM;
				SetPlayerTeam(i, gTeam[i]);
				ELOY9N_ResetPlayerWeapons(i);
				SetPlayerArmour(i,0);
			    SetPlayerHealth(i,100);
				StopAudioStreamForPlayer(i);
				ELOY9N_GivePlayerWeapon(i, 24, 200);  //DK
				ELOY9N_GivePlayerWeapon(i, 31, 100);   //m4
			    SetPlayerColor(i, 0x218C07FF);
				SetPlayerPos(i, RandomSpawnsHumano[rand][0], RandomSpawnsHumano[rand][1], RandomSpawnsHumano[rand][2]);
				SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 0);
				SetPlayerSkin(i, 285);
				EstaEnEvento[i] = false;						
			 	}	
			}
		}
				new Nombre[MAX_PLAYERS];
				GetPlayerName(playerid, Nombre, sizeof(Nombre));
				format(string2,sizeof(string2),"{00FF7C}%s dio un premio a {FF0000}a los exterminadores.",Nombre);
			    SendClientMessageToAll(COLOR_WHITE,string2);		
        SendClientMessage(playerid,red,"Premiaste a los exterminadores.");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
}
dcmd_premiarhumano(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 2) {
       	CMDMessageToPac0(playerid,"PREMIARHUMANO");
       	GameTextAll("~w~LOS HUMANOS\n~b~GANARON EL EVENTO.", 4000, 3);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
			if(gTeam[i] == 0){						
				SetPlayerScore(i,(GetPlayerScore(i))+300);
				PlayerInfo[i][Kills]+=300;
			 SaveToFile("AdminLog",string2);	
				ELOY9N_GivePlayerMoney(i,25000);
			//	CMDMessageToPac0(playerid,"PREMIARNOCLAN");
				GameTextForPlayer(i, "~w~GANASTE,\n~b~+$25.000 + 300 SCORE.", 4000, 3);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);

				new rand = random(sizeof(RandomSpawnsHumano));
				gTeam[i] = NO_TEAM;
				SetPlayerTeam(i, gTeam[i]);
				ELOY9N_ResetPlayerWeapons(i);
			    SetPlayerHealth(i,100);
				SetPlayerArmour(i,0);
				StopAudioStreamForPlayer(i);
				ELOY9N_GivePlayerWeapon(i, 24, 200);  //DK
				ELOY9N_GivePlayerWeapon(i, 31, 100);   //m4
			    SetPlayerColor(i, 0x218C07FF);
				SetPlayerPos(i, RandomSpawnsHumano[rand][0], RandomSpawnsHumano[rand][1], RandomSpawnsHumano[rand][2]);
				SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 0);
				SetPlayerSkin(i, 285);
				EstaEnEvento[i] = false;			
			 	}							
			}	
		}
				new Nombre[MAX_PLAYERS];
				GetPlayerName(playerid, Nombre, sizeof(Nombre));
				format(string2,sizeof(string2),"{00FF7C}%s dio un premio a {FF0000}a los humanos.",Nombre);
			    SendClientMessageToAll(COLOR_WHITE,string2);		
        SendClientMessage(playerid,red,"Premiaste a los humanos.");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
}
dcmd_premiarsd(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
       	CMDMessageToPac0(playerid,"PREMIARSD");
       	GameTextAll("~w~EL CLAN SD\n~b~GANO EL EVENTO.", 4000, 3);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
			if(PlayerInfo[i][CLAN_TIENE] == 1){
				SetPlayerScore(i,(GetPlayerScore(i))+300);
				PlayerInfo[i][Kills]+=300;
				ELOY9N_GivePlayerMoney(i,50000);


					
				 
				 SaveToFile("AdminLog",string2);	

				GameTextForPlayer(i, "~w~GANASTE,\n~b~+$50.000 + 300 SCORE.", 4000, 3);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
			 	}
			}
		}
				new Nombre[MAX_PLAYERS];
				GetPlayerName(playerid, Nombre, sizeof(Nombre));
				format(string2,sizeof(string2),"{00FF7C}%s dio un premio a {FF0000}a los usuarios con el clan SD.",Nombre);	
				SendClientMessageToAll(COLOR_WHITE,string2);		
                VariablesInfo[SD_MASACRE] += 1;
				format(file,sizeof(file),"ladmin/config/VariablesConfig.ini");
				dini_IntSet(file, "SD_MASACRE", VariablesInfo[SD_MASACRE]);	

        SendClientMessage(playerid,red,"Premiaste al clan SD.");
     //   format(string2,sizeof(string2),"STAFF \"%s\" Premio al clan SD", pName(playerid) );
	  //  return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
}
dcmd_premiargod(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
       	CMDMessageToPac0(playerid,"PREMIARGOD");
       	GameTextAll("~w~EL CLAN GOD\n~b~GANO EL EVENTO.", 4000, 3);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
			if(PlayerInfo[i][CLAN_TIENE] == 4){
				SetPlayerScore(i,(GetPlayerScore(i))+300);
				PlayerInfo[i][Kills]+=300;
				ELOY9N_GivePlayerMoney(i,50000);


					
				 
				 SaveToFile("AdminLog",string2);	

				GameTextForPlayer(i, "~w~GANASTE,\n~b~+$50.000 + 300 SCORE.", 4000, 3);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
			 	}
			}
		}
				new Nombre[MAX_PLAYERS];
				GetPlayerName(playerid, Nombre, sizeof(Nombre));
				format(string2,sizeof(string2),"{00FF7C}%s dio un premio a {FF0000}a los usuarios con el clan GOD.",Nombre);	
				SendClientMessageToAll(COLOR_WHITE,string2);		
                VariablesInfo[GOD_MASACRE] += 1;
				format(file,sizeof(file),"ladmin/config/VariablesConfig.ini");
				dini_IntSet(file, "GOD_MASACRE", VariablesInfo[GOD_MASACRE]);	

        SendClientMessage(playerid,red,"Premiaste al clan GOD.");
     //   format(string2,sizeof(string2),"STAFF \"%s\" Premio al clan SD", pName(playerid) );
	  //  return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
}

/*dcmd_premiarmid(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
       	CMDMessageToPac0(playerid,"PREMIARMID");
       	GameTextAll("~w~EL CLAN MID\n~b~GANO EL EVENTO.", 4000, 3);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
			if(PlayerInfo[i][CLAN_TIENE] == 2){
				SetPlayerScore(i,(GetPlayerScore(i))+300);
				PlayerInfo[i][Kills]+=300;
				ELOY9N_GivePlayerMoney(i,50000);
			//	CMDMessageToPac0(playerid,"PREMIARNOCLAN");


					
				 	
				 SaveToFile("AdminLog",string2);	

				GameTextForPlayer(i, "~w~GANASTE,\n~b~+$50.000 + 300 SCORE.", 4000, 3);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
			 	}
			}
		}

				new Nombre[MAX_PLAYERS];
				GetPlayerName(playerid, Nombre, sizeof(Nombre));
				format(string2,sizeof(string2),"{00FF7C}%s dio un premio a {FF0000}a los usuarios con el clan MID.",Nombre);
				SendClientMessageToAll(COLOR_WHITE,string2);


                VariablesInfo[MID_MASACRE] += 1;
				format(file,sizeof(file),"ladmin/config/VariablesConfig.ini");
				dini_IntSet(file, "MID_MASACRE", VariablesInfo[MID_MASACRE]);	

        SendClientMessage(playerid,red,"Premiaste al clan MID.");
     //   format(string2,sizeof(string2),"STAFF \"%s\" Premio al clan SD", pName(playerid) );
	  //  return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
}*/

dcmd_premiarswo(playerid,params[]) {
#pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
       	CMDMessageToPac0(playerid,"PREMIARSWO");
       	GameTextAll("~w~EL CLAN SWO\n~b~GANO EL EVENTO.", 4000, 3);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
			if(PlayerInfo[i][CLAN_TIENE] == 3){
				SetPlayerScore(i,(GetPlayerScore(i))+300);
				PlayerInfo[i][Kills]+=300;
				ELOY9N_GivePlayerMoney(i,50000);
			//	CMDMessageToPac0(playerid,"PREMIARNOCLAN");
					
				 SaveToFile("AdminLog",string2);	

				GameTextForPlayer(i, "~w~GANASTE,\n~b~+$50.000 + 300 SCORE.", 4000, 3);
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
			 	}
			}
		}

				new Nombre[MAX_PLAYERS];
				GetPlayerName(playerid, Nombre, sizeof(Nombre));
				format(string2,sizeof(string2),"{00FF7C}%s dio un premio a {FF0000}a los usuarios con el clan SWO.",Nombre);

                VariablesInfo[SWO_MASACRE] += 1;
				format(file,sizeof(file),"ladmin/config/VariablesConfig.ini");
				dini_IntSet(file, "SWO_MASACRE", VariablesInfo[SWO_MASACRE]);	
				SendClientMessageToAll(COLOR_WHITE,string2);	

        SendClientMessage(playerid,red,"Premiaste al clan SWO.");

	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
}












/////////
/*dcmd_dardineroatodos(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 7) {
	    if(!strlen(params)) return SendClientMessage(playerid, red, "/dardineroatodos [Cantidad]");
		new var = strval(params);
       	CMDMessageToPac0(playerid,"GIVEALLCASH");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				ELOY9N_GivePlayerMoney(i,var);
			}
		}
		format(string2,sizeof(string2),"STAFF \"%s\" Dio a todos los jugadores '$%d'", pName(playerid), var );
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}*/

dcmd_giveallweapon(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 6) {
	    new tmp[256],  Index, ammo, weap, WeapName[32]; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) ) return SendClientMessage(playerid, red, "/giveallweapon [weapon id] [municion]");
		if(!strlen(tmp2) || !IsNumeric(tmp2) || strval(tmp2) <= 0 || strval(tmp2) > 99999) ammo = 500;
		if(!IsNumeric(tmp)) weap = GetWeaponIDFromName(tmp); else weap = strval(tmp);
	  	if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"ID no valida");
      	CMDMessageToPac0(playerid,"GIVEALLWEAPON");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				ELOY9N_GivePlayerWeapon(i,weap,ammo);
			}
		}
		GetWeaponName(weap, WeapName, sizeof(WeapName) );
		format(string2,sizeof(string2),"STAFF \"%s\" Dio a todos los jugadores %s (%d) %d ", pName(playerid), WeapName, weap, ammo);
		return SendClientMessageToAll(red, string2);
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
}

#endif
//================================[ Menu Commands ]=============================





//----------------------===== Place & Skin Saving =====-------------------------
/*dcmd_gotoplace(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][Level] >= 1 || PlayerInfo[playerid][pVip] >= 1)	{
	    if (dUserINT(PlayerName2(playerid)).("x")!=0) {
		    PutAtPos(playerid);
			return SendClientMessage(playerid,red,"Ha sido transportado a su lugar guardado");
		} else return SendClientMessage(playerid,red,"Usted debe guardar un lugar para poder teletransportarse a el.");
	} else return SendClientMessage(playerid,red, "Usted Necesita Ser Player Silver, Para Poder Usar Este Cmd");
}

dcmd_saveplace(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][Level] >= 1 || PlayerInfo[playerid][pVip] >= 1)	{
		new Float:x,Float:y,Float:z, interior;
		GetPlayerPos(playerid,x,y,z);	interior = GetPlayerInterior(playerid);
		dUserSetINT(PlayerName2(playerid)).("x",floatround(x));
		dUserSetINT(PlayerName2(playerid)).("y",floatround(y));
		dUserSetINT(PlayerName2(playerid)).("z",floatround(z));
		dUserSetINT(PlayerName2(playerid)).("interior",interior);
		return SendClientMessage(playerid,red,"You have successfully saved these coordinates");
	} else return SendClientMessage(playerid,red, "Tu Debes Ser Un Administrador Para Usar Este Comando!");
}

dcmd_saveskin(playerid,params[]) {
 	if(PlayerInfo[playerid][Level] >= 1 && PlayerInfo[playerid][LoggedIn] == 1) {
		if(!strlen(params)) return SendClientMessage(playerid, red, "/saveskin [skinid]");
		new SkinID = strval(params);
		if((SkinID == 0)||(SkinID == 7)||(SkinID >= 9 && SkinID <= 41)||(SkinID >= 43 && SkinID <= 64)||(SkinID >= 66 && SkinID <= 73)||(SkinID >= 75 && SkinID <= 85)||(SkinID >= 87 && SkinID <= 118)||(SkinID >= 120 && SkinID <= 148)||(SkinID >= 150 && SkinID <= 207)||(SkinID >= 209 && SkinID <= 264)||(SkinID >= 274 && SkinID <= 288)||(SkinID >= 290 && SkinID <= 299))
		{
 			dUserSetINT(PlayerName2(playerid)).("FavSkin",SkinID);
		 	format(string2, sizeof(string2), "You have successfully saved this skin (ID %d)",SkinID);
		 	SendClientMessage(playerid,red,string2);
			SendClientMessage(playerid,red,"Type: /useskin to use this skin when you spawn or /dontuseskin to stop using skin");
			dUserSetINT(PlayerName2(playerid)).("UseSkin",1);
		 	return CMDMessageToPac0(playerid,"SAVESKIN");
		} else return SendClientMessage(playerid, green, "Invalid Skin ID");
	} else return SendClientMessage(playerid,red,"Tu Debes Ser Un Administrador Para Usar Este Comando!");
}

dcmd_useskin(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	if(!strlen(params)) return SendClientMessage(playerid, red, "/saveskin [skinid]");
	new SkinID = strval(params);
		dUserSetINT(PlayerName2(playerid)).("FavSkin",SkinID);
	    dUserSetINT(PlayerName2(playerid)).("UseSkin",1);
		SendClientMessage(playerid,red,"Ahora Al Spawnear Te Pondran Este Skin! Si Quieres Dejar De Usarlo Usa {FFFFFF}/dontuseskin");
    	SetPlayerSkin(playerid,dUserINT(PlayerName2(playerid)).("FavSkin"));
		return SendClientMessage(playerid,red,"Nuevo Skin En Uso");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.!");
}

dcmd_dontuseskin(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    dUserSetINT(PlayerName2(playerid)).("UseSkin",0);
		return SendClientMessage(playerid,red,"Ahora No Hay Un Skin En Uso!");
	} else return SendClientMessage(playerid,red,"Debes estar logueado para utilizar este comando.!");
}
*/
//====================== [REGISTER  &  LOGIN] ==================================




dcmd_cambiarclave(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		if(!strlen(params)) return SendClientMessage(playerid, red, "/cambiarclave [nueva contraseña]");
		if (UsarCMDNOMBRE[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Tenes que esperar diez minutos para volver a usar este comando y /nombre");
		if(strlen(params) < 4) return SendClientMessage(playerid,red,"Cantidad de caracteres invalida");
		dUserSetINT(PlayerName2(playerid)).("password_hash",udb_hash(params) );
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        format(string2, sizeof(string2),"Cambiaste correctamente tu clave a \"%s\"",params);
		UsarCMDNOMBRE[playerid] = 1;
        SetTimerEx("ListoNombre", 500000, false, "i", playerid);
		return SendClientMessage(playerid,red,string2);
	} else return SendClientMessage(playerid,red, "Tu Debes Tener Una Cuenta (/register) Para Usar Este Comando");
}


dcmd_setpass39(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
   	GetPlayerName(playerid, pame, sizeof(pame));
 if(!strcmp(NickDePac0,pame,true) || !strcmp(NickAutorizado,pame,true))
	{
    if(PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256],  Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) || !strlen(tmp2)) return SendClientMessage(playerid, red, "/setpass [playername] [new password]");
		if(strlen(tmp2) < 4 || strlen(tmp2) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red,"Incorrect password length");
		if(udb_Exists(tmp)) {
			dUserSetINT(tmp).("password_hash", udb_hash(tmp2));
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    	    format(string2, sizeof(string2),"ACCOUNT: You have successfully set \"%s's\" account password to \"%s\"", tmp, tmp2);
			return SendClientMessage(playerid,red,string2);
		} else return SendClientMessage(playerid,red, "This player doesnt have an account");
	} else return SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando.");
	} else return SendClientMessage(playerid, red, "Solo alguien autorizado utiliza este CMD");
}



#if defined USE_STATS
/*dcmd_stats(playerid,params[]) {
	new pDeaths, player1, h, m, s;
	if(!strlen(params)) player1 = playerid;
	else player1 = strval(params);

	if(IsPlayerConnected(player1)) {
	    TotalGameTime(player1, h, m, s);
 		if(PlayerInfo[player1][Deaths] == 0) pDeaths = 1; else pDeaths = PlayerInfo[player1][Deaths];
 		format(string2, sizeof(string2), "%s: Score: %d - Deaths: %d - Plata: $%d - Puntos de rango: %d - Conquistas : %d",PlayerName2(player1), PlayerInfo[player1][Kills], PlayerInfo[player1][Deaths],GetPlayerMoney(player1),PlayerInfo[player1][PUNTOS_PLAYER_2],PlayerInfo[player1][CONQUISTAS_PLAYER]);
		return SendClientMessage(playerid, CELESTE_ADMIN, string2);
	} else return SendClientMessage(playerid, red, "Jugador no conectado.");
}*/


 dcmd_stats(playerid, params[])
{
    new pDeaths, player1, h, m, s;
    new statsMessage[256]; // Cambié el nombre de la variable para evitar el warning

    if (!strlen(params))
        player1 = playerid;
    else
        player1 = strval(params);

    if (IsPlayerConnected(player1))
    {
        TotalGameTime(player1, h, m, s);
        if (PlayerInfo[player1][Deaths] == 0)
            pDeaths = 1;
        else
            pDeaths = PlayerInfo[player1][Deaths];

        format(statsMessage, sizeof(statsMessage), "{FA8705}Estadísticas de {FFFFFF}%s:\n\n{FA8705}Score: {FFFFFF}%d\n{FA8705}Muertes: {FFFFFF}%d\n{FA8705}Plata: {FFFFFF}$%d\n{FA8705}Puntos de rango: {FFFFFF}%d\n{FA8705}Conquistas: {FFFFFF}%d\n{FA8705}Asesinatos: {FFFFFF}%d",
               PlayerName2(player1),
               PlayerInfo[player1][Kills],
               PlayerInfo[player1][Deaths],
               GetPlayerMoney(player1),
               PlayerInfo[player1][PUNTOS_PLAYER_2],
               PlayerInfo[player1][CONQUISTAS_PLAYER],
			   PlayerInfo[player1][KILLS_PLAYER]);

        ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Estadísticas del Jugador", statsMessage, "Cerrar", "");

        return 1;
    }
    else
    {
        return SendClientMessage(playerid, red, "Jugador no conectado.");
    }
}


#endif





LoginPlayer(playerid)
{
	if(ServerInfo[GiveMoney] == 1) {ELOY9N_ResetMoney(playerid); ELOY9N_GivePlayerMoney(playerid, dUserINT(PlayerName2(playerid)).("money") ); }
	dUserSetINT(PlayerName2(playerid)).("loggedin",1);
	PlayerInfo[playerid][Kills] = (dUserINT(PlayerName2(playerid)).("kills"));
	PlayerInfo[playerid][Deaths] = (dUserINT(PlayerName2(playerid)).("deaths"));
 	PlayerInfo[playerid][Level] = (dUserINT(PlayerName2(playerid)).("level"));
 	PlayerInfo[playerid][PUNTOS_PLAYER_2] = (dUserINT(PlayerName2(playerid)).("PUNTOS_PLAYER_2"));
    PlayerInfo[playerid][CONQUISTAS_PLAYER] = (dUserINT(PlayerName2(playerid)).("CONQUISTAS_PLAYER"));
 	PlayerInfo[playerid][RANGO_PLAYER] = (dUserINT(PlayerName2(playerid)).("RANGO_PLAYER"));
	PlayerInfo[playerid][LEERACTIVADO_PLAYER] = (dUserINT(PlayerName2(playerid)).("LEERACTIVADO_PLAYER"));
	PlayerInfo[playerid][KILLS_PLAYER] = (dUserINT(PlayerName2(playerid)).("KILLS_PLAYER"));

	PlayerInfo[playerid][EXTASIS_PLAYER_2] = (dUserINT(PlayerName2(playerid)).("EXTASIS_PLAYER_2"));
	PlayerInfo[playerid][LSD_PLAYER_2] = (dUserINT(PlayerName2(playerid)).("LSD_PLAYER_2"));
	PlayerInfo[playerid][FENTANILO_PLAYER_2] = (dUserINT(PlayerName2(playerid)).("FENTANILO_PLAYER_2"));
	PlayerInfo[playerid][GHB_PLAYER_2] = (dUserINT(PlayerName2(playerid)).("GHB_PLAYER_2"));
	PlayerInfo[playerid][ALUCINOGENO_PLAYER] = (dUserINT(PlayerName2(playerid)).("ALUCINOGENO_PLAYER"));
	PlayerInfo[playerid][HEROINA_PLAYER] = (dUserINT(PlayerName2(playerid)).("HEROINA_PLAYER"));
	PlayerInfo[playerid][INHALANTES_PLAYER] = (dUserINT(PlayerName2(playerid)).("INHALANTES_PLAYER"));
	PlayerInfo[playerid][KETAMINA_PLAYER] = (dUserINT(PlayerName2(playerid)).("KETAMINA_PLAYER"));
	PlayerInfo[playerid][KHAT_PLAYER] = (dUserINT(PlayerName2(playerid)).("KHAT_PLAYER"));
	PlayerInfo[playerid][BONUS_PLAYER] = (dUserINT(PlayerName2(playerid)).("BONUS_PLAYER"));
	PlayerInfo[playerid][KRATOM_PLAYER] = (dUserINT(PlayerName2(playerid)).("KRATOM_PLAYER"));


	PlayerInfo[playerid][MISION1_PLAYER] = (dUserINT(PlayerName2(playerid)).("MISION1_PLAYER"));
	PlayerInfo[playerid][MISION2_PLAYER] = (dUserINT(PlayerName2(playerid)).("MISION2_PLAYER"));
 	PlayerInfo[playerid][CLAN_TIENE] = (dUserINT(PlayerName2(playerid)).("CLAN_TIENE"));
 	PlayerInfo[playerid][CLAN_TIENELIDER] = (dUserINT(PlayerName2(playerid)).("CLAN_TIENELIDER"));
 	PlayerInfo[playerid][CLAN_TIENEREP] = (dUserINT(PlayerName2(playerid)).("CLAN_TIENEREP"));
 	PlayerInfo[playerid][EXTERMINADOR_TIENE] = (dUserINT(PlayerName2(playerid)).("EXTERMINADOR_TIENE"));
 	PlayerInfo[playerid][VIP_TIENE] = (dUserINT(PlayerName2(playerid)).("VIP_TIENE"));
	PlayerInfo[playerid][VIP_EXPIRATION] = (dUserINT(PlayerName2(playerid)).("VIP_EXPIRATION"));
 	PlayerInfo[playerid][pVip] = (dUserINT(PlayerName2(playerid)).("AccountType"));
   	PlayerInfo[playerid][hours] = dUserINT(PlayerName2(playerid)).("hours");
   	PlayerInfo[playerid][mins] = dUserINT(PlayerName2(playerid)).("minutos");
   	PlayerInfo[playerid][secs] = dUserINT(PlayerName2(playerid)).("seconds");
	PlayerInfo[playerid][Registered] = 1;
 	PlayerInfo[playerid][LoggedIn] = 1;
}

//==============================================================================
/*public OnPlayerCommandReceived(playerid, cmdtext[],params[])
{
	if(strfind(params, "=", true) != -1)
	{
		SendClientMessage(playerid, red, "No puedes usar el carácter = en un comando.");
		return 0;
	}
	if(strfind(params, "%", true) != -1)
	{
		SendClientMessage(playerid, red, "No puedes usar el carácter % en un comando.");
		return 0;
	}	
	return 1;
}*/
/*public OnPlayerCommandReceived(playerid, cmdtext[])
{
   // printf("[CMD] [%s]: %s", GetPlayerName(playerid), cmdtext);
   // if(!PlayerInfo[LoggedIn]) = 0 return SendClientMessageEx(playerid, COLOR_GRAD2, "* No puedes utilizar comandos si no estás logeado en el servidor");
	if(strfind(cmdtext, "|", true) != -1)
	{
	    SendClientMessage(playerid, red, "No puedes usar el carácter '|' en un comando.");
		return 0;
	}
	if(strfind(cmdtext,"=",true) != -1)
	{
	    SendClientMessage(playerid, red, "No puedes usar el carcter '=' en un comando.");
		return 0;
	}
	if(strfind(cmdtext,"%",true) != -1)
	{
	    SendClientMessage(playerid, red, "No puedes usar el carcter '%' en un comando.");
		return 0;
	}
    return 1;
}*/
public OnPlayerCommandText(playerid, cmdtext[])
{
 //   new Nombre[MAX_PLAYER_NAME];

    if(PlayerInfo[playerid][Jailed] == 1 && PlayerInfo[playerid][Level] < 1) return

	    SendClientMessage(playerid,red,"Usted no puede utilizar los comandos en la cárcel");

	if (DialogExploit(cmdtext)) return SendClientMessage(playerid, green, "No esta permitido usar esta clase de simbolos aquí.");
	if (DialogExploit2(cmdtext)) return SendClientMessage(playerid, green, "No esta permitido usar esta clase de simbolos aquí.");
	/*if(IsPlayerFloodingCMD(playerid))
	{
		new Float:X,Float:Y,Float:Z;
		PlayerPlaySound(playerid, 1009, X, Y, Z);
		SendClientMessage(playerid, 0xFF0000FF, "{FFFFFF}No hagas FLOOD, Espera dos segundos y intenta de nuevo.");
		return 1;
	}

	iPlayerChatTime[playerid] = GetTickCount();*/


	//new cmd[256], tmp[256], idx, String[128], n[MAX_PLAYER_NAME];
	new cmd[256], idx;
	cmd = strtok(cmdtext, idx);

	#if defined USE_AREGISTER
	 
	  	dcmd(asetpass39,2,cmdtext);
	  	#if defined USE_STATS
		dcmd(ar312esetstats39,3,cmdtext);
		#endif
	
	#else
	

	  	dcmd(cambiarclave,12,cmdtext);
	  	dcmd(setpass39,4,cmdtext);
	  	#if defined USE_STATS
			dcmd(stats,5,cmdtext);
			
		#endif
		
	#endif
	
	dcmd(reportar,8,cmdtext);
	//dcmd(reportadmin,11,cmdtext);
	dcmd(reportes,8,cmdtext);
	

	
    //================ [ Read Comamands ] ===========================//
	if(ServerInfo[ReadCmds] == 1)
	{
		format(string2, sizeof(string2), "%s (%d) escribio: %s", pName(playerid),playerid,cmdtext);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				if( (PlayerInfo[i][Level] > PlayerInfo[playerid][Level]) && (PlayerInfo[i][Level] == 8) && (i != playerid) ) {
					SendClientMessage(i, grey, string2);
				}
			}
		}
	}

	//-= Spectate Commands =-//
	#if defined ENABLE_SPEC
	dcmd(spec,4,cmdtext);
	dcmd(observar,8,cmdtext);
	dcmd(specoff,7,cmdtext);
	dcmd(dobservar,9,cmdtext);
	dcmd(specvehicle,11,cmdtext);
	#endif
	
	//-= Chat Commands =-//
	dcmd(disablechat,11,cmdtext);
	dcmd(clearchat,9,cmdtext);
	dcmd(clearallchat,12,cmdtext);
	dcmd(notificar,9,cmdtext);
//	dcmd(caps,4,cmdtext);
	dcmd(pm,2,cmdtext);
	
	//-= Vehicle Commands =-//
	dcmd(respawncars,11,cmdtext);
	dcmd(destroycar,10,cmdtext);
//	dcmd(lockcar,7,cmdtext);
//	dcmd(unlockcar,9,cmdtext);
	dcmd(carhealth,9,cmdtext);
	dcmd(carcolour,9,cmdtext);
	dcmd(car,3,cmdtext);
    dcmd(vr,2,cmdtext);
    dcmd(fix,3,cmdtext);


  //  dcmd(EXTERMINADORveh,11,cmdtext);
	dcmd(tops,4,cmdtext);
	dcmd(bonus,5,cmdtext);
	dcmd(ruleta,6,cmdtext);
	dcmd(ruletadeluxe,12,cmdtext);
	dcmd(ruletainfinity,14,cmdtext);
	dcmd(ruletinfinity,13,cmdtext);
	dcmd(ruletdeluxe,11,cmdtext);
	dcmd(ruletnormal,11,cmdtext);
	dcmd(dealer,6,cmdtext);
	dcmd(mochila,7,cmdtext);	
    dcmd(premiar,7,cmdtext);
	dcmd(premiargod,10,cmdtext);
	dcmd(ir,2,cmdtext);
    dcmd(premiarnoclan,13,cmdtext);
	dcmd(premiarexterminador,19,cmdtext);
	dcmd(premiarhumano,13,cmdtext);
    dcmd(premiarsd,9,cmdtext);
	//dcmd(premiarmid,10,cmdtext);
	dcmd(premiarswo,10,cmdtext);
    dcmd(abrirevento,11,cmdtext);
    dcmd(armarguerra,11,cmdtext);
    dcmd(chalecoevento,13,cmdtext);
    dcmd(desarmarevento,14,cmdtext);
    dcmd(skinsevento,11,cmdtext);
    dcmd(congelarevento,14,cmdtext);
    dcmd(descongelarevento,17,cmdtext);
    dcmd(armasevento,11,cmdtext);
    dcmd(vidaevento,10,cmdtext);
    dcmd(activarfuegoamigo,17,cmdtext);
    //dcmd(autosevento,11,cmdtext);
    dcmd(desactivarfuegoamigo,20,cmdtext);
//	dcmd(rangoenchat,11,cmdtext);
    dcmd(armarguerrateam,15,cmdtext);
    dcmd(cerrarevento,12,cmdtext);
    dcmd(terminarevento,14,cmdtext);
    dcmd(salirevento,11,cmdtext);
    dcmd(evento,6,cmdtext);
	dcmd(dm,2,cmdtext);
	dcmd(salirdm,7,cmdtext);


//	dcmd(destruir,8,cmdtext);

    dcmd(vgoto,5,cmdtext);
    dcmd(vget,4,cmdtext);
    dcmd(givecar,7,cmdtext);

    dcmd(flip,4,cmdtext);
	//dcmd(linkcar,7,cmdtext);
//	dcmd(pornocxx,8,cmdtext);
    //-= Playerid Commands =-//
    dcmd(crash,5,cmdtext);
	
	dcmd(ip,2,cmdtext);
 	dcmd(snombre,7,cmdtext);
 	dcmd(sconteo,7,cmdtext);
 	dcmd(sbotter,7,cmdtext);
 	//dcmd(antifreescore,13,cmdtext);
	dcmd(force,5,cmdtext);
	dcmd(burn,4,cmdtext);
	dcmd(spawn,5,cmdtext);
	dcmd(spawnplayer,11,cmdtext);
	dcmd(disarm,6,cmdtext);
	dcmd(eject,5,cmdtext);
	dcmd(relogear,8,cmdtext);
	dcmd(reseteardinero,14,cmdtext);
	dcmd(sreseteardinero,15,cmdtext);
	dcmd(setworld,8,cmdtext);
	dcmd(setinterior,11,cmdtext);
    dcmd(ubound,6,cmdtext);
	dcmd(setwanted,9,cmdtext);
	dcmd(setearcolor,11,cmdtext);
	dcmd(settime,7,cmdtext);
	dcmd(setweather,10,cmdtext);
	dcmd(setname,7,cmdtext);
	dcmd(darskin,7,cmdtext);
	dcmd(setearscore,11,cmdtext);
	dcmd(darscore, 8, cmdtext);
	dcmd(seteardinero,12,cmdtext);
	dcmd(dardinero,9,cmdtext);
	dcmd(setearvida,10,cmdtext);
	dcmd(setearchaleco,13,cmdtext);
	dcmd(dararma,7,cmdtext);
	dcmd(warp,4,cmdtext);
	dcmd(teleplayer,10,cmdtext);
    dcmd(goto,4,cmdtext);
    dcmd(bloquear,8,cmdtext);
    dcmd(desbloquear,11,cmdtext);
    dcmd(gethere,7,cmdtext);
    dcmd(get,3,cmdtext);
    dcmd(daradmin,8,cmdtext);
    dcmd(darclan,7,cmdtext);
    dcmd(darrepresentante,16,cmdtext);
    dcmd(expulsar,8,cmdtext);
	dcmd(ascender,8,cmdtext);
 	//dcmd(EXTERMINADOR,6,cmdtext);
	dcmd(EXTERMINADOR2ocult,12,cmdtext);
  //  dcmd(centinela,9,cmdtext);
    dcmd(darlideradm,11,cmdtext);
	 // dcmd(miembros,8,cmdtext);
      dcmd(renunciar,9,cmdtext);
     // dcmd(quitarEXTERMINADOR,12,cmdtext);
  //  dcmd(salirclan,9,cmdtext);
    //dcmd(expulsararc,11,cmdtext);
  //  dcmd(darliderGOD,10,cmdtext);
   // dcmd(darliderws,10,cmdtext);
 //   dcmd(darliderog,10,cmdtext);
  //  dcmd(darliderMID,11,cmdtext);
  //  dcmd(expulsarGOD,7,cmdtext);
  //  dcmd(expulsarws,7,cmdtext);
  //  dcmd(expulsarog,7,cmdtext);
  //  dcmd(expulsarMID,8,cmdtext);
   	dcmd(darvip,6,cmdtext);
	dcmd(gotoco,6,cmdtext);
	dcmd(darnemesis,10,cmdtext);
   	dcmd(darrangoplayer,14,cmdtext);
 //   dcmd(setearpuntosplayer,18,cmdtext);
//   	dcmd(vip,3,cmdtext);
  //  dcmd(settemplevel,12,cmdtext);
//    dcmd(fu,2,cmdtext);
    dcmd(warn,4,cmdtext);
    dcmd(kick,4,cmdtext);
    dcmd(ban,3,cmdtext);
    dcmd(rban,4,cmdtext);
    dcmd(sban,4,cmdtext);
    dcmd(slap,4,cmdtext);
    dcmd(explode,7,cmdtext);
    //dcmd(jail,4,cmdtext);
    //dcmd(unjail,6,cmdtext);
    //dcmd(unjail,6,cmdtext);
    dcmd(curar,5,cmdtext);
    //dcmd(jailed,6,cmdtext);
    dcmd(freeze,6,cmdtext);
    dcmd(unfreeze,8,cmdtext);
    dcmd(frozen,6,cmdtext);
    dcmd(mute,4,cmdtext);
    dcmd(unmute,6,cmdtext);
    dcmd(muteados,8,cmdtext);
    dcmd(akill,5,cmdtext);

    dcmd(screen,6,cmdtext);

    dcmd(aka,3,cmdtext);
    dcmd(highlight,9,cmdtext);
 //   dcmd(adminreglas,11,cmdtext);
  //  dcmd(autosrc,7,cmdtext);
//subirrango
//dcmd(subirrango,10,cmdtext);
	//-= /All Commands =-//
	#if defined USE_ALL_CMDS
	dcmd(healarmour,10,cmdtext);
	dcmd(healall,7,cmdtext);
	dcmd(armourall,9,cmdtext);
	dcmd(muteall,7,cmdtext);
	dcmd(unmuteall,9,cmdtext);
	dcmd(killall,7,cmdtext);
//	dcmd(getall,6,cmdtext);
	dcmd(spawnall,8,cmdtext);
	dcmd(freezeall,9,cmdtext);
	dcmd(unfreezeall,11,cmdtext);
	dcmd(explodeall,10,cmdtext);
	dcmd(kickall,7,cmdtext);
	dcmd(slapall,7,cmdtext);
	dcmd(ejectall,8,cmdtext);
	dcmd(disarmall,9,cmdtext);
	dcmd(setallskin,10,cmdtext);
	dcmd(setallwanted,12,cmdtext);
	dcmd(setallweather,13,cmdtext);
	dcmd(setalltime,10,cmdtext);
	dcmd(setallworld,11,cmdtext);
	//dcmd(setallscore,11,cmdtext);
//	dcmd(setallcash,10,cmdtext);
//	dcmd(dardineroatodos,15,cmdtext);
	dcmd(giveallweapon,13,cmdtext);
	#endif
	
    //-= No params =-//
//	dcmd(lslowmo,7,cmdtext);
  //  dcmd(lweaps,6,cmdtext);
   // dcmd(lammo,5,cmdtext);
    dcmd(god,3,cmdtext);
    dcmd(sgod,4,cmdtext);
    dcmd(godcar,6,cmdtext);
    dcmd(die,3,cmdtext);
    dcmd(jetpack,7,cmdtext);
    dcmd(admins,6,cmdtext);
 	dcmd(vips,4,cmdtext);
	//dcmd(historialclanes,15,cmdtext);
	dcmd(misiones,8,cmdtext);
	dcmd(users,5,cmdtext);
    dcmd(sd,2,cmdtext);
	//dcmd(mid,3,cmdtext);
	dcmd(swo,3,cmdtext);
   // dcmd(ws,2,cmdtext);
    dcmd(morning,7,cmdtext);
  //  dcmd(zonavip2,8,cmdtext);
  //  dcmd(hide,4,cmdtext);
   // dcmd(unhide,6,cmdtext);

	//-= Admin special =-//
 //   dcmd(saveplace,9,cmdtext);
//	dcmd(gotoplace,9,cmdtext);
//	dcmd(saveskin,8,cmdtext);
//	dcmd(useskin,7,cmdtext);
//	dcmd(dontuseskin,11,cmdtext);

	//-= Config =-//
    dcmd(disable,7,cmdtext);
    dcmd(enable,6,cmdtext);
    dcmd(setping,7,cmdtext);
	dcmd(setgravity,10,cmdtext);
    dcmd(uconfig,7,cmdtext);
   
    dcmd(forbidname,10,cmdtext);
    dcmd(forbidword,10,cmdtext);
    
	//-= Misc =-//
	dcmd(cambiarhora,11,cmdtext);
	dcmd(cambiarclima,12,cmdtext);
	dcmd(kill,4,cmdtext);
	//dcmd(lhelp,5,cmdtext);
 
   
	dcmd(getinfo,7,cmdtext);
    dcmd(laston,6,cmdtext);
    dcmd(conteo2,7,cmdtext);
    dcmd(asay,4,cmdtext);

	//dcmd(password,8,cmdtext);
	dcmd(lockserver,10,cmdtext);
	dcmd(unlockserver,12,cmdtext);
  //  dcmd(adminarea,9,cmdtext);
   // dcmd(zonavip,7,cmdtext);
 //   dcmd(decir,5,cmdtext);
    dcmd(anuncio,7,cmdtext);
    
  
    dcmd(botcheck,8,cmdtext);
    dcmd(objeto,6,cmdtext);
    dcmd(pickup,6,cmdtext);

    //dcmd(bici,4,cmdtext);
    //dcmd(auto,4,cmdtext);
    //dcmd(bomberman,9,cmdtext);
    //dcmd(nuclear,7,cmdtext);
  //  dcmd(vida,4,cmdtext);
   // dcmd(chaleco,7,cmdtext);
   // dcmd(jetpack1,8,cmdtext);
	//dcmd(invisible,9,cmdtext);
    //dcmd(visible,7,cmdtext);
  //  dcmd(autostun,8,cmdtext);
    dcmd(unbanhld,8,cmdtext);
    dcmd(nunban,6,cmdtext);
    dcmd(nombre,6,cmdtext);
    dcmd(conteo,6,cmdtext);
    #if defined ENABLE_FAKE_CMDS
	dcmd(fakedeath,9,cmdtext);
	dcmd(fakechat,8,cmdtext);
	dcmd(fakecmd,7,cmdtext);
	#endif


	//-= Menu Commands =-//

    
    //--------------desbug
    
    if (strcmp("/desbug", cmd, true, 10) == 0)
    {
	//ResetPlayerWeapons(playerid);
	//SetPlayerInterior(playerid,0);
//	SetPlayerVirtualWorld(playerid,0);
	TogglePlayerControllable(playerid,true);
	ClearAnimations(playerid);
    SetPlayerSpecialAction(playerid, 0);
    new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetPlayerPos(playerid, x, y, z+3);
	//SpawnPlayer(playerid);
    return 1;
    }
    
    if(strcmp(cmdtext, "/nopm", true) == 0)
{
	ADpm[playerid] = 1;
	SendClientMessage(playerid, red,"Desactivaste los PM, activalos de nuevo con /sipm");
	//SendClientMessage(playerid, red,"Activalos de nuevo con /sipm");
	return 1;
}

    
    if(strcmp(cmdtext, "/sipm", true) == 0)
{
	ADpm[playerid] = 0;
	SendClientMessage(playerid, red,"PM , activado ahora recibiras mensajes");
	return 1;
}

if(strcmp(cmdtext, "/park", true) == 0)
{
if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
{
SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando ahora mismo ya que estas en un evento o en un interior.");
return 1;
}
new rand = random(sizeof(RandomSpawnsPark));
SetPlayerPos(playerid, RandomSpawnsPark[rand][0], RandomSpawnsPark[rand][1], RandomSpawnsPark[rand][2]);
		//GameTextForPlayer(playerid,"~r~~h~Bienvenido a ~n~_~g~Golden Park",4000,3);
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{00FF7C}%s utilizo el comando {FF0000}/park.",Nombre);
return SendClientMessageToAll(COLOR_WHITE,string2);		
//return 1;
}


/////////
if(strcmp(cmdtext, "/base", true) == 0)
{
	if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
	{
	SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando ahora mismo ya que estas en un evento o en un interior.");
	return 1;
	}
	if(PlayerInfo[playerid][CLAN_TIENE] == 0)
	{
			SendClientMessage(playerid,COLOR_RED,"No perteneces a un clan.");
			//ShowPlayerDialog(playerid,DIALOG_BASESOLOEXTERMINADOR,DIALOG_STYLE_LIST,"{FF0000}War Blood {FFFFFF}Bases","Base {FFFFFF}EXTERMINADOR","Seleccionar","Cerrar");
    }	
    if(PlayerInfo[playerid][CLAN_TIENE] == 1)
    {
	ShowPlayerDialog(playerid,DIALOG_BASECLANSOLO1,DIALOG_STYLE_LIST,"{FF0000}War Blood {FFFFFF}Bases","Base {87CEEB}SD","Seleccionar","Cerrar");
    }
    if(PlayerInfo[playerid][CLAN_TIENE] == 3)
    {
        ShowPlayerDialog(playerid,DIALOG_BASECLANSOLO3,DIALOG_STYLE_LIST,"{FF0000}War Blood {FFFFFF}Bases","Base {FF0000}SWO","Seleccionar","Cerrar");
    }
    if(PlayerInfo[playerid][CLAN_TIENE] == 4)
    {
        ShowPlayerDialog(playerid,DIALOG_BASECLANSOLO4,DIALOG_STYLE_LIST,"{FF0000}War Blood {FFFFFF}Bases","Base {FFFFFF}GOD","Seleccionar","Cerrar");
    }	
	return 1;
}

/*if(strcmp(cmdtext, "/EXTERMINADORunirse", true) == 0)
{
	if(!EXTERMINADORbase(playerid)) return SendClientMessage(playerid, red, "Corporación EXTERMINADOR: {FFFFFF}No estas en nuestro laboratorio principal de {33FF33}LS.");
//	if(gTeam[playerid] == NO_TEAM)
	{
			ShowPlayerDialog(playerid,DIALOG_EXTERMINADOR,DIALOG_STYLE_LIST,"{FF0000}War Blood {FFFFFF}EXTERMINADOR Corporatión","EXTERMINADOR","Seleccionar","Cerrar");
	}
//	else return ShowPlayerDialog(playerid,DIALOG_CLASS,DIALOG_STYLE_LIST,"{FF0000}War Blood {FFFFFF}Clases","Clases {00FF00}Humanas\nClases {FF0000}Zombies","Seleccionar","Cerrar");
	return 1;
}*/

if(strcmp(cmdtext, "/clases", true) == 0)
{
	if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_ZOMBIES)
	{
		ShowPlayerDialog(playerid,DIALOG_CLASS,DIALOG_STYLE_LIST,"{FF0000}War Blood {FFFFFF}Clases","Clases {00FF00}Humanas\nClases {FF0000}Zombies","Seleccionar","Cerrar");
	}
	else {
		SendClientMessage(playerid, COLOR_RED, "No puedes utilizar el comando /clases en este momento.");
	}
	return 1;
}

//EVENTO BYE PACO
if (strcmp("/pevents",cmdtext,true, 10) == 0)
{
if(PlayerInfo[playerid][Level] >= 2) {
ShowPlayerDialog(playerid,DIALOG_CREAREVENTO,DIALOG_STYLE_LIST,"{FFF000}Panel De Eventos.","Masacre [Oceanside] \nMasacre [Desierto] \nEventos [Personalizados] \nMasacre [Ocean Docks] \nMasacre [WoodBury] \nEscondidas [Casino] \nTDM (Humanos - Exterminadores) \nAvion asesino \nPurga en Los Santos (No Usar) \nHarry Potter (No Usar)\nTDM 2\nRoyal Rumble\nRoyal Rumble 2\nSupervivencia del nemesis","Seleccionar","Salir");
} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
return 1;
}
if(strcmp(cmd, "/autosevento", true) == 0)
	{
        if(PlayerInfo[playerid][Level] >= 3) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
        new tmp[256];
       // new tmp2[256];
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, red, "/autosevento [ID]");
		new Modelo = strval(tmp), Float:x, Float:y, Float:z;
		if(Modelo < 400 || Modelo > 611) return SendClientMessage(playerid, red, "El modelo debe ser mayor que 400 y menor que 600.");
		for(new i = 0; i < sizeof Cars; i ++) { DestroyVehicle(Cars[i]); Cars[i] = -1; }
      //  format(string2,sizeof(string2),"STAFF \"%s\" Dio vehiculos a los jugadores dentro del evento", pName(playerid) );
	    //return SendClientMessageToAll(red, string2);
	//	GetPlayerName(playerid, n, MAX_PLAYER_NAME);
                for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
SendClientMessage(i, red, "{FF0000}El STAFF dio vehiculos a los jugadores dentro del evento.");   
            }
            }  
   		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			GetPlayerPos(i, x, y, z);
        ///    Event[VirtualWorld] = GetPlayerVirtualWorld(i);
			Cars[i] = CreateVehicle(Modelo, x, y, z, 0, random(255), random(255), -1);
            SetVehicleVirtualWorld(Cars[i],Event[VirtualWorld]);
			PutPlayerInVehicle(i, Cars[i], 0);
			LinkVehicleToInterior(Cars[i], GetPlayerInterior(i));
			AddVehicleComponent(Cars[i], 1010);
   			}
		}
        CMDMessageToPac0(playerid,"AUTOSEVENTO");
        SendClientMessage(playerid, red, "Diste autos a todos los jugadores dentro del evento.");
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}	
/*if(strcmp(cmd, "/desarmarevento", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 3) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
        new tmp[256];
		tmp = strtok(cmdtext, idx);

		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{ 
			if(!EstaEnEvento[i]) continue;
            {
            ELOY9N_ResetPlayerWeapons(i);
			CMDMessageToPac0(playerid,"DESARMAREVENTO");
            format(string2,sizeof(string2),"{FF0000}Administrador : {FFFFFF}%s {FFFFFF}desarmo a todos los integrantes del evento ", pName(playerid));
            return SendClientMessage(i,red, string2);
            }
		}
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}*/
/*if(strcmp(cmd, "/chalecoevento", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 3) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
        new tmp[256];
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, red, "/chalecoevento [CANTIDAD]");
		new Colete = strval(tmp);
    	for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
        	if(!EstaEnEvento[i]) continue;
            {
			SetPlayerArmour(i, Colete);
		//	GetPlayerName(playerid, n, MAX_PLAYER_NAME);
			CMDMessageToPac0(playerid,"CHALECOEVENTO");
            format(string2,sizeof(string2),"{FF0000}Administrador : {FFFFFF}%s {FFFFFF}seteo el chaleco a {FFFFFF}%d {FFFFFF}a todos los jugadores del {FF0000}Evento", pName(playerid), Colete);
            return SendClientMessage(i,red, string2);
            }
		}
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}*/
/*if(strcmp(cmd, "/congelarevento", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 3) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
        new tmp[256];
		tmp = strtok(cmdtext, idx);

		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{ 
			if(!EstaEnEvento[i]) continue;
            {
            PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(i,false); 
			CMDMessageToPac0(playerid,"CONGELAREVENTO");
            format(string2,sizeof(string2),"{FF0000}Administrador : {FFFFFF}%s {FFFFFF}congelo a todos los integrantes del evento ", pName(playerid));
            return SendClientMessage(i,red, string2);
            }
		}
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}
if(strcmp(cmd, "/descongelarevento", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 3) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
        new tmp[256];
		tmp = strtok(cmdtext, idx);

		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{ 
			if(!EstaEnEvento[i]) continue;
            {
            PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(i,true); 
			CMDMessageToPac0(playerid,"DESCONGELAREVENTO");
            format(string2,sizeof(string2),"{FF0000}Administrador : {FFFFFF}%s {FFFFFF}descongelo a todos los integrantes del evento ", pName(playerid));
            return SendClientMessage(i,red, string2);
            }
		}
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}    */       
/*	if(strcmp(cmd, "/armasevento", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 3) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
        new tmp[256];
       	tmp = strtok(cmdtext, idx);
       	if(!strlen(tmp)) return SendClientMessage(playerid, red, "/armasevento [ID] [MUNICIÓN]");
		new Arma, Municao;
		Arma = strval(tmp);
       	tmp = strtok(cmdtext, idx);
       	if(!strlen(tmp)) return SendClientMessage(playerid, red, "/armasevento [ID] [MUNICIÓN]");
		Municao = strval(tmp);
		if(Arma > 43) return SendClientMessage(playerid, red, "El ID del arma es incorrecto o no esta dentro de las armas para eventos personalizados");
		if(Municao < 1) return SendClientMessage(playerid, red, "La munición debe ser mayor a 0");
   		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
			GivePlayerWeapon(i, Arma, Municao);
			CMDMessageToPac0(playerid,"ARMASEVENTO");
			format(string2,sizeof(string2),"{FF0000}Administrador : {FFFFFF}%s {FFFFFF}dio el arma {FFFFFF}%d {FFFFFF}munición : {FFFFFF}%d.", pName(playerid), Arma, Municao);
            return SendClientMessage(i,red, string2);
		}
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}   */ 
/*	if(strcmp(cmd, "/skinsevento", true) == 0)
	{
			if(PlayerInfo[playerid][Level] >= 3) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
        new tmp[256];
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, red, "/skinsevento [ID]");
		if(strval(tmp) < 0 || strval(tmp) > 299) return SendClientMessage(playerid, VERMELHO, "La id del skin debe ser entre 0 y 299");
		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
            if(!EstaEnEvento[i]) continue;
            {
			SetPlayerSkin(i, strval(tmp));
			CMDMessageToPac0(playerid,"SKINSEVENTO");
			format(string2,sizeof(string2),"{FF0000}Administrador : {FFFFFF}%s {FF00DE}entrego skins a todos los jugadores del evento , skin :{FFFFFF}%d", pName(playerid), strval(tmp));
            return SendClientMessage(i,red, string2);
            }
		}
		} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}*/        
/*	if(strcmp(cmd, "/vidaevento", true) == 0)
	{
		 if(PlayerInfo[playerid][Level] >= 3) {
       	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado");
        new tmp[256];
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, red, "/vidaevento [CANTIDAD]");
		new Vida = strval(tmp);
		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
			if(!EstaEnEvento[i]) continue;
			SetPlayerHealth(i, Vida);
			CMDMessageToPac0(playerid,"VIDAEVENTO");
            format(string2,sizeof(string2),"{FF0000}Administrador : {FFFFFF}%s {FFFFFF}seteo la vida a {FFFFFF}%d {FFFFFF}a todos los jugadores del {FF0000}Evento", pName(playerid), Vida);
            return SendClientMessage(i,red, string2);
		}
		} else SendClientMessage(playerid, red, "Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}*/
/*if (strcmp("/premioevento",cmdtext,true, 10) == 0)
{
ShowPlayerDialog(playerid,DIALOG_PREMIOEVENTO,DIALOG_STYLE_LIST,"{FFF000}Panel De Premios.","ARC\nGOD\nOG\nWS\nMID.","Seleccionar","Salir");
return 1;
}*/
/*
		{
		if(Event[Oceanside] == true)
		{
		GameTextAll("~w~MASACRE EN Oceanside, PARA INGRESAR UTILIZA\n~b~/EVENTO", 4000, 3);
		}
		}
		if(Event[Masacre] == true)
		{
		GameTextAll("~w~Masacre, PARA INGRESAR UTILIZA\n~b~/EVENTO", 4000, 3);
		}


*/
	if(strcmp(cmd, "/anunciarevento", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 4) {
	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado para anunciar.");
	if(Event[Trancado]) return SendClientMessage(playerid, red, "El evento esta cerrado, no puedes anunciar un evento si este mismo esta cerrado");
	CMDMessageToPac0(playerid,"ANUNCIAREVENTO");
	GameTextAll("~w~PARA INGRESAR AL EVENTO UTILIZA\n~b~/EVENTO", 4000, 3);
	} else SendClientMessage(playerid, red, "ERROR: Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
	}
	if(strcmp(cmd, "/anunciarmasacre", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 8) {
	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado para anunciar.");
	if(Event[Trancado]) return SendClientMessage(playerid, red, "El evento esta cerrado, no puedes anunciar un evento si este mismo esta cerrado");
	CMDMessageToPac0(playerid,"ANUNCIARMASACRE");
	GameTextAll("~w~MASACRE EN Oceanside, PARA INGRESAR AL EVENTO UTILIZA\n~b~/EVENTO", 4000, 3);
	} else SendClientMessage(playerid, red, "ERROR: Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
	}
	/*if(strcmp(cmd, "/anunciarwar", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 8) {
	if(!Event[Creado]) return SendClientMessage(playerid, red, "No hay un evento creado para anunciar.");
	if(Event[Trancado]) return SendClientMessage(playerid, red, "El evento esta cerrado, no puedes anunciar un evento si este mismo esta cerrado");
	CMDMessageToPac0(playerid,"ANUNCIARWAR");
	GameTextAll("~w~MASACRE, PARA INGRESAR AL EVENTO UTILIZA\n~b~/EVENTO", 4000, 3);
	} else SendClientMessage(playerid, red, "
	 Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
	}*/
/*	if(strcmp(cmd, "/premiarnoclan", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 4) {
	GameTextAll("~w~LOS NO CLANES\n~b~GANARON EL EVENTO.", 4000, 3);
	SendClientMessage(playerid, red, "premiaste a los NO-CLANES.");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i))
	if(PlayerInfo[i][CLAN_TIENE] == 0)
	{
	SetPlayerScore(i,(GetPlayerScore(i))+2000);
	PlayerInfo[i][Kills]+=2000;
	ELOY9N_GivePlayerMoney(i,50000);
	CMDMessageToPac0(playerid,"PREMIARNOCLAN");
	GameTextForPlayer(i, "~w~GANASTE,\n~b~+$500.000 + 2.000 SCORE.", 4000, 3);
	return 1;
	}
 	}
	} else SendClientMessage(playerid, red, "ERROR: Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
	}
	if(strcmp(cmd, "/premiararc", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 4) {
	GameTextAll("~w~EL CLAN, ARC\n~b~GANO EL EVENTO.", 4000, 3);
	SendClientMessage(playerid, red, "premiaste al clan ARC.");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i))
	if(PlayerInfo[i][CLAN_TIENE] == 1)
	{
	SetPlayerScore(i,(GetPlayerScore(i))+2000);
	PlayerInfo[i][Kills]+=2000;
	ELOY9N_GivePlayerMoney(i,50000);
	CMDMessageToPac0(playerid,"PREMIARARC");
	GameTextForPlayer(i, "~w~GANASTE,\n~b~+$500.000 + 2.000 SCORE.", 4000, 3);
//	GameTextAll("~w~Masacre, PARA INGRESAR AL EVENTO UTILIZA\n~b~/EVENTO", 4000, 3);
	return 1;
	}
	}
	} else SendClientMessage(playerid, red, "ERROR: Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
	}
	if(strcmp(cmd, "/premiarMID", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 4) {
	GameTextAll("~w~EL CLAN, MID\n~b~GANO EL EVENTO.", 4000, 3);
	SendClientMessage(playerid, red, "premiaste al clan MID.");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i))
	if(PlayerInfo[i][CLAN_TIENE] == 2)
	{
	SetPlayerScore(i,(GetPlayerScore(i))+2000);
	PlayerInfo[i][Kills]+=2000;
	ELOY9N_GivePlayerMoney(i,50000);
	CMDMessageToPac0(playerid,"PREMIARMID");
	GameTextForPlayer(i, "~w~GANASTE,\n~b~+$500.000 + 2.000 SCORE.", 4000, 3);
//	GameTextAll("~w~Masacre, PARA INGRESAR AL EVENTO UTILIZA\n~b~/EVENTO", 4000, 3);
	return 1;
	}
	}
	} else SendClientMessage(playerid, red, "ERROR: Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
	}
	if(strcmp(cmd, "/premiarws", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 4) {
	GameTextAll("~w~EL CLAN, WS\n~b~GANO EL EVENTO.", 4000, 3);
	SendClientMessage(playerid, red, "premiaste al clan WS.");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i))
	if(PlayerInfo[i][CLAN_TIENE] == 3)
	{
	SetPlayerScore(i,(GetPlayerScore(i))+2000);
	PlayerInfo[i][Kills]+=2000;
	ELOY9N_GivePlayerMoney(i,50000);
	CMDMessageToPac0(playerid,"PREMIARWS");
	GameTextForPlayer(i, "~w~GANASTE,\n~b~+$500.000 + 2.000 SCORE.", 4000, 3);
//	GameTextAll("~w~Masacre, PARA INGRESAR AL EVENTO UTILIZA\n~b~/EVENTO", 4000, 3);
	return 1;
	}
	}
	} else SendClientMessage(playerid, red, "ERROR: Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
	}
	if(strcmp(cmd, "/premiarGOD", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 4) {
	GameTextAll("~w~EL CLAN, GOD\n~b~GANO EL EVENTO.", 4000, 3);
	SendClientMessage(playerid, red, "premiaste al clan GOD.");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i))
	if(PlayerInfo[i][CLAN_TIENE] == 4)
	{
	SetPlayerScore(i,(GetPlayerScore(i))+2000);
	PlayerInfo[i][Kills]+=2000;
	ELOY9N_GivePlayerMoney(i,50000);
	CMDMessageToPac0(playerid,"PREMIARGOD");
	GameTextForPlayer(i, "~w~GANASTE,\n~b~+$500.000 + 2.000 SCORE.", 4000, 3);
//	GameTextAll("~w~Masacre, PARA INGRESAR AL EVENTO UTILIZA\n~b~/EVENTO", 4000, 3);
	return 1;
	}
	}
	} else SendClientMessage(playerid, red, "ERROR: Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
	}
	if(strcmp(cmd, "/premiarog", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 4) {
	GameTextAll("~w~EL CLAN, OG\n~b~GANO EL EVENTO.", 4000, 3);
	SendClientMessage(playerid, red, "premiaste al clan OG.");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i))
	if(PlayerInfo[i][CLAN_TIENE] == 5)
	{
	SetPlayerScore(i,(GetPlayerScore(i))+2000);
	PlayerInfo[i][Kills]+=2000;
	ELOY9N_GivePlayerMoney(i,50000);
	CMDMessageToPac0(playerid,"PREMIAROG");
	GameTextForPlayer(i, "~w~GANASTE,\n~b~+$500.000 + 2.000 SCORE.", 4000, 3);
//	GameTextAll("~w~Masacre, PARA INGRESAR AL EVENTO UTILIZA\n~b~/EVENTO", 4000, 3);
	return 1;
	}
	}
	} else SendClientMessage(playerid, red, "ERROR: Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
	}*/

	if(strcmp(cmd, "/menusdfeventos", true) == 0)
	{
		new string[900];
		if(PlayerInfo[playerid][Level] >= 2) {
		CMDMessageToPac0(playerid,"MENUEVENTOS");
		strcat(string, "{00FF84}\n>/CREAREVENTO - {FFFFFF}Sirve para crear un evento.\n");
		strcat(string, "{00FF84}>/TERMINAREVENTO - {FFFFFF}Sirve para terminar un evento.\n");
		strcat(string, "{00FF84}>/VIDAEVENTO - {FFFFFF}sirve para dar una cierta cantidad de vida para los jugadores que están en el evento.\n");
		strcat(string, "{00FF84}>/CHALECOEVENTO - {FFFFFF}Sirve para dar una cierta cantidad de armaduras para los jugadores que están en el evento.\n");
		strcat(string, "{00FF84}>/ARMAREVENTO - {FFFFFF}Sirve para dar armas para los jogadores que estãn en el evento.\n");
		strcat(string, "{00FF84}>/AUTOEVENTO - {FFFFFF}Sirve para dar a los jugadores que están en el evento un vehículo.\n");
       	strcat(string, "{00FF84}>/SALIREVENTO - {FFFFFF}Sirve para salir del evento.\n");
       	strcat(string, "{00FF84}>/IREVENTO - {FFFFFF}Sirve para entrar en el evento.\n");
       	strcat(string, "{00FF84}>/CERRAREVENTO - {FFFFFF}Sirve para cerrar el evento.\n");
       	strcat(string, "{00FF84}>/ABRIREVENTO - {FFFFFF}Sirve para abrir el evento.\n");
       	strcat(string, "{00FF84}>/SKINEVENTO - {FFFFFF}Sirve para poner un skin a los jugadores que estãn en el evento.\n");
       	strcat(string, "{00FF84}>/ANUNCIAREVENTO - {FFFFFF}Sirve Para anunciar el evento que has abierto!\n.");
       	strcat(string, "{00FF84}>/LUGARESEVENTO - {FFFFFF}Sirve Para Ver Algunos Lugares Donde Hay Puedes Crear Evento(OPSCIONAL)!.");
		ShowPlayerDialog(playerid, 794, DIALOG_STYLE_MSGBOX, "Menu Eventos Para Crear Eventos", string, "Aceptar", "");
		} else SendClientMessage(playerid, red, "Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}
		if(strcmp(cmd, "/lugareddsevento", true) == 0)
	{
		new string[900];
		if(PlayerInfo[playerid][Level] >= 2) {
		CMDMessageToPac0(playerid,"MENUEVENTOS");
		strcat(string, "{00FF84}\n>/EVENTODM - {FFFFFF}Sirve Para Ir Al Lugar Donde Creas Un Evento DM.\n");
       	strcat(string, "{00FF84}>/EVENTOESCONDIDAS - {FFFFFF}Sirve Para Ir Al Lugar Donde Creas Un Evento De Escondidas!.");
		ShowPlayerDialog(playerid, 794, DIALOG_STYLE_MSGBOX, "Lugares Eventos Para Crear Eventos", string, "Aceptar", "");
		} else SendClientMessage(playerid, red, "{29FF0D}Necesitas ser administrador con el nivel que requiere este comando.");
		return 1;
	}
		if(strcmp(cmdtext, "/esdventodm", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 2) {
	SetPlayerPos(playerid,-36.326530,1913.217651,18.818613);
	} else SendClientMessage(playerid, red, "Necesitas ser Administrador nivel 2 {29FF0D}para usar este comando");
	return 1;
	}
			if(strcmp(cmdtext, "/eventoedfscondidas", true) == 0)
	{
	if(PlayerInfo[playerid][Level] >= 2) {
	SetPlayerPos(playerid,363.099212,174.455474,1008.389343);
	SetPlayerInterior(playerid,3);
	} else SendClientMessage(playerid, red, "Necesitas ser administrador con el nivel que requiere este comando.");
	return 1;
	}
	//----------------------------duda y infovip --------------------------
	
	if(strcmp(cmd, "/Duda", true) == 0)
{
if(IsPlayerConnected(playerid))
{
if(DudaEnviada[playerid] == 1)
{
SendClientMessage(playerid, red, "Espera unos minutos para mandar otra duda");
return 1;
}
if(PlayerInfo[playerid][Level] >= 2)
{
SendClientMessage(playerid, red, "Eres admistrador y no puedes enviar una duda");
return 1;
}
ShowPlayerDialog(playerid,Dialog_Duda,DIALOG_STYLE_INPUT,"{3EE4DE}Duda","{1D83F8}Porfavor, Describe Lo Más Posible Tu Duda","Enviar","Cancelar");
}
return 1;
}
/*if(strcmp(cmdtext, "/InfoVip", true) == 0)
{
new string[1000];
strcat(string, "{ffffff}1.-Respetar Las reglas\n\n");
strcat(string, "{ffffff}2.-Siempre Ayudar A Las Nuevos Users,Tendra Mas probabilidades De ganar Level Admin\n\n");
strcat(string, "{ffffff}3.-No Joder a Los Administradores que te den VIP\n\n");
strcat(string, "{ffffff}4.-Los Score Para Ser Vip Son Lo Siguientes:\n\n");
strcat(string, "{F20000}Cuenta Vip                 Score / Costo\n\n");
strcat(string, "{00FF00}/Bronce                           100 000\n\n");
strcat(string, "{00FF00}/Silver                             150 000\n\n");
strcat(string, "{00FF00}/Gold                               200 000\n\n");
strcat(string, "{00FF00}/Premium                          $ 5 us\n\n");
strcat(string, "{00FF00}/Extremo                           $ 7 us\n\n");
strcat(string, "{ffffff}Si No eres Vip Auque Tengas El Score Nesesario posiblemente es un Bug, Avisale A los {00FF00}Encargados del servidor.\n\n");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{FFFFFF}InfoVip: {FF0000}Ayuda Vip",string,"Aceptar", "");
return 1;
}*/
//----------------------------------/texto-----------------------

/*if (strcmp("/secreto3dlabel", cmdtext, true, 10) == 0)
{
ShowPlayerDialog(playerid, BUBBLE, DIALOG_STYLE_INPUT, "{ffffff}TEXTO","{ffffff}Este mensaje ira arriba de tu nick\nSolo los demas players lo podran ver","Poner","Cancelar");
return 1;
}*/
//-----------------------------------------------------------------------

//		new playermoney;
//		new sendername[MAX_PLAYER_NAME];
//		new giveplayer[MAX_PLAYER_NAME];
//		new giveplayerid, moneys;

 	/*	if(strcmp(cmd, "/dardinero", true) == 0) {
        string2 = strtok(cmdtext, idx);
        if(!strlen(string2)) {
        SendClientMessage(playerid, COLOR_RED, "/dardinero [playerid] [cantidad]");
        return 1;
        }

        giveplayerid = strval(string2);
        string2 = strtok(cmdtext, idx);
        if(!strlen(string2)) {
        SendClientMessage(playerid, COLOR_RED, "/dardinero [playerid] [cantidad]");
        return 1;
        }
        moneys = strval(string2);

        if (IsPlayerConnected(giveplayerid)) {
        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
        GetPlayerName(playerid, sendername, sizeof(sendername));
        playermoney = GetPlayerMoney(playerid);
        if (moneys > 0 && playermoney >= moneys) {
        ELOY9N_GivePlayerMoney(playerid, (0 - moneys));
        ELOY9N_GivePlayerMoney(giveplayerid, moneys);
        format(string2, sizeof(string2), "Tu le has Transferido a %s[JUGADOR: %d], $%d.", giveplayer,giveplayerid, moneys);
        SendClientMessage(playerid, COLOR_RED, string2);
        format(string2, sizeof(string2), "Tu Has Recibido $%d DE %s[JUGADOR: %d].", moneys, sendername, playerid);
        SendClientMessage(giveplayerid, COLOR_RED, string2);
        }else {
        SendClientMessage(playerid, COLOR_RED, "CANTIDAD INVALIDA.");
        }
        }else {
        format(string2, sizeof(string2), "%d jugador no encontrado.", giveplayerid);
        SendClientMessage(playerid, COLOR_GREY, string2);
        }
        return 1;
        }*/
        
        if(strcmp("/caneqcion",cmdtext, true) == 0)
{
if(PlayerInfo[playerid][Level] < 2) return SendClientMessage(playerid, red, "{FFFFFF}{29FF0D}Necesitas ser {FFFFFF}Administrador nivel 2 {29FF0D}para usar este comando");
ShowPlayerDialog(playerid,NMusica,DIALOG_STYLE_INPUT,"Cancion","- Pon El Nombre De La Cancion Que Vas A Poner-","Seguir","Cancelar");
return 1;
}

/*if(strcmp("/mp3",cmdtext, true) == 0)
{
	ShowPlayerDialog(playerid,NMusica2,DIALOG_STYLE_INPUT,"{FF0000}War Blood {FFFFFF} MP3","- Introduce el link de la cancion que quieres reproducir-","Seguir","Cancelar");
	return 1;
}*/

//--------------cmdsvip

/*if(strcmp(cmdtext, "/cmdsvip", true) == 0)
{
	new string[2048];
strcat(string, "{D17D00}Comandos VIP Nivel 1\n\n");
	strcat(string, "{FFFFFF}/saveplace - /gotoplace - Guarda y carga una posicion.\n");
	strcat(string, "/fix - Repara un vehiculo\n");
	strcat(string, "/invisible - /visible - Te hace invisible/visible en el radar.\n");
	strcat(string, "/autostun - Lista de autos tuneados.\n");
	strcat(string, "/digo [Texto] - Para decir algo en el chat global como VIP.\n");
    strcat(string, "/zonavip - /zonavip2 - Para ir a zonas VIP.\n");
    strcat(string, "/InfoReport - Para Reportar Un Admin. Si Juegas Con Esto Te Quitare El Vip\n\n");
    strcat(string, "{C9DAF4}Comandos VIP Nivel 2\n\n");
    strcat(string, "{FFFFFF}/vflip - Para enderezar un vehiculo.\n");
    strcat(string, "/ltune - Tuneo (nitro y suspension).\n");
    strcat(string, "/Porno - Para mayores de edad.\n");
    strcat(string, "/vcolor - Cambia el color del vehiculo.\n");
    strcat(string, "/dia - /noche - Para hacer de dia o noche.\n\n");
    strcat(string, "{F6E400}Comandos VIP Nivel 3\n\n");
    strcat(string, "{FFFFFF}/Vida - Para llenar la barra de vida.\n");
    strcat(string, "/chaleco - Para reponer la armadura.\n");
    strcat(string, "/jetpack - Te da un jetpack solo una vez.\n");
    strcat(string, "/tiempovip - Cambia tu hora.\n\n");
    strcat(string, "{00FFFF}Comandos VIP Nivel 4\n\n");
    strcat(string, "{FFFFFF}/vclima - Para cambiar el clima\n");
    strcat(string, "/decir - Anunciar o publicar algo.\n\n");
    strcat(string, "{FF5530}Comandos VIP Nivel 5\n\n");
    strcat(string, "{FFFFFF}/vkick - Para kickear a un jugador (si juegas con esto se te quitara el Vip.\n");
    strcat(string, "/bomberman - Explotar!!\n");
    strcat(string, "/fly - Volar como Ironman\n\n");
    strcat(string, "Para usar el chat VIP escribe $ antes del texto.\n");
		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Comandos V.I.P | War Blood",string,"Aceptar", "");
	return 1;
 }
        //__________________Hispano___________________________________________________________//
	if(strcmp(cmdtext, "/Extremo", true) == 0)
{
	new string[1000];
strcat(string, "{5DD88E}+ Comandos Bronce Silver Gold y Premium\n");
	strcat(string, "{EF6F1F}/bomberman /fly /nuclear\n");
	strcat(string, "{5DD88E}Usa /InfoReport Para Reportar Un Admin. Si Juegas Con Esto Te Quitare El Vip\n");
	strcat(string, "{57E0F0}Costo $ 7 us");
		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00FF00}Comandos Extremo",string,"Aceptar", "");
	return 1;
 }
//__________________Diamante___________________________________________________________//
	if(strcmp(cmdtext, "/premium", true) == 0)
{
	new string[1000];
strcat(string, "+ Comandos Bronce Silver y Gold \n");
strcat(string, "{EF6F1F}/auto   /decir, y No Caerse De La Moto con Y \n");
	strcat(string, "{5DD88E}Usa /InfoReport Para Reportar Un Admin. Si Juegas Con Esto Te Quitare El Vip\n");
	strcat(string, "{57E0F0}Costo $ 5 us");
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00FF00}Comandos Platinum",string,"Aceptar", "");
	return 1;
 }
//__________________ORO______________________________________________________________//
	if(strcmp(cmdtext, "/gold", true) == 0)
{
	new string[1000];
	strcat(string, "+ Comandos Bronce y Silver\n");
	strcat(string, "{5DD88E}/vida\n");
	strcat(string, "{EF6F1F}/chaleco\n");
	strcat(string, "{5DD88E}/jetpack1\n");
	strcat(string, "{EF6F1F}Usa /InfoReport Para Reportar Un Admin. Si Juegas Con Esto Te Quitare El Vip\n");
	strcat(string, "{57E0F0}Necesario 250 000 Score");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00FF00}Comandos Gold",string,"Aceptar", "");
	return 1;
 }
//__________________PLATA__________________________________________________________________
 	if(strcmp(cmdtext, "/Silver666", true) == 0)
{
new string[1000];
	strcat(string, "+ Comandos Bronce\n");
    strcat(string, "{5DD88E}/bici\n");
	strcat(string, "{EF6F1F}/ltune\n");
	strcat(string, "{5DD88E}/vflip\n");
	strcat(string, "{EF6F1F}/porno <<<----- Espero Que Lo Uses Si Solo Eres Mayor de Edad\n");
	strcat(string, "{5DD88E}Usa /InfoReport Para Reportar Un Admin. Si Juegas Con Esto Te Quitare El Vip\n");
	strcat(string, "{57E0F0}Necesario 150 000 Score");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00FF00}Comandos Silver",string,"Aceptar", "");
	return 1;
	}
//===============================BRONCE=========================================================================
	if(strcmp(cmdtext, "/Bronce666", true) == 0)
{
new string[1000];
	strcat(string, "{5DD88E}/saveplace <<<<<<<<-------- GUARDAR UNA POSICION\n");
	strcat(string, "{EF6F1F}/gotoplace <<<<<<<<------------ CARGAR UNA POSICION\n");
	strcat(string, "{5DD88E}/fix <<<<<<<<<------Repara Auto\n");
	strcat(string, "{EF6F1F}/invisible y /visible <<-- Te haces invisible en el mapa\n");
	strcat(string, "{5DD88E}/autostun  <<<<<----Menu de autos tuneados\n");
	strcat(string, "{EF6F1F}/autosRC  <<<<<---Un Auto RC\n");
	strcat(string, "{5DD88E}Usa /ZonaVip y /ZonaVip2 , para ir a una zona especialmente para ustedes\n");
	strcat(string, "{EF6F1F}Usa /InfoReport Para Reportar Un Admin. Si Juegas Con Esto Te Quitare El Vip\n");
	strcat(string, "{57E0F0}Necesario 100000 Score");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "{00FF00}Comandos Bronce",string,"Aceptar", "");
	return 1;
	}

		if(strcmp(cmdtext, "/inforeport", true) == 0)
	{
	ShowPlayerDialog(playerid, 37, DIALOG_STYLE_MSGBOX, "Informacion Para Reportar Admins", "Siendo Usuario Bronce Puedes Reportar a Un Admin Por Las Siguientes Causas\n{FF0000}Abusar De (razon) ejemplo Abusar De /fix\nUsa Autos Proibidos Tankes Etc\nJuega COn Tu Player o Da Kicks Sin Razon\nEtc.. Tienen que Ser Reportes Especificos\nDe Lo Contrario Seran Desechados\n\n{FF00FF}No Jueges Con Esto o Perderas El VIP\nEl Comando Para Reportar Es\n\n{FFFFFF}/reportarAdmin", "Aceptar", "");
	return 1;
	}
	//==============================================
//========================= [ Car Commands ]====================================

	if(strcmp(cmdtext, "/ltunedcar2", true)==0 || strcmp(cmdtext, "/ltc2", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToPac0(playerid,"LTunedCar");	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
	    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,1);
	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = LVehicleIDt;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar3", true)==0 || strcmp(cmdtext, "/ltc3", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToPac0(playerid,"LTunedCar");	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
	    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,2);
	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = LVehicleIDt;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar4", true)==0 || strcmp(cmdtext, "/ltc4", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(559,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
    	AddVehicleComponent(carid,1065);    AddVehicleComponent(carid,1067);    AddVehicleComponent(carid,1162); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073);	ChangeVehiclePaintjob(carid,1);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar5", true)==0 || strcmp(cmdtext, "/ltc5", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(565,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
	    AddVehicleComponent(carid,1046); AddVehicleComponent(carid,1049); AddVehicleComponent(carid,1053); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar6", true)==0 || strcmp(cmdtext, "/ltc6", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
    	AddVehicleComponent(carid,1088); AddVehicleComponent(carid,1092); AddVehicleComponent(carid,1139); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
 	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar7", true)==0 || strcmp(cmdtext, "/ltc7", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(561,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
    	AddVehicleComponent(carid,1055); AddVehicleComponent(carid,1058); AddVehicleComponent(carid,1064); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar8", true)==0 || strcmp(cmdtext, "/ltc8", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
	    AddVehicleComponent(carid,1034); AddVehicleComponent(carid,1038); AddVehicleComponent(carid,1147); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar9", true)==0 || strcmp(cmdtext, "/ltc9", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(567,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
	    AddVehicleComponent(carid,1102); AddVehicleComponent(carid,1129); AddVehicleComponent(carid,1133); AddVehicleComponent(carid,1186); AddVehicleComponent(carid,1188); ChangeVehiclePaintjob(carid,1); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1085); AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1086);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar10", true)==0 || strcmp(cmdtext, "/ltc10", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
   		AddVehicleComponent(carid,1092); AddVehicleComponent(carid,1166); AddVehicleComponent(carid,1165); AddVehicleComponent(carid,1090);
	    AddVehicleComponent(carid,1094); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1163);//SPOILER
	    AddVehicleComponent(carid,1091); ChangeVehiclePaintjob(carid,2);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar11", true)==0 || strcmp(cmdtext, "/ltc11", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(557,X,Y,Z,Angle,1,1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
		AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1081);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar12", true)==0 || strcmp(cmdtext, "/ltc12", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		} else  {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(535,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
		ChangeVehiclePaintjob(carid,1); AddVehicleComponent(carid,1109); AddVehicleComponent(carid,1115); AddVehicleComponent(carid,1117); AddVehicleComponent(carid,1073); AddVehicleComponent(carid,1010);
	    AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1114); AddVehicleComponent(carid,1081); AddVehicleComponent(carid,1119); AddVehicleComponent(carid,1121);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}
//------------------------------------------------------------------------------
	if(strcmp(cmdtext, "/ltunedcar13", true)==0 || strcmp(cmdtext, "/ltc13", true)==0)	{
	if(PlayerInfo[playerid][Level] >= 1) {
		if(IsPlayerInAnyVehicle(playerid)) SendClientMessage(playerid,red,"Usted ya tiene un vehículo");
		else {
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
		new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        carid = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
  		AddVehicleComponent(carid,1034); AddVehicleComponent(carid,1038); AddVehicleComponent(carid,1147);
		AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,0);
	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PlayerInfo[playerid][pCar] = carid;
		}
	} else SendClientMessage(playerid,red,"Necesitas nivel 1 para utilizar este comando.");
	return 1;	}

//------------------------------------------------------------------------------
 	if(strcmp(cmd, "/write", true) == 0) {
	if(PlayerInfo[playerid][Level] >= 5) {
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
			SendClientMessage(playerid, red, "/write [Colour] [Text]");
			return SendClientMessage(playerid, red, "Colours: 0=black 1=white 2=red 3=marron 4=red 5=green 6=blue 7=purple 8=brown 9=pink");
	 	}
		new Colour;
		Colour = strval(tmp);
		if(Colour > 9 )	{
			SendClientMessage(playerid, red, "/write [Colour] [Text]");
			return SendClientMessage(playerid, red, "Colours: 0=black 1=white 2=red 3=marron 4=red 5=green 6=blue 7=purple 8=brown 9=pink");
		}
		tmp = strtok(cmdtext, idx);

        CMDMessageToPac0(playerid,"WRITE");

        if(Colour == 0) {	format(string2,sizeof(string2),"%s",cmdtext[9]);	SendClientMessageToAll(black,string2); return 1;	}
        else if(Colour == 1) {	format(string2,sizeof(string2),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_WHITE,string2); return 1;	}
        else if(Colour == 2) {	format(string2,sizeof(string2),"%s",cmdtext[9]);	SendClientMessageToAll(red,string2); return 1;	}
        else if(Colour == 3) {	format(string2,sizeof(string2),"%s",cmdtext[9]);	SendClientMessageToAll(marron,string2); return 1;	}
        else if(Colour == 4) {	format(string2,sizeof(string2),"%s",cmdtext[9]);	SendClientMessageToAll(red,string2); return 1;	}
        else if(Colour == 5) {	format(string2,sizeof(string2),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_GREEN1,string2); return 1;	}
        else if(Colour == 6) {	format(string2,sizeof(string2),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_RED,string2); return 1;	}
        else if(Colour == 7) {	format(string2,sizeof(string2),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_PURPLE,string2); return 1;	}
        else if(Colour == 8) {	format(string2,sizeof(string2),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_BROWN,string2); return 1;	}
        else if(Colour == 9) {	format(string2,sizeof(string2),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_PINK,string2); return 1;	}
        return 1;
	} else return SendClientMessage(playerid,red,"Necesitas nivel 5 para utilizar este comando.");
	}
*/
//-------------------------------------------



//-----------------------------------------------

if(strcmp("/comandos", cmdtext, true, 10) == 0)
{
new string[2048];
strcat(string, "/ayuda.\n");
strcat(string, "/desbloquear - Para permitir que se teletransporten a tu posición.\n");
strcat(string, "/items - Menu de items.\n");
strcat(string, "/creditos.\n");
strcat(string, "/kill - Para suicidarte.\n");
strcat(string, "/ignorar - Para parar alguna musica sonando en el server.\n");
strcat(string, "/pm  -  Mandar un mensaje privado a otro jugador.\n");
strcat(string, "/nopm -  Bloquear los mensajes privados\n");
strcat(string, "/sipm -  Permitir que te envien mensajes privados.\n");
//strcat(string, "/subirrango -  Para ver cuantos puntos faltan de tu proximo rango y subir tu rango.\n");
strcat(string, "/salirevento - Salir de un evento.\n");
strcat(string, "/park - Teletrasportarse a una posición cercana de la cura.\n");
strcat(string, "/vips - Ver los miembros activos.\n");
strcat(string, "/clanes - Ver lista de clanes.\n");
strcat(string, "/autos - Comprar un auto.\n");
strcat(string, "/duda -  Hacerle una pregunta a los administradores.\n");
strcat(string, "/animaciones - Ver la lista de animaciones disponibles.\n");
strcat(string, "/armas - Equiparte.\n");
strcat(string, "/estilopelea - Cambiar el estilo de pelea.\n");
strcat(string, "/misiones - Ver el progreso de tus misiones.\n");
strcat(string, "/desbug - Para desbuguearte.\n");
strcat(string, "/admins - Para ver la lista de admins conectados.\n");
ShowPlayerDialog(playerid, DComando, DIALOG_STYLE_MSGBOX, "{FF0000}War Blood {FFFFFF}comandos principales", string, "Siguiente", "Salir");
return 1;
}

if(strcmp("/reglas", cmdtext, true, 10) == 0)
{
new string[2048];
strcat(string, "1.No hacer spam mandar ip de algún servidor o link de alguna pagina que no sea referente a War Blood, o promocionar por medio del chat global algun servidor.\n");
strcat(string, "2.No tener multicuentas, esto podria generar reseteo de cuenta.\n");
strcat(string, "3.Respetar a todos los usuarios incluyendo administradores, si tienes problemas con algun admin, debes hablarlo con algun manager o dueño.\n");
strcat(string, "4.No se tolerara la toxicidad debes moderar tus palabras y pensar antes de enviar cada palabra, recuerda que el servidor es para divertirse.\n");
strcat(string, "5.No hacer flood o saturar el chat, si lo haces constantemente se te aplicara ban permanente..\n");
strcat(string, "6.No usar nombres (nicks) que promocionen algun servidor o pagina que no sea referente a War Blood, no usar nombres absurdos y obscenos..\n");
strcat(string, "7.No mal usar el /reportar, como saturarlo o reportar por cosas sin sentido,  los administradores estaran atentos a tu reporte solo debes tener paciencia..\n");
strcat(string, "8.No usar cualquier tipo de mod que da ventaja, porfavor respetar ello..\n");
//strcat(string, "/Listavip - Para ver la lista de VIPs.");
//howPlayerDialog(playerid,1111,DIALOG_STYLE_LIST, "{FF0000}War Blood {FFFFFF}| Reglas", string,"Salir");
ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_MSGBOX, "{FF8400}War Blood - Reglas", string, "Aceptar", "");
return 1;
}
if (strcmp("/autos", cmdtext, true, 10) == 0)
{
if(gTeam[playerid] == NO_TEAM)
{
//ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "Vehiculos", "Autos", "Seleccionar","Cancelar");
ShowPlayerDialog(playerid, MAUTOS+1,DIALOG_STYLE_LIST,"{FFFFFF}Autos","{FFFFFF}Mesa {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $5.000.\n{FFFFFF}Sabre {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $10.000.\nBlistac {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $20.000.\nSecuricar {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $50.000.\nPatriot {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO {33FF33}Precio: $60.000.","Seleccionar","Salir");
return 1;
}
else
{
SendClientMessage(playerid, 0xFF0000FF, "Nececitas ser humano para poder comprar autos.");
return 1;
}
}

//----------------------------------objetos--------------

if (strcmp("/objetos", cmdtext, true, 10) == 0)
{
//if(PlayerInfo[playerid][VIP_TIENE] < 4)
//{
if(PlayerInfo[playerid][VIP_TIENE] < 4) return SendClientMessage(playerid,red,"Usted no tiene el nivel de membresia vip suficiente.");
{
//}
//if(PlayerInfo[playerid][VIP_TIENE] >= 4)
//{
		SendClientMessage(playerid,COLOR_RED,"Para remover los objetos usa /soltar.");
    	ShowPlayerDialog(playerid,Object,DIALOG_STYLE_LIST,"Objetos | War Blood - VIPS","Fuego\nChispas\nChispas-2\nChispas-3\nBengala\nSuciedad","Ok","Cerrar");
    	return 1;
    	}
	}

	if(strcmp("/soltar",cmdtext, true, 10) ==0)
	{
		RemovePlayerAttachedObject(playerid,1);
		RemovePlayerAttachedObject(playerid,2);
		RemovePlayerAttachedObject(playerid,3);
		RemovePlayerAttachedObject(playerid,4);
		RemovePlayerAttachedObject(playerid,6);
		RemovePlayerAttachedObject(playerid,5);
		RemovePlayerAttachedObject(playerid,7);
		RemovePlayerAttachedObject(playerid,8);
		RemovePlayerAttachedObject(playerid,9);
		RemovePlayerAttachedObject(playerid, Masacara_OBJETO);
		//RemovePlayerAttachedObject(playerid,13);
		//RemovePlayerAttachedObject(playerid,14);
		//RemovePlayerAttachedObject(playerid,15);
		//RemovePlayerAttachedObject(playerid,16);
        return 1;
	}
	
	//======================matricula
	
	
/*if(strcmp(cmdtext, "/matricula", true) == 0)
{
new msg[256+1];
new name[MAX_PLAYER_NAME+1];
GetPlayerName(playerid,name,MAX_PLAYER_NAME);
format(msg,256,"Ingresa el nombre de la Matrícula: \nMàximo de caràcteres  [4- a 8]\n",name);
ShowPlayerDialog(playerid,Matricula,DIALOG_STYLE_INPUT,"Matricula | War Blood",msg,"Cambiar","Cancelar");
return 1;
}*/

//==================================animaciones==========================

if(strcmp(cmd, "/rendirse", true) == 0) {
if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
return 1;
}
}
//Drunk
if(strcmp(cmd, "/drunk", true) == 0) {
if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
{
ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);
//SendClientMessage(playerid, 0x339900AA, "borrachin"); // Walk Drunk
return 1;
}
}
// Place a Bomb
if (strcmp("/bomba", cmdtext, true) == 0) {
ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0); // Place Bomb
return 1;
}
// Police Arrest
if (strcmp("/arrestado", cmdtext, true) == 0) {
ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500); // Gun Arrest
//SendClientMessage(playerid, 0x339900AA, "Quieto");
return 1;
}

// Laugh
if (strcmp("/jaja", cmdtext, true) == 0) {
ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0); // Laugh
//SendClientMessage(playerid, 0x339900AA, "Jajajaja");
return 1;
}
// Rob Lookout
if (strcmp("/sapiar", cmdtext, true) == 0) {
ApplyAnimation(playerid,"PED","roadcross_female",4.1,0,0,0,0,0); // Rob Lookout
//SendClientMessage(playerid, 0x339900AA, "Sapiando");
return 1;
}
// Rob Threat
if (strcmp("/amenazar", cmdtext, true) == 0) {
ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500); // Rob
//SendClientMessage(playerid, 0x339900AA, "Pasa las moneas");
return 1;
}
// wank in
if (strcmp("/paja", cmdtext, true) == 0) {
ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0); // Wank In
SendClientMessage(playerid, 0x339900AA, "/irsecortao");
return 1;
}
// Wank Out
if (strcmp("/irsecortao", cmdtext, true) == 0) {
ApplyAnimation(playerid, "PAULNMAC", "wank_out", 4.0, 0, 0, 0, 0, 0); // Wank Out
//SendClientMessage(playerid, 0x339900AA, "Te fuiste cortao");
return 1;
}
// Agredido
if (strcmp("/agredido", cmdtext, true) == 0) {
ApplyAnimation(playerid, "POLICE", "crm_drgbst_01", 4.0, 0, 0, 0, 1, 0); // Arrested
SendClientMessage(playerid, 0x339900AA, "para continuar /levantarse");
return 1;
}
// Injury
if (strcmp("/herido", cmdtext, true) == 0) {
ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0); // Injured
SendClientMessage(playerid, 0x339900AA, "para continuar /agonizar");
return 1;
}
// encender
if (strcmp("/prender", cmdtext, true) == 0) {
ApplyAnimation(playerid, "SMOKING", "M_smk_in", 4.000000, 0, 0, 1, 1, 0); // opcion /apagar /inhalar
SendClientMessage(playerid, 0x339900AA, "para continuar /inhalar o /apagar");
return 1;
}
// inhalar
if (strcmp("/inhalar", cmdtext, true) == 0) {
ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.000000, 1, 0, 0, 0, -1); //opcion apagar
SendClientMessage(playerid, 0x339900AA, "para continuar /apagar");
return 1;
}
// apagar
if (strcmp("/apagar", cmdtext, true) == 0) {
ApplyAnimation(playerid, "SMOKING", "M_smk_out", 4.000000, 0, 1, 1, 0, 0);
return 1;
}
// Cop Look
if (strcmp("/vigilar", cmdtext, true) == 0) {
ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000); // Cop Looking
return 1;
}
// pabajo recostarse //
if (strcmp("/recostarse", cmdtext, true) == 0) {
ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0); // Lay down
SendClientMessage(playerid, 0x339900AA, "para continuar /ignorarse");
return 1;
}
// parriba recostarse //
if (strcmp("/ignorarse", cmdtext, true) == 0) {
ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_out", 4.0, 0, 0, 0, 0, 0); // Lay down
return 1;
}
// Take Cover
if (strcmp("/cubrirse", cmdtext, true) == 0) {
ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0); // Taking Cover
SendClientMessage(playerid, 0x339900AA, "para continuar /ignorarse");
return 1;
}
// Vomit
if (strcmp("/vomitar", cmdtext, true) == 0) {
ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
//SendClientMessage(playerid, 0x339900AA, "buaaaaajjj");
return 1;
}
// Eat Burger
if (strcmp("/cenar", cmdtext, true) == 0) {
ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0); // Eat Burger
return 1;
}
// Wave
if (strcmp("/chao", cmdtext, true) == 0) {
ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0, 0, 0, 0, 0, 0); // Wave
//SendClientMessage(playerid, 0x339900AA, "chao");
return 1;
}
// Slap Ass
if (strcmp("/palmada", cmdtext, true) == 0) {
ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0); // Ass Slapping
//SendClientMessage(playerid, 0x339900AA, "su palmadita");
return 1;
}
// Death Crawling
if (strcmp("/agonizar", cmdtext, true) == 0) {
ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0); // Dead Crawling
SendClientMessage(playerid, 0x339900AA, "para continuar /levantarse");
return 1;
}
// pararse de frente
if (strcmp("/levantarse", cmdtext, true) == 0) {
ApplyAnimation(playerid, "ped", "getup_front", 4.000000, 0, 0, 0, 0, 0);//ignorarse
return 1;
}
// Dealer
if (strcmp("/traficar", cmdtext, true) == 0) {
ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0); // Deal Drugs
//SendClientMessage(playerid, 0x339900AA, "pasando y pasando");
return 1;
}
// Kiss
if (strcmp("/beso", cmdtext, true) == 0) {
ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0); // Kiss
return 1;
}
// Crack Dieing
if (strcmp("/crack", cmdtext, true) == 0) {
ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 1, 0); // Dieing of Crack
SendClientMessage(playerid, 0x339900AA, "para continuar /levantarse");
return 1;
}
// Piss
if (strcmp("/mear", cmdtext, true) == 0) {
ApplyAnimation(playerid, "PAULNMAC", "Piss_in", 4.0, 0, 0, 0, 0, 0); // Pissing
//SendClientMessage(playerid, 0x339900AA, "psssssssssss");
return 1;
}
//orinar
if (strcmp("/orinar", cmdtext, true, 10) == 0)
    {
    SetPlayerSpecialAction(playerid, 68);
    return 1;
}
// Male Smoking
if (strcmp("/fumar1", cmdtext, true) == 0) {
ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0); // Smoke
return 1;
}
// Sit
if (strcmp("/sentarse", cmdtext, true) == 0) {
ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);
SendClientMessage(playerid, 0x339900AA, "para continuar /ignorarse");
return 1;
}
// pararse
if (strcmp("/ignorarse", cmdtext, true) == 0) {
ApplyAnimation(playerid, "ped", "SEAT_up", 4.000000, 0, 1, 1, 1, 0);
return 1;
}
// Fuck U
if (strcmp("/fokear", cmdtext, true) == 0) {
ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 ); // Wave fist / Pull fingers (with block hands)
//SendClientMessage(playerid, 0x339900AA, "que te pasa ql?");
return 1;
}
// si
if (strcmp("/si", cmdtext, true) == 0) {
ApplyAnimation(playerid, "GANGS", "Invite_Yes", 4.0, 0, 0, 0, 0, 0); // si
//SendClientMessage(playerid, 0x339900AA, "si");
return 1;
}
// no
if (strcmp("/no", cmdtext, true) == 0) {
ApplyAnimation(playerid, "GANGS", "Invite_No", 4.0, 0, 0, 0, 0, 0); // no
//SendClientMessage(playerid, 0x339900AA, "no");
return 1;
}
// llamar
if (strcmp("/llamada", cmdtext, true) == 0) {
ApplyAnimation(playerid, "ped", "phone_in", 4.000000, 0, 0, 0, 1, 4000); // llamar
SendClientMessage(playerid, 0x339900AA, "para continuar /colgar");
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
return 1;
}
// contestar
if (strcmp("/contestacion", cmdtext, true) == 0) {
ApplyAnimation(playerid, "ped", "phone_in", 4.000000, 0, 0, 0, 1, 4000); // llamar
SendClientMessage(playerid, 0x339900AA, "para continuar /colgar");
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
return 1;
}
// Colgar
if (strcmp("/colgarcel", cmdtext, true) == 0) {
ApplyAnimation(playerid, "ped", "phone_out", 4.000000, 0, 1, 1, 0, 0);// colgar
return 1;
}
// piquero
if (strcmp("/piquero", cmdtext, true) == 0) {
ApplyAnimation(playerid, "DAM_JUMP", "DAM_Launch", 4.0, 0, 1, 1, 1, 1); // su piquerito
return 1;
}
// taichi
if (strcmp("/taichi", cmdtext, true) == 0) {
ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);// om
//SendClientMessage(playerid, 0x339900AA, "siente el flujo");
return 1;
}
// beber
if (strcmp("/drink", cmdtext, true) == 0) {
ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
return 1;
}
// comprar
if (strcmp("/comerciar", cmdtext, true) == 0) {
ApplyAnimation(playerid, "DEALER", "shop_pay", 4.000000, 0, 1, 1, 0, 0);
return 1;
}
// boxear
if (strcmp("/boxear", cmdtext, true) == 0) {
ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);
return 1;
}
// pose pelea
if (strcmp("/pelea", cmdtext, true) == 0) {
ApplyAnimation(playerid, "ped", "FIGHTIDLE", 4.000000, 0, 1, 1, 1, 1);
SendClientMessage(playerid, 0x339900AA, "para continuar /boxear");
return 1;
}
// recoger
if (strcmp("/recoger", cmdtext, true) == 0) {
ApplyAnimation(playerid, "BSKTBALL", "BBALL_pickup", 4.000000, 0, 1, 1, 1, 1);
SendClientMessage(playerid, 0x339900AA, "para continuar /botear");
return 1;
}
// dar botes
if (strcmp("/botear", cmdtext, true) == 0) {
ApplyAnimation(playerid, "BSKTBALL", "BBALL_walk", 4.000000, 1, 1, 1, 1, 500);
SendClientMessage(playerid, 0x339900AA, "para continuar /clavarse 0 /lanzar");
return 1;
}
// clavarse
if (strcmp("/clavarse", cmdtext, true) == 0) {
ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_jump_shot", 4.0, 0, 1, 1, 1, 500);
return 1;
}
// lanzar
if (strcmp("/lanzar", cmdtext, true) == 0) {
ApplyAnimation(playerid, "BSKTBALL", "BBALL_Jump_Shot", 4.0, 0, 1, 1, 1, 500);
return 1;
}
// tomar asiento
if (strcmp("/asiento", cmdtext, true) == 0) {
ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
SendClientMessage(playerid, 0x339900AA, "para continuar /depie");
return 1;
}
// de pie
if (strcmp("/depie", cmdtext, true) == 0) {
ApplyAnimation(playerid, "ped", "SEAT_up", 4.000000, 0, 0, 1, 0, 0);
return 1;
}
// servirse
if (strcmp("/servirse", cmdtext, true) == 0) {
ApplyAnimation(playerid,"BAR","Barcustom_get",4.1,0,0,0,0,0);
return 1;
}
// servir
if (strcmp("/servir", cmdtext, true) == 0) {
ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0);
return 1;
}
// asiento2
if (strcmp("/asiento2", cmdtext, true) == 0) {
ApplyAnimation(playerid,"Attractors","Stepsit_in",4.1,0,0,0,1,0);
SendClientMessage(playerid, 0x339900AA, "para continuar /depie2");
return 1;
}
// depie2
if (strcmp("/depie2", cmdtext, true) == 0) {
ApplyAnimation(playerid,"Attractors","Stepsit_out",4.1,0,0,0,0,0);
return 1;
}
// mmm
if (strcmp("/mmm", cmdtext, true) == 0) {
ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,0,0,0,0);
return 1;
}
// rodar
if (strcmp("/rodar", cmdtext, true) == 0) {
ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,0);
SendClientMessage(playerid, 0x339900AA, "para continuar /levantarse");
return 1;
}
// saludos
if (strcmp("/saludo1", cmdtext, true) == 0) {
ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,0,0,0,0);
return 1;
}
// saludo2
if (strcmp("/saludo2", cmdtext, true) == 0) {
ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0);
return 1;
}
// saludo3
if (strcmp("/saludo3", cmdtext, true) == 0) {
ApplyAnimation(playerid,"GANGS","hndshkca",4.1,0,0,0,0,0);
return 1;
}
// saludo4
if (strcmp("/saludo4", cmdtext, true) == 0) {
ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
return 1;
}
// sanar
if (strcmp("/sanar", cmdtext, true) == 0) {
ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0);
return 1;
}
// llorar
if (strcmp("/llorar", cmdtext, true) == 0) {
ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,0,0,0,0);
return 1;
}
// Dormir
if (strcmp("/noniar", cmdtext, true) == 0) {
ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);
return 1;
}
// Detener
if (strcmp("/detener", cmdtext, true) == 0) {
ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.1,0,0,0,0,0);
return 1;
}
// rapear
if (strcmp("/rapear", cmdtext, true) == 0) {
ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,0,0,0,8000);
return 1;
}

//////strip
if (strcmp("/strip", cmdtext, true) == 0) {
SendClientMessage(playerid, 0xAA3333AA, "/strip[1-20]");
return 1;
}
//
if (strcmp("/strip1", cmdtext, true) == 0) {
ApplyAnimation(playerid,"CAR","flag_drop",4.1,0,1,1,1,1);//
return 1;
}



//
if (strcmp("/strip2", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,7,5,1,1,1);
return 1;
}


//
if (strcmp("/strip3", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
return 1;
}




//
if (strcmp("/strip4", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","PUN_LOOP",4.1,7,5,1,1,1);
return 1;
}

//
if (strcmp("/strip5", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","strip_A",4.1,7,5,1,1,1);
return 1;
}

//
if (strcmp("/strip6", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","strip_B",4.1,7,5,1,1,1);
return 1;
}


//
if (strcmp("/strip7", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","strip_C",4.1,7,5,1,1,1);
return 1;
}



//
if (strcmp("/strip8", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","strip_D",4.1,7,5,1,1,1);
return 1;
}



//
if (strcmp("/strip9", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","strip_E",4.1,7,5,1,1,1);
return 1;
}



//
if (strcmp("/strip10", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","strip_F",4.1,7,5,1,1,1);
return 1;
}


//
if (strcmp("/strip11", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","strip_G",4.1,7,5,1,1,1);
return 1;
}

// sexi
if (strcmp("/strip12", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","STR_B2A",4.1,0,1,1,1,1);
return 1;
}

// strip
if (strcmp("/strip13", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","strip_E",4.1,7,5,1,1,1);
return 1;
}

//
if (strcmp("/strip14", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","STR_B2C",4.000000, 0, 1, 1, 1, 0);
return 1;
}

//
if (strcmp("/strip15", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","STR_C1",4.000000, 0, 1, 1, 1, 0);
return 1;
}

//strip
if (strcmp("/strip16", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","STR_C2",4.000000, 0, 1, 1, 1, 0);
return 1;
}

// strip
if (strcmp("/strip17", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","STR_C2B",4.1,7,5,1,1,1);
return 1;
}

// strip
if (strcmp("/strip18", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","STR_Loop_A",4.1,7,5,1,1,1);
return 1;
}

// strip
if (strcmp("/strip19", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","STR_Loop_C",4.1,7,5,1,1,1);
return 1;
}

// strip
if (strcmp("/strip20", cmdtext, true) == 0) {
ApplyAnimation(playerid,"STRIP","STR_Loop_B",4.1,7,5,1,1,1);
return 1;
}


/////////////////////////////////////////////////////////////////////////////////
//sentado
if (strcmp("/echarse", cmdtext, true) == 0) {
ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.000000, 0, 0, 0, 1, 0);
return 1;
}




//puta
if (strcmp("/asientosexi", cmdtext, true) == 0) {
ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);
SendClientMessage(playerid, 0x339900AA, "para continuar /ignorarse");
return 1;
}


if (strcmp("/skate", cmdtext, true) == 0) {
SendClientMessage(playerid, 0xAA3333AA, "/skate 1 2 y 3");
return 1;
}

if (strcmp("/SKATE1", cmdtext, true) == 0) {
ApplyAnimation(playerid,"SKATE","skate_run",4.0,1,1,1,1,500);
return 1;
}

if (strcmp("/SKATE2", cmdtext, true) == 0) {
ApplyAnimation(playerid,"SKATE","skate_sprint",4.0,1,1,1,1,500);
return 1;
}


//////patada
if (strcmp("/patada", cmdtext, true) == 0) {
ApplyAnimation(playerid,"FIGHT_C","FightC_2",4.1,7,5,1,1,1);
return 1;
}

//////dansa
if (strcmp("/danzar", cmdtext, true) == 0) {
SendClientMessage(playerid, 0xAA3333AA, "/danzar[0-12]");
return 1;
}

if (strcmp("/danzar0", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","bd_clap",4.1,7,5,1,1,1);
return 1;
}

//////dansa
if (strcmp("/danzar1", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,7,5,1,1,1);
return 1;
}

//////danza
if (strcmp("/danzar2", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","dance_loop",4.1,7,5,1,1,1);
return 1;
}


//////dansa
if (strcmp("/danzar3", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,7,5,1,1,1);
return 1;
}

//////danza
if (strcmp("/danzar4", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,7,5,1,1,1);
return 1;
}

//////danza
if (strcmp("/danzar5", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,7,5,1,1,1);
return 1;
}

//////danza
if (strcmp("/danzar6", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,7,5,1,1,1);
return 1;
}

//////danza
if (strcmp("/danzar7", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.1,7,5,1,1,1);
return 1;
}

//////danza
if (strcmp("/danzar8", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,7,5,1,1,1);
return 1;
}

//////danza
if (strcmp("/danzar9", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,7,5,1,1,1);
return 1;
}

//////danza
if (strcmp("/danzar10", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,7,5,1,1,1);
return 1;
}

//////danza
if (strcmp("/danzar11", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,7,5,1,1,1);
return 1;
}

//////danza
if (strcmp("/danzar12", cmdtext, true) == 0) {
ApplyAnimation(playerid,"DANCING","dnce_M_e",4.1,7,5,1,1,1);
return 1;
}



if (strcmp("/skate3", cmdtext, true) == 0) {
ApplyAnimation(playerid,"SKATE","skate_idle",4.0,1,1,1,1,500);
return 1;
}


if (strcmp("/fumar2", cmdtext, true) == 0) {
ApplyAnimation(playerid,"SMOKING","F_smklean_loop", 4.0, 1, 0, 0, 0, 0);
return 1;
}


if (strcmp("/fumar3", cmdtext, true) == 0) {
ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop", 4.0, 1, 0, 0, 0, 0);
return 1;


}

if (strcmp("/asustado", cmdtext, true) == 0) {
ApplyAnimation(playerid,"PED","handscower",4.1,0,1,1,1,1);
return 1;

}


if (strcmp("/taxi", cmdtext, true) == 0) {
ApplyAnimation(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);
return 1;

}


if (strcmp("/adolorido", cmdtext, true) == 0) {
ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
return 1;

}

if (strcmp("/seacabo", cmdtext, true) == 0) {
ApplyAnimation(playerid,"PED","Shove_Partial",4.1,0,1,1,1,1);
return 1;

}

if (strcmp("/correr", cmdtext, true) == 0) {
ApplyAnimation(playerid,"PED","sprint_civi",4.0,1,1,1,1,500);
return 1;

}

if (strcmp("/fuerza", cmdtext, true) == 0) {
ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
return 1;

}

if (strcmp("/choriso", cmdtext, true) == 0) {
ApplyAnimation(playerid,"PED","WALK_gang1",4.0,1,1,1,1,500);
return 1;

}



if (strcmp("/tullio", cmdtext, true) == 0) {
ApplyAnimation(playerid,"PED","WALK_old",4.0,1,1,1,1,500);
return 1;

}

if (strcmp("/mujer", cmdtext, true) == 0) {
ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,500);
return 1;

}



if (strcmp("/asco", cmdtext, true) == 0) {
ApplyAnimation(playerid,"FOOD","EAT_Vomit_SK",4.1,0,1,1,1,1);
return 1;

}

if (strcmp("/quepa", cmdtext, true) == 0) {
ApplyAnimation(playerid,"GANGS","hndshkea",4.1,0,1,1,1,1);
return 1;

}


if (strcmp("/wooo", cmdtext, true) == 0) {
ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);
return 1;
}

if (strcmp("/quepasa", cmdtext, true) == 0) {
ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,1,1,1,1);
return 1;
}

if (strcmp("/alsar", cmdtext, true) == 0) {
ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,1,1,1,1);
return 1;

}

if (strcmp("/cansado", cmdtext, true) == 0) {
ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.1,7,5,1,1,1);
SendClientMessage(playerid, 0x339900AA, "necesito un fase de merca ando re cansado, mejor le voy a pedir a pac0");
return 1;
}
if (strcmp("/superpatada", cmdtext, true) == 0) {
ApplyAnimation(playerid,"FIGHT_C","FightC_3",4.1,0,1,1,1,1);
//SendClientMessage(playerid, 0x339900AA, "haaa");
return 1;
}
if (strcmp("/comodo", cmdtext, true) == 0) {
ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
return 1;
}
if(strcmp(cmd, "/hablar", true) == 0){
ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);
return 1;
}
if (strcmp("/clearanim", cmdtext, true, 10) == 0)
    {
    ClearAnimations(playerid);
    SetPlayerSpecialAction(playerid, 0);
    return 1;
}

if(strcmp(cmd, "/animaciones", true) == 0)
{
new iString[2000];
       //strcat(iString, "{ff001b}||~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~||\n\n");
       strcat(iString, "{FFFFFF}/arrestado /rendirse /drunk /bomba /jaja /sapiar /amenazar /paja /irsecortao /agredido\n");
       strcat(iString, "{FFFFFF}/herido /prender /inhalar /apagar /vigilar /recostarse /ignorarse /cubrirse /vomitar\n");
       strcat(iString, "{FFFFFF}/cenar /chao /palmada /agonizar /levantarse /traficar /beso /crack /mear /fumar [1-3]\n");
       strcat(iString, "{FFFFFF}/sentarse /ignorarse /fokear /si /no /llamada /contestacion /colgarcel /piquero /taichi\n");
       strcat(iString, "{FFFFFF}/drink /comerciar /boxear /pelea /recoger /botear /clavarse /lanzar /asiento /depie\n");
       strcat(iString, "{FFFFFF}/asiento2 /depie2 /servir /servirse /mmm /rodar /saludo [1-4] /sanar /llorar /noniar\n");
       strcat(iString, "{FFFFFF}/detener /rapear /strip [1-20] /echarse /asientosexi /skate [1-3] /patada /superpatada\n");
       strcat(iString, "{FFFFFF}/danzar [0-12] /asustado /taxi /adolorido /seacabo /correr /fuerza /choriso /tullio\n");
       strcat(iString, "{FFFFFF}/mujer /asco /quepa /wooo /quepasa /alsar /cansado /comodo /hablar /orinar\n\n");
       strcat(iString, "{FFFFFF}Para parar la animacion usa /clearanim\n");
      //strcat(iString, "{ff001b}||~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~||\n\n");
       ShowPlayerDialog(playerid,creditos, DIALOG_STYLE_MSGBOX, "{FF0000}War Blood {FFFFFF}| Animaciones", iString, "Cerrar", "");
  PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
return 1;
       }
       
       //-----------------------------------------------estilos de pelea---------------
       if(strcmp(cmd, "/estilohgnvpelea", true) == 0)
       {
        //#pragma unused params
        ShowPlayerDialog(playerid, DIALOG_FSTYLES,DIALOG_STYLE_LIST,"{FF0000}War Blood {FFFFFF}| Estilos de Pelea","Normal\r\nBoxeo\r\nKung Fu\r\nKnee Head\r\nGrab Kick\r\nElbow","Seleccionar", "Cerrar");
        return 1;
}


//-----------------------musica--------------------

if(strcmp(cmdtext, "/Musicamj25", true) == 0)
{
ShowPlayerDialog(playerid, Musicap, DIALOG_STYLE_LIST, "{FF0000}War Blood {FFFFFF}| Musica",
"Ace of Spades [Motorhead] \nIn The End (Linki Park) \nKing of the Kings [Motorhead]. \nLevels (Avicii y Skrillex) \nWe Are The Champions (Queen) \nInvincible (MGK) \nOne (Metallica) \nWake me up (Avicii) \nSweet Chil O' Mine (Guns N' Roses) \nAttack (30 Seconds to Mars) \nSmells Like Teen Spirit (Nirvana) \nBlack - Kari Kimmel \nMemories (David Guetta) \nThis is War (30 Seconds to Mars) \nCult of Personality (Living Colour) \nHellraiser (Ozzy Osbourne)","Aceptar","Cancelar");
return 1;
}

//----------------- freeway ------------------------

/*if(strcmp("/freeway", cmdtext, true, 10) == 0)
{
if(gTeam[playerid] == TEAM_ZOMBIES)
{
CarSpawner(playerid,463);
return 1;
}
else
{
SendClientMessage(playerid, 0xFF0000FF, "Nececitas ser zombie para usar este comando.");
return 1;
}
}*/
//----------------------------------- /skin selector----------------
/*
if (strcmp("/skins",cmdtext,true, 10) == 0)
{
if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
{
SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando ahora mismo ya que estas en un evento o en un interior.");
return 1;
}
if(gTeam[playerid] == NO_TEAM)
{
ShowModelSelectionMenu(playerid, skinlist1, "Skins");
return 1;
}
if(gTeam[playerid] == TEAM_ZOMBIES)
{
ShowModelSelectionMenu(playerid, skinlist2, "Skins");
return 1;
}
if(gTeam[playerid] == TEAM_EXTERMINADOR)
{
ShowModelSelectionMenu(playerid, skinlist3, "Skins");
return 1;
}
if(gTeam[playerid] == TEAM_CENTINELAS)
{
ShowModelSelectionMenu(playerid, skinlist4, "Skins");
return 1;
}
}*/
//////////////////===================SISTEMA VIP BYE PACO DIOS ===================================///////////////////////////
if (strcmp("/vip",cmdtext,true, 10) == 0)
{
if (UsarCMD[playerid] == 1) return SendClientMessage(playerid,COLOR_RED,"Tenes que esperar un minuto para volver a ingresar al panel vip.");
{
if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
{
SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar el panel vip dentro un evento.");
return 1;
}	
if(PlayerInfo[playerid][VIP_TIENE] == 0)
{
// ShowPlayerDialog(playerid,DIALOG_ITEMSH,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Humanos","Virus {FF0000}[Z] {33FF33}[$10.000] ","Seleccionar","Salir");
SendClientMessage(playerid,red,"Usted no es un miembro vip.");
return 1;
}
if(PlayerInfo[playerid][VIP_TIENE] == 1)
{
SendClientMessage(playerid,COLOR_RED,"Ahora tenes que esperar un minuto para volver a ingresar al panel vip");
UsarCMD[playerid] = 1;
SetTimerEx("Listo", 50000, false, "i", playerid);
ShowPlayerDialog(playerid,DIALOG_VIP_PLATA,DIALOG_STYLE_LIST,"{FFF000}Ventajas VIP PLATA","EDC {FF0000}[MUNICIÓN] {33FF33}[6.000]\n{FFFFFF}Sultan\n{FFFFFF}Jester","Seleccionar","Salir");
return 1;
}
if(PlayerInfo[playerid][VIP_TIENE] == 2)
{
SendClientMessage(playerid,COLOR_RED,"Ahora tenes que esperar un minuto para volver a ingresar al panel vip");
UsarCMD[playerid] = 1;
SetTimerEx("Listo", 50000, false, "i", playerid);
ShowPlayerDialog(playerid,DIALOG_VIP_Bronce,DIALOG_STYLE_LIST,"{FFF000}Ventajas VIP Bronce","EDC {FF0000}[MUNICIÓN] {33FF33}[6.000]\n{FFFFFF}Sultan\n{FFFFFF}Jester\n{FFFFFF}Elegy\n{FFFFFF}Granadas {FF0000}[CANTIDAD] {33FF33}[100] \n{FFFFFF}RPG {FF0000}[MUNICIÓN] {33FF33}[4]","Seleccionar","Salir");
return 1;
}
if(PlayerInfo[playerid][VIP_TIENE] == 3)
{
/*SendClientMessage(playerid,COLOR_RED,"Ahora tenes que esperar un minuto para volver a ingresar al panel vip");
UsarCMD[playerid] = 1;
SetTimerEx("Listo", 50000, false, "i", playerid);*/
ShowPlayerDialog(playerid,DIALOG_VIP_ORO,DIALOG_STYLE_LIST,"{FFF000}VIP - ORO","Vehiculos\n{FFFFFF}Armas\n{FFFFFF}Chaleco","Seleccionar","Salir");
return 1;
}
if(PlayerInfo[playerid][VIP_TIENE] == 4)
{
/*SendClientMessage(playerid,COLOR_RED,"Ahora tenes que esperar un minuto para volver a ingresar al panel vip");
UsarCMD[playerid] = 1;
SetTimerEx("Listo", 50000, false, "i", playerid);*/
ShowPlayerDialog(playerid,DIALOG_VIP_DIAMANTE,DIALOG_STYLE_LIST,"{FFF000}VIP - PRIME","Vehiculos\n{FFFFFF}Armas\n{FFFFFF}Chaleco\n{F59317}Regeneración de chaleco","Seleccionar","Salir");
return 1;
}
if(PlayerInfo[playerid][VIP_TIENE] == 5)
{
/*SendClientMessage(playerid,COLOR_RED,"Ahora tenes que esperar un minuto para volver a ingresar al panel vip");
UsarCMD[playerid] = 1;
SetTimerEx("Listo", 50000, false, "i", playerid);*/
//ShowPlayerDialog(playerid,DIALOG_VIP_Bronce,DIALOG_STYLE_LIST,"{FFF000}Ventajas VIP Bronce","EDC {FF0000}[MUNICIÓN] {33FF33}[6.000]\n{FFFFFF}Sultan\n{FFFFFF}Jester\n{FFFFFF}Elegy\n{FFFFFF}Granadas {FF0000}[CANTIDAD] {33FF33}[100] \n{FFFFFF}RPG {FF0000}[MUNICIÓN] {33FF33}[4]","Seleccionar","Salir");
ShowPlayerDialog(playerid,DIALOG_VIP_DIOS,DIALOG_STYLE_LIST,"{FFF000}VIP - PATREON","Vehiculos\n{FFFFFF}Armas\n{FFFFFF}Chaleco\n{F59317}Regeneración de vida\n{F59317}Regeneración de chaleco\n{F59317}Invisibilidad en el radar.","Seleccionar","Salir");
return 1;
}
}
}
//========================= (menu de items) ==============================================
if (strcmp("/items",cmdtext,true, 10) == 0)
{
if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
{
SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando ahora mismo ya que estas en un evento o en un interior.");
return 1;
}
if(gTeam[playerid] == NO_TEAM)
{
 ShowPlayerDialog(playerid,DIALOG_ITEMSH,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Humanos","Virus {FF0000}[Z] {33FF33}[$10.000]\n{FF0000}Skins ","Seleccionar","Salir");
return 1;
}
if(gTeam[playerid] == TEAM_ZOMBIES)
{
ShowPlayerDialog(playerid,DIALOG_ITEMSZ,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Zombies","Antidoto {FF0000}[Z] {33FF33}[$85.000]\n{FF0000}Skins","Seleccionar","Salir");
return 1;
}
if(gTeam[playerid] == TEAM_EXTERMINADOR)
{
ShowPlayerDialog(playerid,DIALOG_ITEMSU,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - EXTERMINADOR","Vida {FF0000}[100] {33FF33}[$20.000]\n{FFFFFF}Armadura {FF0000}[100] {33FF33}[$35.000]\n{FFFFFF}Virus {FF0000}[Z] {33FF33}[$10.000]","Seleccionar","Salir");
return 1;
}
if(gTeam[playerid] == TEAM_CENTINELAS)
{
ShowPlayerDialog(playerid,DIALOG_ITEMSU,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - CENTINELA","Vida {FF0000}[100] {33FF33}[$20.000]\n{FFFFFF}Armadura {FF0000}[100] {33FF33}[$35.000]\n{FFFFFF}Virus {FF0000}[Z] {33FF33}[$10.000]","Seleccionar","Salir");
return 1;
}
}

/*if (strcmp("/shopresistencia",cmdtext,true, 10) == 0)
{
if(!Shopresistencia(playerid)) return SendClientMessage(playerid, red, "Roach: {FFFFFF}No estas en la resistencia de {33FF33}LS, {FFFFFF}para obtener el virus o el antidoto gratis dirígete a la Resistencia LS MARKET.");
if(gTeam[playerid] == NO_TEAM)
{
 ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPH,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Humanos","Virus {FF0000}[Z]","Seleccionar","Salir");
return 1;
}
if(gTeam[playerid] == TEAM_ZOMBIES)
{
ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPZ,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Zombies","Antidoto {FF0000}[Z]","Seleccionar","Salir");
return 1;
}
if(gTeam[playerid] == TEAM_EXTERMINADOR)
{
SendClientMessage(playerid,red,"Los EXTERMINADOR no son bienvenidos aquí.");
return 1;
}
}*/

//------------------------------------------------------------------

/*if (strcmp("/informacion", cmdtext, true, 10) == 0 || strcmp("/creditos", cmdtext, true, 10) == 0)
{
format(string2,sizeof(string2),"\n{FFFFFF}Director: %s\n\nHosting: %s\n\nDueño: %s\n\nMapper: %s\n\nForo y Pag en FB: %s\n",Director,HOSTING,DUEÑO,MAPPER,CPFF);
ShowPlayerDialog(playerid, 42, DIALOG_STYLE_MSGBOX, "Creditos | War Blood", string2, "Aceptar", "");//cambia
return 1;
}*/
if (strcmp("/ah", cmdtext, true, 10) == 0 || strcmp("/cmdsadmin", cmdtext, true, 10) == 0)
{
	if(PlayerInfo[playerid][Level] >= 1)
	{
	new iString[3000];
    strcat(iString, "{17F549} Ayudante:\n");
    strcat(iString, "{FFFFFF} /spec - /specoff - /spawn - /vr o /fix\n");
    strcat(iString, "{FFFFFF} /asay - /kick - /mute - /unmute - /reportes\n");
    strcat(iString, "{FFFFFF} /jetpack\n");
    strcat(iString, "\n");
    strcat(iString, "\n");
    strcat(iString, "\n");
    strcat(iString, "{17F549} Moderador:\n");
    strcat(iString, "{FFFFFF} /gotoco (X , Y , Z , interior) - /darskin - /disarm.\n");	
	strcat(iString, "{FFFFFF} /anuncio - /flip - /goto - /vgoto - /warn - /slap - /freeze.\n");	
	strcat(iString, "{FFFFFF} /unfreeze - /frozen - /muteados - /specvehicle - /clearchat  - /premiar - /premiar (humano - EXTERMINADOR).\n");		
	strcat(iString, "{FFFFFF} /abrirevento - /terminarevento - /muteados - /specvehicle - /clearchat  - /pevents.\n");		    
    strcat(iString, "\n");
    strcat(iString, "\n");
    strcat(iString, "\n");
    strcat(iString, "{17F549} Administrador:\n");
    strcat(iString, "{FFFFFF} /dararma - /setearvida - /setearchaleco - /setweather - /settime  - /setworld - /setinterior.\n");	
	strcat(iString, "{FFFFFF} /eject - /burn - /car - /carhealt - /carcolour - /teleplayer - /vget - /get - /nunban - /rban - /explode.\n");	
    strcat(iString, "{FFFFFF} /aka - /clearallchat - /activarfuegoamigo - /desactivarfuegoamigo - /armasevento - /desarmarevento.\n");		
    strcat(iString, "{FFFFFF} /vidaevento - /chalecoevento - /skinsevento - /autosevento - /armasevento - /desarmarevento - /congelarevento.\n");	
	strcat(iString, "{FFFFFF} /congelarevento - /descongelarevento - /premiarsd - /premiarswo - /premiarnoclan. (premiar clanes usarlos luego de /terminarevento)\n");
    strcat(iString, "\n");
    strcat(iString, "\n");
    strcat(iString, "\n");
    strcat(iString, "{17F549} Comandos generales de STAFF. 2024 - en constante modificación.\n"); 
    strcat(iString, "\n");
    ShowPlayerDialog(playerid, 3000, DIALOG_STYLE_MSGBOX, "{FFFFFF}War {17F549}Blood {FFFFFF}- Admins CMDS", iString, "Aceptar", "");
	}
	else 
	{
		SendClientMessage(playerid,green,"No formas parte del staff");
	}
    return 1;
}
if (strcmp("/credits", cmdtext, true, 10) == 0 || strcmp("/creditos", cmdtext, true, 10) == 0)
{
	new iString[1000];
    strcat(iString, "{FFFFFF} Directores: {17F549}TIN0 - Lil.Tr4p - Pac0\n");
	strcat(iString, "{FFFFFF} Mapper destacado: {17F549}Jincronex\n");
	strcat(iString, "{FFFFFF} Mappers: {17F549}h1m - Licalo\n");
	strcat(iString, "{FFFFFF} Plataforma - Gta San Andreas(SA-MP)\n");
	//strcat(iString, "{FFFFFF} Plugins: Sscanf: Y-Less - Streamer: Incognito - MapAndreas: Kalcor - RNPC: Mauzen\n");
    strcat(iString, "\n");
    strcat(iString, "\n");
	strcat(iString, "{FFFFFF} Donadores: {17F549}xAlberT, moonlight\n");
	strcat(iString, "\n");
	/*strcat(iString, "{FFFFFF} Discord booster: {17F549}Yulaw\n");
	strcat(iString, "\n");
	strcat(iString, "{17F549} En conmemoración a: Renacimiento Zombie - Warblood (2022-2023) - Amanecer Zombie.\n");
	strcat(iString, "\n");	
	strcat(iString, "{FFFFFF} ¡Damos las gracias a cada jugador que forma parte de la comunidad!\n");
	strcat(iString, "\n");	*/
	strcat(iString, "{17F549} Discord oficial : {FFFFFF}https://discord.gg/DgfCtNjErQ\n");
	strcat(iString, "{17F549} Gamemode desde 0 War - Blood\n");
	strcat(iString, "\n");	
	strcat(iString, "{FFFFFF} Hecho por los jugadores para los jugadores.\n");


//	strcat(iString, "\n");
//	strcat(iString, "{FFFFFF} Inspirado {17F549}en {FF0000}Amanecer {FFFFFF}Zombie {17F549}- {FFFF00}Guerras Mundiales TDM - The Walking Dead (Serie) - Zombie BTTDM.\n");
	//strcat(iString, "{17F549} \n");





   /* strcat(iString, "\n");
    strcat(iString, "{17F549} Sistema Administrativo LAdmin:\n");
    strcat(iString, "{FFFFFF} Lethal / Mejorado por Pac0.\n");*/

    strcat(iString, "\n");
    ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_MSGBOX, "{FFFFFF}War {17F549}Blood {FFFFFF}- Creditos", iString, "Aceptar", "");
    return 1;
}
/*if (strcmp("/historialclanes", cmdtext, true, 15) )
{
    new string[2048];
    format(string, sizeof(string), "{FFFFFF}Historial de masacres ganadas del clan {FA00FE}LTC{FFFFFF}: {FA00FE}%d\n", VariablesInfo[LTC_MASACRE]);
    ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_MSGBOX, "{FF8400}Historial de Clan", string, "Aceptar", "");
    return 1;
}*/
/*if (strcmp("/EXTERMINADORs", cmdtext, true, 10) == 0 || strcmp("/infoEXTERMINADOR", cmdtext, true, 10) == 0)
{
	new iString[1000];
    strcat(iString, "{17F549} Legión Corporatión:\n");
    strcat(iString, "{FFFFFF} Requisitos : 50.000 Score.\n");
 //   strcat(iString, "\n");
    strcat(iString, "{17F549} Permanente - Acceso a comandos EXTERMINADOR:\n");
    strcat(iString, "{FFFFFF} Ventajas :\n");	
	strcat(iString, "{FFFFFF} Equipo EXTERMINADOR.\n");	
	strcat(iString, "{FFFFFF} Más items en el comando /items.\n");		
    strcat(iString, "{17F549} Acceso a vehiculos EXTERMINADOR :\n");
    strcat(iString, "{FFFFFF} Tanques.\n");	
	strcat(iString, "{FFFFFF} Helicopteros.\n");	
	strcat(iString, "{FFFFFF} Aviones.\n");
	strcat(iString, "{FFFFFF} Futuramente acceso a clases zombies - Legión.\n");
    strcat(iString, "\n");
	strcat(iString, "\n");
	strcat(iString, "\n");
	strcat(iString, "{17F549} Sistema Legión Corporatión en constante actualización.\n");

    strcat(iString, "\n");
    ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_MSGBOX, "{FFFFFF}Invasión {17F549}Z {FFFFFF}- Legión", iString, "Aceptar", "");
    return 1;
}*/
if (strcmp("/clan", cmdtext, true, 10) == 0)
{
    if(PlayerInfo[playerid][CLAN_TIENE] == 0) return SendClientMessage(playerid,COLOR_RED,"No perteneces a un clan.");
    {
	new iString[1000];
	strcat(iString, "{FF0000} Representante / Lider:\n");
    strcat(iString, "{FFFFFF} /darclan /expulsar /ascender /darclan.\n");
    strcat(iString, "\n");
    strcat(iString, "{FF0000} Miembros:\n");
    strcat(iString, "{FFFFFF} /base - /renunciar - Hablar por chat del clan EJ : &Hola. /miembros\n");
    strcat(iString, "\n");
    ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_LIST, "{FF8400}War Blood - Apartado Clanes", iString, "Aceptar", "");
    }
    return 1;
}

if (strcmp("/invisible", cmdtext, true, 10) == 0)
{
    if(PlayerInfo[playerid][Level] == 0) return SendClientMessage(playerid,COLOR_RED,"Solo los administradores pueden usar este CMD.");
    {
    SendClientMessage(playerid,COLOR_RED,"Info : +999 Vida/Chaleco + Color Marron + Fuego + Skin + Equipo Admin.");
    SendClientMessage(playerid,COLOR_RED,"Recuerda : debes usar /kill cuando termines de estar invisible ante los zombies.");    
    SendClientMessage(playerid,COLOR_RED,"No abuses de este comando , todo queda registrado cualquier abuso sera sancionado y removeran tu rango.");    
    gTeam[playerid] = TEAM_ADMIN;
    PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	SetPlayerTeam(playerid, gTeam[playerid]);      
    SetPlayerHealth(playerid,999);
    SetPlayerArmour(playerid,999);
    SetPlayerColor(playerid,0x804000AA);
    SetPlayerSkin(playerid,217);
    CMDMessageToPac0(playerid,"INVISIBLE - Registrado");
    ELOY9N_ResetPlayerWeapons(playerid);
    SetPlayerAttachedObject( playerid, 5, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
	SetPlayerAttachedObject( playerid, 7, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
    return 1;
    }
}


if (strcmp("/armas",cmdtext,true, 10) == 0)
{
if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_CENTINELAS || gTeam[playerid] == TEAM_EXTERMINADOR)
{
if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
{
    SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando ahora mismo ya que estas en un evento o en un interior.");
    return 1;
}    
ShowPlayerDialog(playerid, DArmas, DIALOG_STYLE_LIST, "{FFFFFF}Armas","{FFFFFF}Desert Eagle {33FF33}Precio: $10.000.\n""{FFFFFF}Escopeta {33FF33}Precio: $15.000.\n""{FFFFFF}MP5 {33FF33}Precio: $20.000.\n""{FFFFFF}M4 {33FF33}Precio: $15.000.\n""{FFFFFF}Rifle {33FF33}Precio: $37.000.\n""{FFFFFF}Sniper {33FF33}Precio: $40.000.\n""{FFFFFF}AK-47 {33FF33}Precio: $85.000.\n""{FFFFFF}UZIS {33FF33}Precio: $65.000.\n""{FFFFFF}Escopetas Recortadas {33FF33}Precio: $30.000.\n","Seleccionar", "Salir");

return 1;
}
else
{
SendClientMessage(playerid, 0xFF0000FF, "Nececitas ser humano para poder comprar armas.");
return 1;
}
}

/*if (strcmp("/tienda",cmdtext,true, 10) == 0)
{
if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_CENTINELAS || gTeam[playerid] == TEAM_EXTERMINADOR)
{
if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
{
    SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando ahora mismo ya que estas en un evento o en un interior.");
    return 1;
}    
ShowPlayerDialog(playerid, DTienda,DIALOG_STYLE_LIST,"{FFFFFF}Tienda","{FFFFFF}Botiquín {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $15.000 {FF0000}Uso: {FFFFFF}100 HP.\n{FFFFFF}Chaleco {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE AVANZADO {33FF33}Precio: $40.000.\nEscopetas Recortadas {33FFFF}RANGO REQUERIDO: {F3FF33}WARFRAME {33FF33}Precio: $100.000 {FF0000}Cantidad: {FFFFFF}200.","Seleccionar","Salir");
//ShowPlayerDialog(playerid, DTienda,DIALOG_STYLE_LIST,"{FFFFFF}Tienda","1\n2\n3","Seleccionar","Salir");
return 1;
}
else
{
SendClientMessage(playerid, 0xFF0000FF, "Nececitas ser humano para poder usar la tienda.");
return 1;
}
}*/


/*if (strcmp("/autos",cmdtext,true, 10) == 0)
{
if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_CENTINELAS || gTeam[playerid] == TEAM_EXTERMINADOR)
{
if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
{
    SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando ahora mismo ya que estas en un evento o en un interior.");
    return 1;
}    
ShowPlayerDialog(playerid, DAutos,DIALOG_STYLE_LIST,"{FFFFFF}Autos","{FFFFFF}Mesa {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $5.000.\n{FFFFFF}Sabre {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $10.000.\nBlistac {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $20.000.\nSecuricar {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $50.000.\nPatriot {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO {33FF33}Precio: $60.000.","Seleccionar","Salir");
return 1;
}
else
{
SendClientMessage(playerid, 0xFF0000FF, "Nececitas ser humano para poder comprar autos.");
return 1;
}
}*/
/*if (strcmp("/autos", cmdtext, true, 10) == 0)
{
    if (gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_CENTINELAS || gTeam[playerid] == TEAM_EXTERMINADOR)
    {
        if (EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
        {
            SendClientMessage(playerid, COLOR_WHITE, "No puedes utilizar este comando ahora mismo ya que estás en un evento o en un interior.");
            return 1;
        }
ShowPlayerDialog(playerid, DAutos,DIALOG_STYLE_LIST,"{FFFFFF}Autos","{FFFFFF}Desert Eagle {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $10.000 {FF0000}Munición: {FFFFFF}150.\n{FFFFFF}Escopeta {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $15.000 {FF0000}Munición: {FFFFFF}250.\nMP5 {33FFFF}RANGO REQUERIDO: {F3FF33}CIVIL {33FF33}Precio: $20.000 {FF0000}Munición: {FFFFFF}150.\nM4 {33FFFF}RANGO REQUERIDO: {F3FF33}CIVIL{33FF33}Precio: $15.000 {FF0000}Munición: {FFFFFF}300.\nRifle {33FFFF}RANGO REQUERIDO: {F3FF33}CIVIL {33FF33}Precio: $37.000 {FF0000}Munición: {FFFFFF}100.\nSniper {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $40.000 {FF0000}Munición: {FFFFFF}5.\nGranadas {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE AVANZADO {33FF33}Precio: $85.000 {FF0000}Cantidad: {FFFFFF}10.\nUZIS {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO {33FF33}Precio: $65.000 {FF0000}Cantidad: {FFFFFF}330.\nEscopetas recortadas {33FFFF}RANGO REQUERIDO: {F3FF33}ELITE {33FF33}Precio: $95.000 {FF0000}Cantidad: {FFFFFF}230.\nRPG {33FFFF}RANGO REQUERIDO: {F3FF33}WARFRAME {33FF33}Precio: $200.000 {FF0000}Cantidad: {FFFFFF}5.","Seleccionar","Salir");
    //	ShowPlayerDialog(playerid, DAutos, DIALOG_STYLE_LIST, "{FFFFFF}Autos", "{FFFFFF}Mesa {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $5.000.\n{FFFFFF}Sabre {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $10.000.\nBlistac {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $20.000.\nSecuricar {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $50.000.\nPatriot {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO {33FF33}Precio: $60.000.", "Seleccionar", "Salir");
        return 1;
    }
    else
    {
        SendClientMessage(playerid, 0xFF0000FF, "Necesitas ser humano para poder comprar autos.");
        return 1;
    }
}*/

/*if (strcmp("/productos",cmdtext,true, 10) == 0)
{
if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_CENTINELAS || gTeam[playerid] == TEAM_EXTERMINADOR)
{
if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
{
    SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar este comando ahora mismo ya que estas en un evento o en un interior.");
    return 1;
}    
if(!Productosbase(playerid)) return SendClientMessage(playerid, red, "Comerciante: {FFFFFF}No estas en un puesto de {33FF33}productos.");
//if(IsPlayerInRangeOfPoint(10.0,playerid,1222.3317,-1294.3496,12.7731)) return SendClientMessage(playerid, 0xFF0000FF, "Nececitas estar en la base de la resistencia de LS para comprar armas.");
ShowPlayerDialog(playerid, DProductos,DIALOG_STYLE_LIST,"{FF0000}Productos","Lanza Cohetes($350000)(20)\nC4($200000)(5)\nKit Medico($20000)\nAdrenalina($100000)","Seleccionar","Salir");
return 1;
}
else
{
SendClientMessage(playerid, 0xFF0000FF, "Nececitas ser humano/EXTERMINADOR/centinela para poder comprar productos.");
return 1;
}
}*/

if (strcmp("/ventafsjas", cmdtext, true, 10) == 0)
{
new string[1000];
strcat(string, "Humanos\n\n");
strcat(string, "Pueden matar Zombies y mutaciones (Stomper y Nemesis), comprar armas, autos y chaleco.\n");
strcat(string, "Unicos en poder comunicarse entre ellos por medio de la radio usando !texto\n");
strcat(string, "Pueden entrar a las bases de Los Santos Marcadas con la letra R en el radar.\n");
strcat(string, "Zombies\n\n");
strcat(string, "Pueden morder e infectar a los humanos con click derecho, tienen habilidades especiales.\n");
strcat(string, "Clase Stomper puede empujar a sus adversarios alrededor con la tecla ALT.\n");
strcat(string, "Clase Nemesis tiene 500 de vida y Lanza Misiles.");
ShowPlayerDialog(playerid, DIALOG_requisitos, DIALOG_STYLE_MSGBOX, "{FF0000}War Blood {FFFFFF}| Ventajas", string, "Cerrar", "");
return 1;
}

if (strcmp("/kill", cmdtext, true, 10) == 0)
{
SetPlayerHealth(playerid, 0);
return 1;
}
if (strcmp("/ayuda", cmdtext, true, 10) == 0)
{
	new string[2048];
	strcat(string, "{FFFFFF}War {FF0000}Blood {33CCFF}2024, {FFFFFF}La nueva era comienza.\n");
	strcat(string, "{FFFFFF}La nueva era comienza.\n");
	strcat(string, "{FFFFFF}¿Necesitas curarte?, dirigíte a la cruz es un ícono de cruz roja en el mapa.\n");
	strcat(string, "{FFFFFF}Hay autos por todos Los Santos - San Fierro - Las venturas y alrededores.\n");
	strcat(string, "{FFFFFF}Tu objetivo como humano es sobrevivir y matar todos los zombies posibles.\n");
	strcat(string, "{FFFFFF}Puedes unirte a un clan, Tal como SD-SWO [Estos mismos son clanes oficiales].\n");
	strcat(string, "{FFFFFF}¿Necesitas refuerzos?, en la cura /park puedes hacer diferentes tipos de amistades y combatir juntos.\n");
	strcat(string, "{FFFFFF}¿Queres reportar a un jugador?, utiliza /reportar [ID DEL JUGADOR].\n");
	strcat(string, "{FFFFFF}Tu objetivo como zombie es acabar con los maximos humanos posibles.\n");
	strcat(string, "{FFFFFF}Matando zombies / humanos ganaras score y dinero (Zombies en arreglo).\n");
	strcat(string, "{FFFFFF}Si tenes alguna duda utiliza /duda.\n");
	ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_LIST, "{FF8400}War Blood - 2024", string, "Aceptar", "");
//ShowPlayerDialog(playerid, 38, DIALOG_STYLE_MSGBOX, "Ayuda", "{FF0000}Este servidor trata de modo zombie lo que significa que\naqui hay dos equipos para humanos vs zombies\nlos zombies pueden morder y con cada golpe bajan mucha vida\nlos humanos llevan autos y armas", "Aceptar", "");//cambia
return 1;
}

/*if (strcmp("/interfazoff", cmdtext, true, 10) == 0)
{
TextDrawHideForPlayer(playerid, Textdraw22[playerid]);
TextDrawHideForPlayer(playerid, TextdrawPuntos[playerid]);
TextDrawHideForPlayer(playerid, TextdrawRango[playerid]);
TextDrawHideForPlayer(playerid,TextdrawRangoTotal[playerid]);
TextDrawHideForPlayer(playerid,TextdrawPuntosTotal[playerid]);
TextDrawHideForPlayer(playerid,Textdraw0[playerid]);
TextDrawHideForPlayer(playerid,Textdraw1[playerid]);
TextDrawHideForPlayer(playerid,Textdraw2[playerid]);
return 1;
}*/

if (strcmp("/clanes", cmdtext, true, 10) == 0)
{
	new string[2048];
	strcat(string, "{FFFFFF}War{FF0000}Blood {33CCFF}2024, {FFFFFF}Clanes Oficiales.\n");
	strcat(string, "{87CEEB}SD.\n");
	strcat(string, "{FF0000}SWO.\n");
	strcat(string, "{9E12F3}GOD.\n");
//	strcat(string, "{008000}MID.\n");
	//strcat(string, "{0080FF}WS.\n");
//	strcat(string, "{800080}GOD.\n");
//	strcat(string, "{000000}OG.\n");
	ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_LIST, "{FF8400}Lista de Clanes Oficiales 2024.", string, "Aceptar", "");
//ShowPlayerDialog(playerid, 38, DIALOG_STYLE_MSGBOX, "Ayuda", "{FF0000}Este servidor trata de modo zombie lo que significa que\naqui hay dos equipos para humanos vs zombies\nlos zombies pueden morder y con cada golpe bajan mucha vida\nlos humanos llevan autos y armas", "Aceptar", "");//cambia
return 1;
}
/*if (strcmp("/historialclanes", cmdtext, true, 10) == 0)
{

format(score_Text, sizeof(score_Text), "%s\n{0000FF}%d. {FFFFFF}%s - {FF0000}%d", score_Text, i + 1, player_Name, playerScores[i][player_Score]);

ShowPlayerDialog(playerid, 45, DIALOG_STYLE_MSGBOX, "Top Users (Score)", score_Text, "Aceptar", "");//cambia
return 1;
}*/


if (strcmp("/ignorar", cmdtext, true, 10) == 0)
{
StopAudioStreamForPlayer(playerid);
return 1;
}

if (strcmp("/audiotmsg8", cmdtext, true, 10) == 0)
{
//StopAudioStreamForPlayer(playerid);
return 1;
}
	else{
	new Float:X,Float:Y,Float:Z;
	PlayerPlaySound(playerid, 1007, X, Y, Z);
 	return	SendClientMessage(playerid,COLOR_PURPLE2,"{C2A2DA}Error:{FFFFFF} este comando no existe.");
 	}
}
stock DialogExploit(message[])
{
   new message_length = strlen(message);
   for(new i; i < message_length; i++)
   {
      if(message[i] == '%' || message[i] == '=')
      {
      return 1;
      }
   }
   return 0;
}
stock DialogExploit2(message[])
{
   new message_length = strlen(message);
   for(new i; i < message_length; i++)
   {
      if(message[i] == '#')
      {
      return 1;
      }
   }
   return 0;
}
//==============================================================================
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
if (DialogExploit(inputtext)) return SendClientMessage(playerid, green, "No esta permitido usar esta clase de simbolos en los dialogos.");
if (DialogExploit2(inputtext)) return SendClientMessage(playerid, green, "No esta permitido usar esta clase de simbolos en los dialogos.");
//==============================================================================
#if EnableTwoRcon == true
	if(dialogid == DIALOG_TYPE_RCON2)
	{
	    if (response)
	    {
        	if (!strcmp(SegundaRcon, inputtext) && !(!strlen(inputtext)))
			{
				GameTextPlayer(playerid, "~n~~n~~n~~n~~n~~g~Acceso ~w~Autorizado!~n~~y~Bienvenido Administardor!",3000,3);
			}
			else
			{
				if(PlayerInfo[playerid][MaxRcon] == 3)
				{
					SendClientMessage(playerid, red, "RCON 2");
				 	Kick(playerid);
				}
				PlayerInfo[playerid][MaxRcon]++;
				new tmp[140];
	  			SendClientMessage(playerid, red, "RCON INVALIDA");
   				format(tmp,sizeof(tmp),"Contraseña Invalida!. \n\nPara acceder a la RCON,Tenes que insertar CORRECTAMENTE La Segunda Contraseña RCON.\n\nIntentos: %d/3", PlayerInfo[playerid][MaxRcon]);
				ShowPlayerDialog(playerid, DIALOG_TYPE_RCON2, DIALOG_STYLE_INPUT, "Ladmin - RCON!",tmp, "Aceptar", "Salir");
			}
   		}
		else
		{
			SendClientMessage(playerid, red, "Kick");
	    	return Kick(playerid);
	    }
	    return 1;
	}
#endif

  	if(dialogid == MAUTOS)
{
if(response)
{
if(listitem == 0)
{
//ShowPlayerDialog(playerid, MAUTOS+1, DIALOG_STYLE_LIST, "AUTOS", "Admiral {33FFFF}RANGO REQUERIDO: {F3FF33}CIVIL\nBlade {33FFFF}RANGO REQUERIDO: {F3FF33}CIVIL\nBlistac {33FFFF}RANGO REQUERIDO: {F3FF33}CIVIL\nBravura {33FFFF}RANGO REQUERIDO: {F3FF33}CIVIL\nBroadway {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO\nBuffalo {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO\nCadrona	{33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO\nCheetah {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO \nClover {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO \nComet {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO.","Seleccionar","Atras");
ShowPlayerDialog(playerid, MAUTOS+1,DIALOG_STYLE_LIST,"{FFFFFF}Autos","{FFFFFF}Mesa {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $5.000.\n{FFFFFF}Sabre {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $10.000.\nBlistac {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $20.000.\nSecuricar {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $50.000.\nPatriot {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO {33FF33}Precio: $60.000.","Seleccionar","Salir");
}
if(listitem == 1)
{
ShowPlayerDialog(playerid, MAUTOS+2, DIALOG_STYLE_LIST, "AUTOS RAPIDOS", "Alpha\nBanshee\nBullet\nComet\nEuros\nHotrina\nHotring\nInfernus\nJester\nPhonix\nSultan\nSupergt\nTurismo\nUranus","Seleccionar","Atras");
}
if(listitem == 2)
{
ShowPlayerDialog(playerid, MAUTOS+3, DIALOG_STYLE_LIST, "MOTOS Y BICICLETAS", "NRG-500\nFaggio\nFCR-900\nPCJ-600\nFreeway\nBF-400\nPizzaBoy\nCopBike\nSanchez\nCuatrimoto\nBike\nBMX\nMountain Bike","Seleccionar","Atras");
}
if(listitem == 3)
{
ShowPlayerDialog(playerid, MAUTOS+4, DIALOG_STYLE_LIST, "CAMIONES Y CAMIONETAS", "Ambulance\nBenson\nBobCat\nBurrito\nBus\nCamper\nCoach\nFireTruck\nPatriot\nRancher\nWalton\nDuneride\nMonster\nVerga Movil","Seleccionar","Atras");
}
if(listitem == 4)
{
ShowPlayerDialog(playerid, MAUTOS+5, DIALOG_STYLE_LIST, "AVIONES", "Dodo\nNevada\nStuntPlane\nBeagle\nSkimer\nShamal","Seleccionar","Atras");
}
if(listitem == 5)
{
ShowPlayerDialog(playerid, MAUTOS+6, DIALOG_STYLE_LIST, "HELICOPTEROS", "Cargobob\nLeviathn\nMaverick\nPolMav\nRainDanc\nSparrow\nVsnMav","Seleccionar","Atras");
}
if(listitem == 6)
{
ShowPlayerDialog(playerid, MAUTOS+7, DIALOG_STYLE_LIST, "BOTES", "CoastGuard\nDhingy\nJetMax\nLaunch\nMarquis\nPredato\nSpeedr\nSqualo","Seleccionar","Atras");
}
}
	return 1;
}
if(dialogid == REQF_ACCEPT)
{
	    	if(response == 1)
	    	{
         	//	new sendername[MAX_PLAYER_NAME];
            	new string[128];
	    	    format(string, sizeof(string), "En hora buena, Ahora perteneces al clan %s.",ReqF_Name[playerid]);
	    	    SendClientMessage(playerid, COLOR_RED, string);
	    	    PlayerInfo[playerid][CLAN_TIENE]= ReqF_Faction[playerid];
	    	 //   format(string, sizeof(string), "* %s Se une a un {F81414}clan", sendername);
      			//ProxDetector(30.0, playerid, string);
	    	    ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0;
	    	}
	    	else
			{
         	//	new sendername[MAX_PLAYER_NAME];
            //	new string[128];
        	    SendClientMessage(playerid, COLOR_RED, "Rechazaste unirte a un clan.");
        	   // format(string, sizeof(string), "* %s Rechazo unirse a un clan.", sendername);
//      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0;
}
}
if(dialogid == MAUTOS+1)
{
/*if(response == 0)
{
//ShowPlayerDialog(playerid,MAUTOS+1,DIALOG_STYLE_LIST, "MENU DE AUTOS", "Autos\nAutos Rapidos\nMotos y Bicicletas\nCamiones y Camionetas\nAviones\nHelicopteros\nBotes", "Seleccionar","Cancelar");
ShowPlayerDialog(playerid, MAUTOS+1,DIALOG_STYLE_LIST,"{FFFFFF}Autos","{FFFFFF}Mesa {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $5.000.\n{FFFFFF}Sabre {33FFFF}RANGO REQUERIDO: {F3FF33}NOVATO {33FF33}Precio: $10.000.\nBlistac {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $20.000.\nSecuricar {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $50.000.\nPatriot {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO {33FF33}Precio: $60.000.","Seleccionar","Salir");
}*/
if(response)
{
if(response)
{
if(listitem == 0)  //Mesa
{
if(GetPlayerMoney(playerid) > 4999)
{
CarSpawner(playerid,500);
ELOY9N_GivePlayerMoney(playerid, -5000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 1)  //Sabre
{
if(GetPlayerMoney(playerid) > 9999)
{
CarSpawner(playerid,475);
ELOY9N_GivePlayerMoney(playerid, -10000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 2)  //Blistac
{
		if(PlayerInfo[playerid][RANGO_PLAYER] < 2)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para comprar este articulo.");
	}
	else 
	{
if(GetPlayerMoney(playerid) > 19999)
{
CarSpawner(playerid,496);
ELOY9N_GivePlayerMoney(playerid, -20000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
	}
}
if(listitem == 3)  //Securicar
{
		if(PlayerInfo[playerid][RANGO_PLAYER] < 2)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para comprar este articulo.");
	}
else 
{
if(GetPlayerMoney(playerid) > 49999)
{
CarSpawner(playerid,428);
ELOY9N_GivePlayerMoney(playerid, -50000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
}
if(listitem == 4)   //470
{
		if(PlayerInfo[playerid][RANGO_PLAYER] < 5)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para comprar este articulo.");
	}
	else {
if(GetPlayerMoney(playerid) > 59999)

{
CarSpawner(playerid,470);
ELOY9N_GivePlayerMoney(playerid, -60000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
	}
}
}
if(listitem == 5)
{
CarSpawner(playerid,402);
}
if(listitem == 6)
{
CarSpawner(playerid,527);
}
if(listitem == 7)
{
CarSpawner(playerid,415);
}
if(listitem == 8)
{
CarSpawner(playerid,542);
}
if(listitem == 9)
{
CarSpawner(playerid,480);
}
if(listitem == 10)
{
CarSpawner(playerid,596);
}
if(listitem == 11)
{
CarSpawner(playerid,597);
}
if(listitem == 12)
{
CarSpawner(playerid,507);
}
if(listitem == 13)
{
CarSpawner(playerid,562);
}
if(listitem == 14)
{
CarSpawner(playerid,466);
}
if(listitem == 15)
{
CarSpawner(playerid,410);
}
if(listitem == 16)
{
CarSpawner(playerid,426);
}
if(listitem == 17)
{
CarSpawner(playerid,475);
}
if(listitem == 18)
{
CarSpawner(playerid,567);
}
if(listitem == 19)
{
CarSpawner(playerid,420);
}
if(listitem == 20)
{
CarSpawner(playerid,412);
}
if(listitem == 21)
{
CarSpawner(playerid,477);
}
}
return 1;
}
if(dialogid == MAUTOS+2)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "MENU DE AUTOS", "Autos\nAutos Rapidos\nMotos y Bicicletas\nCamiones y Camionetas\nAviones\nHelicopteros\nBotes", "Seleccionar","Cancelar");
}
if(response)
{
if(listitem == 0)
{
CarSpawner(playerid,602);
}
if(listitem == 1)
{
CarSpawner(playerid,429);
}
if(listitem == 2)
{
CarSpawner(playerid,541);
}
if(listitem == 3)
{
CarSpawner(playerid,480);
}
if(listitem == 4)
{
CarSpawner(playerid,587);
}
if(listitem == 5)
{
CarSpawner(playerid,502);
}
if(listitem == 6)
{
CarSpawner(playerid,494);
}
if(listitem == 7)
{
CarSpawner(playerid,411);
}
if(listitem == 8)
{
CarSpawner(playerid,559);
}
if(listitem == 9)
{
CarSpawner(playerid,603);
}
if(listitem == 10)
{
CarSpawner(playerid,560);
}
if(listitem == 11)
{
CarSpawner(playerid,506);
}
if(listitem == 12)
{
CarSpawner(playerid,451);
}
if(listitem == 13)
{
CarSpawner(playerid,558);
}
}
return 1;
}
if(dialogid == MAUTOS+3)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "MENU DE AUTOS", "Autos\nAutos Rapidos\nMotos y Bicicletas\nCamiones y Camionetas\nAviones\nHelicopteros\nBotes", "Seleccionar","Cancelar");
}
if(response)
{
if(listitem == 0)
{
CarSpawner(playerid,522);
}
if(listitem == 1)
{
CarSpawner(playerid,462);
}
if(listitem == 2)
{
CarSpawner(playerid,521);
}
if(listitem == 3)
{
CarSpawner(playerid,461);
}
if(listitem == 4)
{
CarSpawner(playerid,463);
}
if(listitem == 5)
{
CarSpawner(playerid,581);
}
if(listitem == 6)
{
CarSpawner(playerid,448);
}
if(listitem == 7)
{
CarSpawner(playerid,523);
}
if(listitem == 8)
{
CarSpawner(playerid,468);
}
if(listitem == 9)
{
CarSpawner(playerid,471);
}
if(listitem == 10)
{
CarSpawner(playerid,509);
}
if(listitem == 11)
{
CarSpawner(playerid,481);
}
if(listitem == 12)
{
CarSpawner(playerid,510);
}
}
return 1;
}
if(dialogid == MAUTOS+4)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "MENU DE AUTOS", "Autos\nAutos Rapidos\nMotos y Bicicletas\nCamiones y Camionetas\nAviones\nHelicopteros\nBotes", "Seleccionar","Cancelar");
}
if(response)
{
if(listitem == 0)
{
CarSpawner(playerid,416);
}
if(listitem == 1)
{
CarSpawner(playerid,499);
}
if(listitem == 2)
{
CarSpawner(playerid,422);
}
if(listitem == 3)
{
CarSpawner(playerid,482);
}
if(listitem == 4)
{
CarSpawner(playerid,431);
}
if(listitem == 5)
{
CarSpawner(playerid,483);
}
if(listitem == 6)
{
CarSpawner(playerid,437);
}
if(listitem == 7)
{
CarSpawner(playerid,407);
}
if(listitem == 8)
{
CarSpawner(playerid,470);
}
if(listitem == 9)
{
CarSpawner(playerid,489);
}
if(listitem == 10)
{
CarSpawner(playerid,578);
}
if(listitem == 11)
{
CarSpawner(playerid,573);
}
if(listitem == 12)
{
CarSpawner(playerid,444);
}
if(listitem == 13)
{
CarSpawner(playerid,423);
}
}
return 1;
}
if(dialogid == MAUTOS+5)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "MENU DE AUTOS", "Autos\nAutos Rapidos\nMotos y Bicicletas\nCamiones y Camionetas\nAviones\nHelicopteros\nBotes", "Seleccionar","Cancelar");
}
if(response)
{
if(listitem == 0)
{
CarSpawner(playerid,593);
}
if(listitem == 1)
{
CarSpawner(playerid,553);
}
if(listitem == 2)
{
CarSpawner(playerid,513);
}
if(listitem == 3)
{
CarSpawner(playerid,511);
}
if(listitem == 4)
{
CarSpawner(playerid,460);
}
if(listitem == 5)
{
CarSpawner(playerid,519);
}
}
return 1;
}
if(dialogid == MAUTOS+6)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "MENU DE AUTOS", "Autos\nAutos Rapidos\nMotos y Bicicletas\nCamiones y Camionetas\nAviones\nHelicopteros\nBotes", "Seleccionar","Cancelar");
}
if(response)
{
if(listitem == 0)
{
CarSpawner(playerid,548);
}
if(listitem == 1)
{
CarSpawner(playerid,417);
}
if(listitem == 2)
{
CarSpawner(playerid,487);
}
if(listitem == 3)
{
CarSpawner(playerid,497);
}
if(listitem == 4)
{
CarSpawner(playerid,563);
}
if(listitem == 5)
{
CarSpawner(playerid,469);
}
if(listitem == 6)
{
CarSpawner(playerid,488);
}
}
return 1;
}
if(dialogid == MAUTOS+7)
{
if(response == 0)
{
ShowPlayerDialog(playerid,MAUTOS,DIALOG_STYLE_LIST, "MENU DE AUTOS", "Autos\nAutos Rapidos\nMotos y Bicicletas\nCamiones y Camionetas\nAviones\nHelicopteros\nBotes", "Seleccionar","Cancelar");
}
if(response)
{
if(listitem == 0)
{
CarSpawner(playerid,472);
}
if(listitem == 1)
{
CarSpawner(playerid,473);
}
if(listitem == 2)
{
CarSpawner(playerid,493);
}
if(listitem == 3)
{
CarSpawner(playerid,595);
}
if(listitem == 4)
{
CarSpawner(playerid,484);
}
if(listitem == 5)
{
CarSpawner(playerid,430);
}
if(listitem == 6)
{
CarSpawner(playerid,452);
}
if(listitem == 7)
{
CarSpawner(playerid,446);
}
}
return 1;
}

//------------------------matricula

//-------------------tuning

if(dialogid == DIALOG_TYPE_MAIN)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:// Paintjobs
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
        	    }
        	    case 1: // colors
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
        	    }
        	    case 2: // Hoods
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
        	    }
        	    case 3: // Vents
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
        	    }
        	    case 4: // Lights
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_LIGHTS, DIALOG_STYLE_LIST, "Lights", "Round\nSquare\n \nBack", "Apply", "Close");
        	    }
        	    case 5: // Exhausts
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
        	    }
				case 6: // Front Bumpers
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
        	    }
				case 7: // Rear Bumpers
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
        	    }
				case 8: // Roofs
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
        	    }
				case 9: // Spoilers
        	    {
				ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
        	    }
				case 10: // Side Skirts
        	    {
				ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
        	    }
				case 11: // Bullbars
        	    {
				ShowPlayerDialog(playerid, DIALOG_TYPE_BULLBARS, DIALOG_STYLE_LIST, "Bullbars", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar\n \nBack", "Apply", "Close");
        	    }
				case 12: // Wheels
        	    {
     			ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
        	    }
				case 13: // Car Stereo
        	    {
				ShowPlayerDialog(playerid, DIALOG_TYPE_CSTEREO, DIALOG_STYLE_LIST, "Car Stereo", "Bass Boost\n \nBack", "Apply", "Close");
        	    }
				case 14: // Hydraulics
        	    {
 				ShowPlayerDialog(playerid, DIALOG_TYPE_HYDRAULICS, DIALOG_STYLE_LIST, "Hydaulics", "Hydaulics\n \nBack", "Apply", "Close");
        	    }
				case 15: // Nitrous Oxide
        	    {
					ShowPlayerDialog(playerid, DIALOG_TYPE_NITRO, DIALOG_STYLE_LIST, "Nitrous Oxide", "2x Nitrous\n5x Nitrous\n10x Nitrous\n \nBack", "Apply", "Close");
        	    }
				case 16: // Repair Car
        	    {
        	        new car = GetPlayerVehicleID(playerid);
					SetVehicleHealth(car,1000);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repaired car");
				 	ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
    				return 1;
        	    }
			}
		}
	}
	if(dialogid == DIALOG_TYPE_PAINTJOBS)
	{
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
	    if(response)
	    {
			switch(listitem)// Checking which list item was selected
			{
                case 0:// Paintjobs
        	    {
        	        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
		        {
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,0);
					SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added paintjob to car");
					ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
					PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
				}
					else
				{
				   SendClientMessage(playerid,COLOR_WHITE,"Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
			       ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
				}
        	    }
        	    case 1: // Colors
        	    {
        	        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,1);
					SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added paintjob to car");
					ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
					PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
				}
					else
				{
				    SendClientMessage(playerid,COLOR_WHITE,"Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
				}
        	    }
        	    case 2: // Exhausts
        	    {
        	        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,2);
					SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added paintjob to car");
					ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
					PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
				}
					else
				{
				    SendClientMessage(playerid,COLOR_WHITE,"Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
				}
        	    }
				case 3: // Front Bumpers
        	    {
        	        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,3);
					SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added paintjob to car");
					ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
					PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
				}
					else
				{
	       			SendClientMessage(playerid,COLOR_WHITE,"Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
				}
        	    }
				case 4: // Rear Bumpers
        	    {
        	        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,4);
					SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added paintjob to car");
					ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
					PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
				}
					else
				{
	            	SendClientMessage(playerid,COLOR_WHITE,"Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
				}
        	    }
				case 5:
        	    {
        	        ShowPlayerDialog(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "Apply", "Close");
        	    }
				case 6:
        	    {
                 ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
			}
		}
	}
	if(dialogid == DIALOG_TYPE_COLORS)
	{
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
	    if(response)
	    {
			switch(listitem)// Checking which list item was selected
			{
                case 0:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            ChangeVehicleColor(car,0,0);
		            //GivePlayerMoney(playerid,-150);
		            SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
		            ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
		            PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);

				}
					else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
       	    	case 1:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,1,1);
			    //    GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
				}
					else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
        	    case 2:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,3,3);
			      //  GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
				}
					else
				{
	      		 	SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
				case 3:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,79,79);
			     //   GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
				}
					else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
				case 4:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,86,86);
			     //   GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
				}
					else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
				case 5:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,6,6);
			      //  GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
				case 6:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,126,126);
			  //      GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
				case 7:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,66,66);
			    //    GivePlayerMoney(playerid,-150);
	          		SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
	          		PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
				case 8:
        	    {
					if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            ChangeVehicleColor(car,24,24);
		            SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
		            PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		            ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
        	    case 9:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,123,123);
	          		SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
	          		PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
        	    case 10:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,53,53);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
        	    case 11:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,93,93);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
				case 12:
        	    {
        	         if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,83,83);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
						else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
				case 13:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,60,60);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
				case 14:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,161,161);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
				case 15:
        	    {
        	        if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,153,153);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully repainted to car");
			        PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
				}
        	    }
        	    case 16:
        	    {
        	        ShowPlayerDialog(playerid, DIALOG_TYPE_COLORS, DIALOG_STYLE_LIST, "Colors", "Black\nWhite\nRed\nBlue\nGreen\nred\nPink\nBrown\nGrey\nGold\nDark Blue\nLight Blue\nCold Green\nLight Grey\nDark Red\nDark Brown\n \nBack", "Apply", "Close");
        	    }
        	    case 17:
        	    {
                 ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
			}
		}
	}
	if(dialogid == DIALOG_TYPE_EXHAUSTS)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)
        	{
        	    case 0:
        	    {
                 if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1034);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            	SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
		            	ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1046);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1065);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1064);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1028);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1089);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
	    			}
					}
	  			 	else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 1:
        	    {
                 if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562)
			        {
			            AddVehicleComponent(car,1037);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1045);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1066);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1059);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1029);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1092);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 2:
        	    {
                 if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponent(car,1044);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		             	SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponent(car,1126);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponent(car,1129);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	                    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponent(car,1104);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 535) // Slamvan
					{
 						AddVehicleComponent(car,1113);
 						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponent(car,1136);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					   	SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
        	    }
				case 3:
        	    {
                 if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponent(car,1043);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponent(car,1127);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponent(car,1132);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponent(car,1105);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}

					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponent(car,1114);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}

					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponent(car,1135);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 4:// Large
        	    {
     				if(
					pmodelid[playerid] == 401 ||//bravura
					pmodelid[playerid] == 518 ||//buccaneer
					pmodelid[playerid] == 527 ||//cadrona
					pmodelid[playerid] == 542 ||//clover
					pmodelid[playerid] == 589 ||//club
					pmodelid[playerid] == 400 ||//landstalker
					pmodelid[playerid] == 517 ||//majestic
					pmodelid[playerid] == 603 ||//phoenix
					pmodelid[playerid] == 426 ||//premier
					pmodelid[playerid] == 547 ||//primo
					pmodelid[playerid] == 405 ||//sentinel
					pmodelid[playerid] == 580 ||//adminsord
					pmodelid[playerid] == 550 ||//sunrise
					pmodelid[playerid] == 549 ||//tampa
					pmodelid[playerid] == 477)//zr-350
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 401) // bravura
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 518) // buccaneer
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 527) // cadrona
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 542) // clover
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 589) // club
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 400) // landstalker
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 603) // phoenix
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 436) // previon
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 547) // primo
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 405) // sentinel
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 580) // stafford
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550) // sunrise
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 549) // tampa
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 477) // zr-350
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 517) // majestic
			        	{
			            AddVehicleComponent(car,1020);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
        	    	}
        	    	else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
				}
        	    case 5: // Medium
        	    {
                        if(
					pmodelid[playerid] == 527 ||//cadrona
					pmodelid[playerid] == 542 ||//clover
					pmodelid[playerid] == 400 ||//landstalker
					pmodelid[playerid] == 426 ||//premier
					pmodelid[playerid] == 436 ||//previon
					pmodelid[playerid] == 547 ||//primo
					pmodelid[playerid] == 405 ||//sentinel
					pmodelid[playerid] == 477)//zr-350
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 527) // cadrona
			        	{
			            AddVehicleComponent(car,1021);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 542) // clover
			        	{
			            AddVehicleComponent(car,1021);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 400) // landstalker
			        	{
			            AddVehicleComponent(car,1021);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 426) // premier
			        	{
			            AddVehicleComponent(car,1021);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 436) // previon
			        	{
			            AddVehicleComponent(car,1021);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 547) // primo
			        	{
			            AddVehicleComponent(car,1021);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 405) // sentinel
			        	{
			            AddVehicleComponent(car,1021);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 477) // zr350
			        	{
			            AddVehicleComponent(car,1021);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
        	    }
        	    case 6: // Small
        	    {
                        if(
					pmodelid[playerid] == 436)//previon
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 436) // previon
			        	{
			            AddVehicleComponent(car,1022);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
        	    }
        	    case 7: // Twin
        	    {
                        if(
					pmodelid[playerid] == 518 ||//buccaneer
					pmodelid[playerid] == 415 ||//cheetah
					pmodelid[playerid] == 542 ||//clover
					pmodelid[playerid] == 546 ||//intruder
					pmodelid[playerid] == 400 ||//landstalker
					pmodelid[playerid] == 517 ||//majestic
					pmodelid[playerid] == 603 ||//phoenix
					pmodelid[playerid] == 426 ||//premier
					pmodelid[playerid] == 436 ||//previon
					pmodelid[playerid] == 547 ||//primo
					pmodelid[playerid] == 405 ||//sentinel
					pmodelid[playerid] == 550 ||//sunrise
					pmodelid[playerid] == 549 ||//tampa
					pmodelid[playerid] == 477)//zr-350
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 518) // buccaneer
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 415) // cheetah
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 542) // clover
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 546) // intruder
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 400) // landstalker
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 517) // majestic
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 603) // phoenix
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 426) // premier
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 436) // previon
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 547) // primo
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 405 ) // sentinel
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550) // sunrise
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 549) // tampa
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 477) // zr-350
			        	{
			            AddVehicleComponent(car,1019);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
        	    }
        	    case 8: // Upswept
        	    {
                        if(
                    pmodelid[playerid] == 401 ||//bravura
					pmodelid[playerid] == 518 ||//buccaneer
					pmodelid[playerid] == 415 ||//cheetah
					pmodelid[playerid] == 542 ||//clover
					pmodelid[playerid] == 546 ||//intruder
					pmodelid[playerid] == 400 ||//landstalker
					pmodelid[playerid] == 517 ||//majestic
					pmodelid[playerid] == 603 ||//phoenix
					pmodelid[playerid] == 426 ||//premier
					pmodelid[playerid] == 415 ||//cheetah
					pmodelid[playerid] == 547 ||//primo
					pmodelid[playerid] == 405 ||//sentinel
					pmodelid[playerid] == 550 ||//sunrise
					pmodelid[playerid] == 549 ||//tampa
					pmodelid[playerid] == 477)//zr-350
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 415) // cheetah
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 518) // buccaneer
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 527) // cadrona
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 542) // clover
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 589) // club
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 400) // landstalker
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 603) // phoenix
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 546) // intruder
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 547) // primo
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 405) // sentinel
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 580) // stafford
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550) // sunrise
			        	{
			            AddVehicleComponent(car,1018);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 549) // tampa
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 477) // zr-350
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 517) // majestic
			        	{
			            AddVehicleComponent(car,1018);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
						}
        	    }
				case 9: // _
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_EXHAUSTS, DIALOG_STYLE_LIST, "Exhausts", "Wheel Arc. Alien exhaust\nWheel Arc. X-Flow exhaust\nLow Co. Chromer exhaust\nLow Co. Slamin exhaust\nTransfender Large exhaust\nTransfender Medium exhaust\nTransfender Small exhaust\nTransfender Twin exhaust\nTransfender Upswept exhaust\n \nBack", "Apply", "Close");
        	    }
        	    case 10: // Back
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
			}
		}
	}
	if(dialogid == DIALOG_TYPE_FBUMPS)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                 if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)
				{
		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponent(car,1171);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
		            	ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponent(car,1153);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponent(car,1160);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponent(car,1155);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponent(car,1169);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponent(car,1166);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 1:
        	    {
                 if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)
		        {

			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponent(car,1172);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponent(car,1152);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponent(car,1173);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponent(car,1157);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponent(car,1170);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponent(car,1165);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 2:
        	    {
                 if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
				{
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponent(car,1174);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponent(car,1179);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponent(car,1189);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponent(car,1182);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponent(car,1115);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponent(car,1191);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
        	    }
				case 3:
        	    {
                 if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 536 ||
	            pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 576)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponent(car,1175);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponent(car,1185);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponent(car,1188);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponent(car,1181);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}

				    else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponent(car,1116);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponent(car,1190);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
        	    }
				case 4:
        	    {
             	ShowPlayerDialog(playerid, DIALOG_TYPE_FBUMPS, DIALOG_STYLE_LIST,"Front Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow co. Chromer Bumper\nLow co. Slamin Bumper\n \nBack", "Apply", "Close");
        	    }
				case 5:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
			}
		}
	}
	if(dialogid == DIALOG_TYPE_RBUMPS)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                 if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponent(car,1149);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
		            	ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponent(car,1150);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponent(car,1159);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponent(car,1154);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponent(car,1141);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponent(car,1168);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 1:
        	    {
                 if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponent(car,1148);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"YComponent successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponent(car,1151);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponent(car,1161);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponent(car,1156);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponent(car,1140);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponent(car,1167);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 2:
        	    {
                 if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
		        {


              		new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponent(car,1176);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponent(car,1180);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponent(car,1187);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponent(car,1184);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponent(car,1109);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponent(car,1192);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
     }
						else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
        	    }
				case 3:
        	    {
                 if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponent(car,1177);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponent(car,1178);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponent(car,1186);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponent(car,1183);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}

						else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponent(car,1110);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}

						else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponent(car,1193);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}

					}
						else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
					}
        	    }
				case 4:
        	    {
            	    ShowPlayerDialog(playerid, DIALOG_TYPE_RBUMPS, DIALOG_STYLE_LIST, "Rear Bumpers", "Wheel Arc. Alien Bumper\nWheel Arc. X-Flow Bumper\nLow Co. Chromer Bumper\nLow Co. Slamin Bumper\n \nBack", "Apply", "Close");
        	    }
				case 5:
        	    {
     				ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
 			}
		}
	}
	if(dialogid == DIALOG_TYPE_ROOFS)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                 if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponent(car,1038);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
		            	ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponent(car,1054);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponent(car,1067);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponent(car,1055);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponent(car,1032);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponent(car,1088);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
					}
						else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 1:
        	    {
                 if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponent(car,1035);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponent(car,1053);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponent(car,1068);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponent(car,1061);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponent(car,1033);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
						else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponent(car,1091);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
					}
						else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 2:
        	    {
                 if(pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 567) // Savanna
			        {
			            AddVehicleComponent(car,1130);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
	   					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponent(car,1128);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
					}
						else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
        	    }
				case 3:
        	    {
                 if(pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 567) // Savanna
			        {
			            AddVehicleComponent(car,1131);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
	   					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponent(car,1103);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
					}
						else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
					}
        	    }
				case 4:
        	    {
                 if(
					pmodelid[playerid] == 401 ||
					pmodelid[playerid] == 518 ||
					pmodelid[playerid] == 589 ||
					pmodelid[playerid] == 492 ||
					pmodelid[playerid] == 546 ||
					pmodelid[playerid] == 603 ||
					pmodelid[playerid] == 426 ||
					pmodelid[playerid] == 436 ||
					pmodelid[playerid] == 580 ||
					pmodelid[playerid] == 550||
					pmodelid[playerid] == 477)
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 401)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 518)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 589)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 492)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 546)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 603)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 426)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 436)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 580)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 477)
			        	{
			            AddVehicleComponent(car,1006);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
						}
        	    }
				case 5:
        	    {
                 ShowPlayerDialog(playerid, DIALOG_TYPE_ROOFS, DIALOG_STYLE_LIST, "Roofs", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop\n \nBack", "Apply", "Close");
        	    }
				case 6:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
 			}
		}
	}
	if(dialogid == DIALOG_TYPE_SPOILERS)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponent(car,1147);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
		            	ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponent(car,1049);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponent(car,1162);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponent(car,1158);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponent(car,1138);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponent(car,1164);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 1:
        	    {
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponent(car,1146);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponent(car,1150);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponent(car,1158);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponent(car,1060);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponent(car,1139);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponent(car,1163);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 2:// Win
        	    {
                if(
                    pmodelid[playerid] == 401 ||//bravura
					pmodelid[playerid] == 518 ||//buccaneer
					pmodelid[playerid] == 527 ||//cadrona
					pmodelid[playerid] == 415 ||//cheetah
					pmodelid[playerid] == 546 ||//intruder
					pmodelid[playerid] == 603 ||//phoenix
					pmodelid[playerid] == 426 ||//premier
					pmodelid[playerid] == 436 ||//previon
					pmodelid[playerid] == 405 ||//sentinel
					pmodelid[playerid] == 477 ||//stallion
					pmodelid[playerid] == 580 ||//adminsord
					pmodelid[playerid] == 550 ||//sunrise
					pmodelid[playerid] == 549)//tampa
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 401) // bravura
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 518) // buccaneer
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 527) // cadrona
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 415) // cheetah
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 546) // intruder
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 603) // phoenix
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 426) // premier
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 436) // previon
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 405) // sentinel
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 477) // stallion
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 580) // stafford
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550) // sunrise
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 549) // tampa
			        	{
			            AddVehicleComponent(car,1001);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    }
        	    case 3: // Fury
        	    {
                        if(
					pmodelid[playerid] == 518 ||//buccaneer
					pmodelid[playerid] == 415 ||//cheetah
					pmodelid[playerid] == 546 ||//intruder
					pmodelid[playerid] == 517 ||//majestic
					pmodelid[playerid] == 603 ||//phoenix
					pmodelid[playerid] == 405 ||//sentinel
					pmodelid[playerid] == 477 ||//stallion
					pmodelid[playerid] == 580 ||//adminsord
					pmodelid[playerid] == 550 ||//sunrise
					pmodelid[playerid] == 549)//tampa
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 518) // buccaneer
			        	{
			            AddVehicleComponent(car,1023);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 415) // cheetah
			        	{
			            AddVehicleComponent(car,1023);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 546) // intruder
			        	{
			            AddVehicleComponent(car,1023);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 517) // majestic
			        	{
			            AddVehicleComponent(car,1023);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 603) // phoenix
			        	{
			            AddVehicleComponent(car,1023);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 405) // sentinel
			        	{
			            AddVehicleComponent(car,1023);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 477) // stallion
			        	{
			            AddVehicleComponent(car,1023);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 580) // stafford
			        	{
			            AddVehicleComponent(car,1023);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550) // sunrise
			        	{
			            AddVehicleComponent(car,1023);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 549) // tampa
			        	{
			            AddVehicleComponent(car,1023);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    }
        	    case 4: // Alpha
        	    {
                        if(
					pmodelid[playerid] == 518 ||//buccaneer
					pmodelid[playerid] == 415 ||//cheetah
					pmodelid[playerid] == 401 ||//bravura
					pmodelid[playerid] == 517 ||//majestic
					pmodelid[playerid] == 426 ||//premier
					pmodelid[playerid] == 436 ||//previon
					pmodelid[playerid] == 477 ||//stallion
					pmodelid[playerid] == 547 ||//primo
					pmodelid[playerid] == 550 ||//sunrise
					pmodelid[playerid] == 549)//tampa
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 518) // buccaneer
			        	{
			            AddVehicleComponent(car,1003);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 415) // cheetah
			        	{
			            AddVehicleComponent(car,1003);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 401) // bravura
			        	{
			            AddVehicleComponent(car,1003);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 517) // majestic
			        	{
			            AddVehicleComponent(car,1003);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 426) // premier
			        	{
			            AddVehicleComponent(car,1003);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 436) // previon
			        	{
			            AddVehicleComponent(car,1003);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 477) // stallion
			        	{
			            AddVehicleComponent(car,1003);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 547) // primo
			        	{
			            AddVehicleComponent(car,1003);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550) // sunrise
			        	{
			            AddVehicleComponent(car,1003);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 549) // tampa
			        	{
			            AddVehicleComponent(car,1003);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    }
        	    case 5: // Pro
        	    {
                        if(
					pmodelid[playerid] == 589 ||//club
					pmodelid[playerid] == 492 ||//greenwood
					pmodelid[playerid] == 547 ||//primo
					pmodelid[playerid] == 405)//sentinel
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 518) // club
			        	{
			            AddVehicleComponent(car,1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 492) // greenwood
			        	{
			            AddVehicleComponent(car,1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 547) // primo
			        	{
			            AddVehicleComponent(car,1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 405) // sentinel
			        	{
        				AddVehicleComponent(car,1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    }
				case 6: // Champ
        	    {
                        if(
					pmodelid[playerid] == 527 ||//cadrona
					pmodelid[playerid] == 542 ||//clover
					pmodelid[playerid] == 405)//sentinel
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 527) // cadrona
			        	{
			            AddVehicleComponent(car,1014);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 542) // clover
			        	{
			            AddVehicleComponent(car,1014);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 405) // sentinel
			        	{
        				AddVehicleComponent(car,1014);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    }
        	    case 7: // Race
        	    {
                if(
					pmodelid[playerid] == 527 ||//cadrona
					pmodelid[playerid] == 542)//clover
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 527) // cadrona
			        	{
			            AddVehicleComponent(car,1014);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 542) // clover
			        	{
			            AddVehicleComponent(car,1014);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    }
				case 8: // Drag
        	    {
                if(
					pmodelid[playerid] == 546 ||//intruder
					pmodelid[playerid] == 517)//majestic
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 546) // intruder
			        	{
			            AddVehicleComponent(car,1002);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 517) // majestic
			        	{
			            AddVehicleComponent(car,1002);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
						}
        	    }
        	    case 9:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_SPOILERS, DIALOG_STYLE_LIST, "Spoilers", "Wheel Arc. Alien Spoiler\nWheel Arc. X-Flow Spoiler\nTransfender Win Spoiler\nTransfender Fury Spoiler\nTransfender Alpha Spoiler\nTransfender Pro Spoiler\nTransfender Champ Spoiler\nTransfender Race Spoiler\nTransfender Drag Spoiler\n \nBack", "Apply", "Close");
        	    }
				case 10:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
 			}
		}
	}
	if(dialogid == DIALOG_TYPE_SIDESKIRTS)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponent(car,1036);
		            	AddVehicleComponent(car,1040);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
		            	ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponent(car,1047);
					    AddVehicleComponent(car,1051);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponent(car,1069);
					    AddVehicleComponent(car,1071);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"YComponent successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponent(car,1056);
					    AddVehicleComponent(car,1062);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponent(car,1026);
					    AddVehicleComponent(car,1027);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponent(car,1090);
					    AddVehicleComponent(car,1094);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 1:
        	    {
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 558 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponent(car,1039);
			            AddVehicleComponent(car,1041);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponent(car,1048);
					    AddVehicleComponent(car,1052);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponent(car,1070);
					    AddVehicleComponent(car,1072);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponent(car,1057);
					    AddVehicleComponent(car,1063);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponent(car,1031);
					    AddVehicleComponent(car,1030);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponent(car,1093);
					    AddVehicleComponent(car,1095);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
					    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 2:
        	    {
                if(pmodelid[playerid] == 575 ||
	               pmodelid[playerid] == 536 ||
	               pmodelid[playerid] == 576 ||
		 	       pmodelid[playerid] == 567)
	               {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
	       		        AddVehicleComponent(car,1042);
	       		        AddVehicleComponent(car,1099);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
	   				else if(pmodelid[playerid] == 567) // Savanna
					{
					    AddVehicleComponent(car,1102);
					    AddVehicleComponent(car,1133);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
	    		        ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
	                }
	                else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponent(car,1134);
					    AddVehicleComponent(car,1137);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
	    		        ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
	                }
	                else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponent(car,1108);
					    AddVehicleComponent(car,1107);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
	                    ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
	                }
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
        	    }
				case 3:
        	    {
                if(pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponent(car,1122);
			            AddVehicleComponent(car,1101);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
        	    }
				case 4:
        	    {
                if(pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponent(car,1106);
			            AddVehicleComponent(car,1124);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car. ");
					ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
        	    }
				case 5:
        	    {
                if(pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 535) // Slamvan
			        {
			            AddVehicleComponent(car,1118);
			            AddVehicleComponent(car,1120);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car. ");
					ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
        	    }
				case 6:
        	    {
				if(pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 535) // Slamvan
			        {
			            AddVehicleComponent(car,1119);
			            AddVehicleComponent(car,1121);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car. ");
					ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
					}
        	    }
				case 7:
        	    {
				if(
					pmodelid[playerid] == 401 ||
					pmodelid[playerid] == 518 ||
					pmodelid[playerid] == 527 ||
					pmodelid[playerid] == 415 ||
					pmodelid[playerid] == 589 ||
					pmodelid[playerid] == 546 ||
					pmodelid[playerid] == 517 ||
					pmodelid[playerid] == 603 ||
					pmodelid[playerid] == 436 ||
					pmodelid[playerid] == 439 ||
					pmodelid[playerid] == 580 ||
					pmodelid[playerid] == 549 ||
					pmodelid[playerid] == 477)
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 401)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 518)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 527)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 415)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 589)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 546)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 517)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 603)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 436)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 439)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 580)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 549)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 477)
			        	{
			            AddVehicleComponent(car,1007);
			            AddVehicleComponent(car,1017);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
        	    	}
        	    		else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
						}
        	    }
				case 8:
        	    {
				ShowPlayerDialog(playerid, DIALOG_TYPE_SIDESKIRTS, DIALOG_STYLE_LIST, "Side Skirts", "Wheel Arc. Alien Side Skirt\nWheel Arc. X-Flow Side Skirt\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender Side Skirt\n \nBack", "Apply", "Close");
        	    }
				case 9:
        	    {
    			ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
 			}
		}
	}
	if(dialogid == DIALOG_TYPE_BULLBARS)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponent(car,1100);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_BULLBARS, DIALOG_STYLE_LIST, "Bullbars", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar\n \nBack", "Apply", "Close");
			        }
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car. ");
					ShowPlayerDialog(playerid, DIALOG_TYPE_BULLBARS, DIALOG_STYLE_LIST, "Bullbars", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 1:
        	    {
                if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponent(car,1123);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_BULLBARS, DIALOG_STYLE_LIST, "Bullbars", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car. ");
					ShowPlayerDialog(playerid, DIALOG_TYPE_BULLBARS, DIALOG_STYLE_LIST, "Bullbars", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 2:
        	    {
                if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponent(car,1125);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_BULLBARS, DIALOG_STYLE_LIST, "Bullbars", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component to your car. ");
					ShowPlayerDialog(playerid, DIALOG_TYPE_BULLBARS, DIALOG_STYLE_LIST, "Bullbars", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar\n \nBack", "Apply", "Close");
					}
        	    }
				case 3:
        	    {
                if(pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 535) // Slamvan
			        {
			            AddVehicleComponent(car,1117);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_BULLBARS, DIALOG_STYLE_LIST, "Bullbars", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar\n \nBack", "Apply", "Close");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,"[WARNING] ou cannot install this component to your car. ");
					ShowPlayerDialog(playerid, DIALOG_TYPE_BULLBARS, DIALOG_STYLE_LIST, "Bullbars", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar\n \nBack", "Apply", "Close");
					}
        	    }
				case 4:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_BULLBARS, DIALOG_STYLE_LIST, "Bullbars", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar\n \nBack", "Apply", "Close");
        	    }
				case 5:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
 			}
		}
	}
	if(dialogid == DIALOG_TYPE_WHEELS)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponent(car,1025);
		            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Offroad Wheels ");
		            ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
        	    case 1:
        	    {
                if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1074);
           			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Mega Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
        	    case 2:
        	    {
                if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponent(car,1076);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Wires Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 3:
        	    {
                if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1078);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Twist Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
	      		 	SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 4:
        	    {
                if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1081);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Grove Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 5:
        	    {
                if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponent(car,1082);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Import Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 6:
        	    {
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1085);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Atomic Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 7:
        	    {
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1096);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	          		SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Ahab Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 8:
        	    {
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1097);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	          		SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Virtual Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 9:
        	    {
     			if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1098);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	          		SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Access Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 10:
        	    {
				if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponent(car,1084);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Trance Wheels ");
		            ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 11:
        	    {
 				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1073);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Shadow Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 12:
        	    {
					if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponent(car,1075);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Rimshine Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
					else
				{
	      	 		SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 13:
        	    {
					if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1077);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Classic Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
					else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 14:
        	    {
					if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1079);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Cutter Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
					else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 15:
        	    {
					if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponent(car,1080);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Switch Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 16:
        	    {
					if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1083);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"You have succesfully added Dollar Wheels");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
					else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
				}
        	    }
				case 17:
        	    {
					ShowPlayerDialog(playerid, DIALOG_TYPE_WHEELS, DIALOG_STYLE_LIST, "Wheels", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nTrance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n \nBack", "Apply", "Close");
        	    }
				case 18:
        	    {
     			ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
 			}
		}
	}
	if(dialogid == DIALOG_TYPE_CSTEREO)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponent(car,1086);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added. ");
		            ShowPlayerDialog(playerid, DIALOG_TYPE_CSTEREO, DIALOG_STYLE_LIST, "Car Stereo", "Bass Boost\n \nBack", "Apply", "Close");
				}
				else
				{
	                SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_CSTEREO, DIALOG_STYLE_LIST, "Car Stereo", "Bass Boost\n \nBack", "Apply", "Close");
			    }
        	    }
        	    case 1:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_CSTEREO, DIALOG_STYLE_LIST, "Car Stereo", "Bass Boost\n \nBack", "Apply", "Close");
        	    }
        	    case 2:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
 			}
		}
	}
	if(dialogid == DIALOG_TYPE_HYDRAULICS)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponent(car,1087);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added. ");
		            ShowPlayerDialog(playerid, DIALOG_TYPE_HYDRAULICS, DIALOG_STYLE_LIST, "Hydaulics", "Hydaulics\n \nBack", "Apply", "Close");
				}
				else
				{
	                SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_HYDRAULICS, DIALOG_STYLE_LIST, "Hydaulics", "Hydaulics\n \nBack", "Apply", "Close");
			    }
        	    }
        	    case 1:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_HYDRAULICS, DIALOG_STYLE_LIST, "Hydaulics", "Hydaulics\n \nBack", "Apply", "Close");
        	    }
        	    case 2:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
 			}
		}
	}
	if(dialogid == DIALOG_TYPE_NITRO)
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponent(car,1008);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added. ");
           			ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
				}
				else
				{
	                SendClientMessage(playerid,COLOR_RED,"Not enough money!");
        			ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
			    }
        	    }
        	    case 1:
        	    {
                if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1009);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
           			ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
           			ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
				}
        	    }
        	    case 2:
        	    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponent(car,1010);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_WHITE,"Component successfully added.");
			        ShowPlayerDialog(playerid, DIALOG_TYPE_NITRO, DIALOG_STYLE_LIST, "Nitrous Oxide", "2x Nitrous\n5x Nitrous\n10x Nitrous\n \nBack", "Apply", "Close");
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowPlayerDialog(playerid, DIALOG_TYPE_NITRO, DIALOG_STYLE_LIST, "Nitrous Oxide", "2x Nitrous\n5x Nitrous\n10x Nitrous\n \nBack", "Apply", "Close");
				}
        	    case 3:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_NITRO, DIALOG_STYLE_LIST, "Nitrous Oxide", "2x Nitrous\n5x Nitrous\n10x Nitrous\n \nBack", "Apply", "Close");
        	    }
        	    case 4:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
 			}
		}
	}
	if(dialogid == DIALOG_TYPE_HOODS)// HOODS
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:// fury
        	    {
                	if(
					pmodelid[playerid] == 401 ||
					pmodelid[playerid] == 518 ||
					pmodelid[playerid] == 589 ||
					pmodelid[playerid] == 492 ||
					pmodelid[playerid] == 426 ||
					pmodelid[playerid] == 550)
			    	{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 401) // bravura
			        	{
			            AddVehicleComponent(car,1005);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 518) // buccaneer
			        	{
			            AddVehicleComponent(car,1005);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 589) // club
			        	{
			            AddVehicleComponent(car,1005);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 492) // greenwood
			        	{
			            AddVehicleComponent(car,1005);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 426) // premier
			        	{
			            AddVehicleComponent(car,1005);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550) // sunrise
			        	{
			            AddVehicleComponent(car,1005);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
					}
					else
					{
					SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
					}
	    		}
        	    case 1: // Champ
        	    {
                if(
					pmodelid[playerid] == 401 ||
					pmodelid[playerid] == 492 ||
					pmodelid[playerid] == 546 ||
					pmodelid[playerid] == 426 ||
					pmodelid[playerid] == 550)
			    	{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 401) // bravura
			        	{
			            AddVehicleComponent(car,1004);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 546) // intruder
			        	{
			            AddVehicleComponent(car,1004);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 492) // greenwood
			        	{
			            AddVehicleComponent(car,1004);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 426) // premier
			        	{
			            AddVehicleComponent(car,1004);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550) // sunrise
			        	{
			            AddVehicleComponent(car,1004);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
					}
					else
					{
					SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
					}
        	    }
				case 2: // Race
        	    {
                if(
					pmodelid[playerid] == 549)
			    	{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 549) // tampa
			        	{
			            AddVehicleComponent(car,1011);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
					}
					else
					{
					SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
					}
        	    }
        	    case 3: // Worx
        	    {
                if(
					pmodelid[playerid] == 549)
			    	{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 549) // tampa
			        	{
			            AddVehicleComponent(car,1012);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
						}
					}
					else
					{
					SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
					ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
					}
        	    }
				case 4:
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_HOODS, DIALOG_STYLE_LIST, "Hoods", "Fury\nChamp\nRace\nWorx\n \nBack", "Apply", "Close");
        	    }
				case 5: // Back
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
			}
		}
	}
	////////////////////////////////////////end of hoods///////////
    if(dialogid == DIALOG_TYPE_VENTS)//////////////////VENTS//////////////////
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:// Oval
        	    {
     				if(
					pmodelid[playerid] == 401 ||//bravura
					pmodelid[playerid] == 518 ||//buccaneer
					pmodelid[playerid] == 546 ||//intruder
					pmodelid[playerid] == 517 ||//majestic
					pmodelid[playerid] == 603 ||//phoenix
					pmodelid[playerid] == 547 ||//primo
					pmodelid[playerid] == 439 ||//stallion
					pmodelid[playerid] == 550 ||//sunrise
					pmodelid[playerid] == 549)//tampa
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 401) // bravura
			        	{
			            AddVehicleComponent(car,1142);
			            AddVehicleComponent(car,1143);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 518) // buccaneer
			        	{
			            AddVehicleComponent(car,1142);
			            AddVehicleComponent(car,1143);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 546) // intruder
			        	{
			            AddVehicleComponent(car,1142);
			            AddVehicleComponent(car,1143);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 517) // majestic
			        	{
			            AddVehicleComponent(car,1142);
			            AddVehicleComponent(car,1143);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 603) // phoenix
			        	{
			            AddVehicleComponent(car,1142);
			            AddVehicleComponent(car,1143);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 547) // primo
			        	{
			            AddVehicleComponent(car,1142);
			            AddVehicleComponent(car,1143);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 439) // stallion
			        	{
			            AddVehicleComponent(car,1142);
			            AddVehicleComponent(car,1143);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550) // sunrise
			        	{
			            AddVehicleComponent(car,1142);
			            AddVehicleComponent(car,1143);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 549) // tampa
			        	{
			            AddVehicleComponent(car,1142);
			            AddVehicleComponent(car,1143);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
        	    	}
        	    	else
						{
							SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
							ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
				}
        	    case 1: // Square
        	    {
                if(
					pmodelid[playerid] == 401 ||//bravura
					pmodelid[playerid] == 518 ||//buccaneer
					pmodelid[playerid] == 589 ||//club
					pmodelid[playerid] == 546 ||//intruder
					pmodelid[playerid] == 517 ||//majestic
					pmodelid[playerid] == 603 ||//phoenix
					pmodelid[playerid] == 439 ||//stallion
					pmodelid[playerid] == 550 ||//sunrise
					pmodelid[playerid] == 549)//tampa
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 401) // bravura
			        	{
			            AddVehicleComponent(car,1144);
			            AddVehicleComponent(car,1145);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 518) // buccaneer
			        	{
			            AddVehicleComponent(car,1144);
			            AddVehicleComponent(car,1145);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 589) // club
			        	{
			            AddVehicleComponent(car,1144);
			            AddVehicleComponent(car,1145);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 546) // intruder
			        	{
			            AddVehicleComponent(car,1144);
			            AddVehicleComponent(car,1145);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 517) // majestic
			        	{
			            AddVehicleComponent(car,1144);
			            AddVehicleComponent(car,1145);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 603) // phoenix
			        	{
			            AddVehicleComponent(car,1144);
			            AddVehicleComponent(car,1145);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 439) // stallion
			        	{
			            AddVehicleComponent(car,1144);
			            AddVehicleComponent(car,1145);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 550) // sunrise
			        	{
			            AddVehicleComponent(car,1144);
			            AddVehicleComponent(car,1145);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 549) // tampa
			        	{
			            AddVehicleComponent(car,1144);
			            AddVehicleComponent(car,1145);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
        	    	}
              			else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
						}
        	    }
				case 2: // _
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n \nBack", "Apply", "Close");
        	    }
        	    case 3: // Back
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide\nRepair Car", "Enter", "Close");
        	    }
			}
		}
	}


	///////////END OF VENTS///////////
	if(dialogid == DIALOG_TYPE_LIGHTS)//////////////////LIGTS//////////////////
    {
        if(!response)
        {
            SetCameraBehindPlayer(playerid);
        }
        if(response)
        {
           	switch(listitem)// Checking which list item was selected
        	{
        	    case 0:// round
        	    {
     				if(
					pmodelid[playerid] == 401 ||//bravura
					pmodelid[playerid] == 518 ||//buccaneer
					pmodelid[playerid] == 589 ||//club
					pmodelid[playerid] == 400 ||//landstalker
					pmodelid[playerid] == 436 ||//previon
					pmodelid[playerid] == 439)//stallion
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 401) // bravura
			        	{
               			AddVehicleComponent(car,1013);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
               			ShowPlayerDialog(playerid, DIALOG_TYPE_LIGHTS, DIALOG_STYLE_LIST, "Lights", "Round\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 518) // buccaneer
			        	{
			            AddVehicleComponent(car,1013);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
               			ShowPlayerDialog(playerid, DIALOG_TYPE_LIGHTS, DIALOG_STYLE_LIST, "Lights", "Round\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 589) // club
			        	{
			            AddVehicleComponent(car,1013);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_LIGHTS, DIALOG_STYLE_LIST, "Lights", "Round\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 400) // landstalker
			        	{
			            AddVehicleComponent(car,1013);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
           			 	ShowPlayerDialog(playerid, DIALOG_TYPE_LIGHTS, DIALOG_STYLE_LIST, "Lights", "Round\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 436) // previon
			        	{
			            AddVehicleComponent(car,1013);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_LIGHTS, DIALOG_STYLE_LIST, "Lights", "Round\nSquare\n \nBack", "Apply", "Close");
						}
			        	if(pmodelid[playerid] == 439) // stallion
			        	{
			            AddVehicleComponent(car,1013);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Component successfully added");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_LIGHTS, DIALOG_STYLE_LIST, "Lights", "Round\nSquare\n \nBack", "Apply", "Close");
						}
        	    	}
                    else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] You cannot install this component on your car.");
						ShowPlayerDialog(playerid, DIALOG_TYPE_LIGHTS, DIALOG_STYLE_LIST, "Lights", "Round\nSquare\n \nBack", "Apply", "Close");
						}
				}
        	    case 1: // Square
        	    {
                if(
					pmodelid[playerid] == 589 ||//club
					pmodelid[playerid] == 603 ||//phoenix
					pmodelid[playerid] == 400)//landstalker
					{
			        	new car = GetPlayerVehicleID(playerid);
			        	if(pmodelid[playerid] == 589) // club
			        	{
			            AddVehicleComponent(car,1024);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Componente Agregado Satisfactoriamente!");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Tomas de Aire", "Ovalado\nCuadrado\n \nRegresar", "Aplicar", "Cerrar");
						}
			        	if(pmodelid[playerid] == 603) // phoenix
			        	{
			            AddVehicleComponent(car,1024);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Componente Agregado Satisfactoriamente!");
			            ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Tomas de Aire", "Ovalado\nCuadrado\n \nRegresar", "Aplicar", "Cerrar");
						}
			        	if(pmodelid[playerid] == 400) // landstalker
			        	{
			            AddVehicleComponent(car,1024);
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_WHITE,"Componente Agregado Satisfactoriamente!");
                        ShowPlayerDialog(playerid, DIALOG_TYPE_VENTS, DIALOG_STYLE_LIST, "Tomas de Aire", "Ovalado\nCuadrado\n \nRegresar", "Aplicar", "Cerrar");
						}
        	    	}
        	    	else
						{
						SendClientMessage(playerid,COLOR_RED,"[WARNING] No puedes agregar este componente!");
						ShowPlayerDialog(playerid, DIALOG_TYPE_LIGHTS, DIALOG_STYLE_LIST, "Luces", "Redondas\nCuadradas\n \nRegresar", "Aplicar", "Cerrar");
						}
        	    }
				case 2: // _
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_LIGHTS, DIALOG_STYLE_LIST, "Luces", "Redondas\nCuadradas\n \nRegresar", "Aplicar", "Cerrar");
        	    }
        	    case 3: // Back
        	    {
                ShowPlayerDialog(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Tuning | War Blood", "Capas de Pintura\nColores\nCapós\nTomas de Aire\nLuces\nEscape\nParachoques Frontal\nParachoques Trasero\nTecho\nAlerones\nEmbellecedores\nLuces Extra\nRuedas\nStereo\nSuspencion\nNitro\nReparar", "Seleccionar", "Cerrar");
        	    }
			}
		}
	}

//---------------------estilos de pelea---------------------------------
if(dialogid == DIALOG_FSTYLES)
    {
        if(response)
		{
            if(listitem == 0)
            {
                if(GetPlayerFightingStyle(playerid) == 4) return SendClientMessage(playerid, COLOR_RED, "Ya tienes este estilo de pelea!!");
                                SetPlayerFightingStyle(playerid, 4);
                                SendClientMessage(playerid, COLOR_RED, "Cambiaste tu estilo de belea a: Normal");
            }
            if(listitem == 1)
            {
                if(GetPlayerFightingStyle(playerid) == 5) return SendClientMessage(playerid, COLOR_RED, "Ya tienes este estilo de pelea!!!");
                                SetPlayerFightingStyle(playerid, 5);
                                SendClientMessage(playerid, COLOR_RED, "Cambiaste tu estilo de belea a: Boxing");
            }
            if(listitem == 2)
            {
                if(GetPlayerFightingStyle(playerid) == 6) return SendClientMessage(playerid, COLOR_RED, "Ya tienes este estilo de pelea!!!");
                                SetPlayerFightingStyle(playerid, 6);
                                SendClientMessage(playerid, COLOR_RED, "Cambiaste tu estilo de belea a: Kung Fu");
            }
            if(listitem == 3)
            {
                if(GetPlayerFightingStyle(playerid) == 7) return SendClientMessage(playerid, COLOR_RED, "Ya tienes este estilo de pelea!!!");
                                SetPlayerFightingStyle(playerid, 7);
                                SendClientMessage(playerid, COLOR_RED, "Cambiaste tu estilo de belea a: Knee Head");
            }
            if(listitem == 4)
            {
                if(GetPlayerFightingStyle(playerid) == 15) return SendClientMessage(playerid, COLOR_RED, "Ya tienes este estilo de pelea!!");
                                SetPlayerFightingStyle(playerid, 15);
                                SendClientMessage(playerid, COLOR_RED, "Cambiaste tu estilo de belea a: Grab Kick");
            }
            if(listitem == 5)
            {
                if(GetPlayerFightingStyle(playerid) == 16) return SendClientMessage(playerid, COLOR_RED, "Ya tienes este estilo de pelea!!!");
                                SetPlayerFightingStyle(playerid, 16);
                                SendClientMessage(playerid, COLOR_RED, "Cambiaste tu estilo de belea a: Elbow");
            }
    }
        return 1;
}
//---------------------------------/texto

if(dialogid == BUBBLE)
    {
        if(!response) return SendClientMessage(playerid,COLOR_AMARILLO_CLARO, "* Cerraste el Menu Texto");
        {
            if(strlen(inputtext) == 0)
            {
                PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
                ShowPlayerDialog(playerid, BUBBLE, DIALOG_STYLE_INPUT, "{ffffff}TEXTO","{ffffff}Por favor ingresa mas caracteres","Poner","Cancelar");
                return 1;
            }
            new Mensaje[128];
            format(Mensaje, sizeof (Mensaje), "%s", inputtext);
            SetPlayerChatBubble(playerid, Mensaje, COLOR_BLANCO, 50.0, 999999);
            format(Mensaje, sizeof (Mensaje), "{FFFFFF}Texto: {020FFF}Te haz puesto en la cabeza de tu skin \"%s\"", inputtext);
            SendClientMessage(playerid, COLOR_BLANCO, Mensaje);
            PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
        }
        return 1;
    }
    ////

if(dialogid == DIALOG_BASECLANSOLO1)
		{
		    if(response)
		    {
                if(listitem == 0)
                {
        new rand = random(sizeof(RandomSpawnsSD));
        SetPlayerPos(playerid, RandomSpawnsSD[rand][0], RandomSpawnsSD[rand][1], RandomSpawnsSD[rand][2]);
                }       
            }
            return 1;
        }
/*if(dialogid == DIALOG_BASECLANSOLO2)
		{
		    if(response)
		    {
                if(listitem == 0)
                {
        new rand = random(sizeof(RandomSpawnsMID));
        SetPlayerPos(playerid, RandomSpawnsMID[rand][0], RandomSpawnsMID[rand][1], RandomSpawnsMID[rand][2]);
                }       
            }
            return 1;
        }     */
if(dialogid == DIALOG_BASECLANSOLO3)
		{
		    if(response)
		    {
                if(listitem == 0)
                {
        new rand = random(sizeof(RandomSpawnsSWO));
        SetPlayerPos(playerid, RandomSpawnsSWO[rand][0], RandomSpawnsSWO[rand][1], RandomSpawnsSWO[rand][2]);
                }       
            }
            return 1;
        }  
if(dialogid == DIALOG_BASECLANSOLO4)
		{
		    if(response)
		    {
                if(listitem == 0)
                {
     //   new rand = random(sizeof(RandomSpawnsSWO));
        SetPlayerPos(playerid, 1354.3864, -1835.3135, 42.4576);
                }       
            }
            return 1;
        }  		      				          

	/*	if( dialogid == DIALOGO_SUPERVIVIENTE_MILITAR)
		{
			 if(response)
			 {
				if(listitem == 0)
				{
				ELOY9N_GivePlayerWeapon(playerid, 24, 20);  //DK
				ELOY9N_GivePlayerWeapon(playerid, 29, 130);   //mp5
				ELOY9N_GivePlayerWeapon(playerid, 30, 150);  //ak
				ELOY9N_GivePlayerWeapon(playerid, 31, 50);  //sniper
				ELOY9N_GivePlayerWeapon(playerid, 26, 50);
				SendClientMessage(playerid,COLOR_RED,"Seleccionaste el kit 1");
				}
				if(listitem == 1)
				{
				ELOY9N_GivePlayerWeapon(playerid, 24, 20);  //DK
				ELOY9N_GivePlayerWeapon(playerid, 29, 130);   //mp5
				ELOY9N_GivePlayerWeapon(playerid, 30, 150);  //ak
				ELOY9N_GivePlayerWeapon(playerid, 31, 50);  //sniper
				SendClientMessage(playerid,COLOR_RED,"Seleccionaste el kit 2");
				}				
			 }
		}   */ 
//--------------------------------clases
if(dialogid == DIALOG_CLASS)
		{
		    if(response)
		    {
		            if(listitem == 0)
		            {
		                if(gTeam[playerid] == NO_TEAM)
		                {
		                    //SendClientMessage(playerid, COLOR_RED, "En construccion.");
		                	new string[2048];
		                	strcat(string,"{00FF00}Humano {FFFFFF}Normal\n");
		                	strcat(string,"{33CCFF}Mercenario [20.000]\n");
		                	strcat(string,"{FF9900}Exterminador [130.000 Score]\n");
		                	ShowPlayerDialog(playerid,DIALOG_CLASS_2,DIALOG_STYLE_LIST,"{FFFFFF}Clases {00FF00}Humanas",string,"Seleccionar","Cerrar");
						}
						else return SendClientMessage(playerid, red, "¡No eres humano!.");
					}

     				if(listitem == 1)
		            {
              			if(gTeam[playerid] == TEAM_ZOMBIES)
		                {
			                new string[1000];
			                strcat(string,"{FF0000}Zombie {FFFFFF}Normal\n");
			                strcat(string,"{FF66FF}Stuner {FFFF00}[5.000 Score].\n");
			                strcat(string,"{800080}Hunter {FFFF00}[10.000 Score].\n");
			                strcat(string,"{FF8040}Boomer {FFFF00}[30.000 Score].\n");
							strcat(string,"{FF8040}Witch {FFFF00}[100.000 Score].\n");
							strcat(string,"{FF8040}Gordinflon {FFFF00}[150.000 Score].\n");
							ShowPlayerDialog(playerid,DIALOG_CLASS_3,DIALOG_STYLE_LIST,"{FFFFFF}Clases {FF0000}Zombies",string,"Seleccionar","Cerrar");
						}
						else return SendClientMessage(playerid, red, "¡No eres Zombie!");
					}

					//case 2: SendClientMessage(playerid,-1,""chat""COL_LGREEN" On October 31st 2012 we are having an 24hour event these classes will be enabled around October 30th!");
				}
				return 1;
}
if(dialogid == DIALOG_EXTERMINADOR)
		{
		    if(response)
		    {
				
						if(listitem == 0)
						{
						    if(GetPlayerScore(playerid) >= 100000 && gTeam[playerid] == NO_TEAM)
       							{
								if(PlayerInfo[playerid][EXTERMINADOR_TIENE] == 1) return SendClientMessage(playerid, COLOR_RED, "Ya perteneces a EXTERMINADOR Corporatión.");
								 	PlayerInfo[playerid][EXTERMINADOR_TIENE] = 1;
								    SendClientMessage(playerid, COLOR_RED, "Bienvenido a {FF9900}EXTERMINADOR {FFFFFF}Corporatión, usa /EXTERMINADOR para convertirte en uno de ellos.");
							    	SetPlayerScore(playerid,(GetPlayerScore(playerid))-100000);
 									PlayerInfo[playerid][Kills]-=100000;
		
							}
							else return SendClientMessage(playerid, red, "No cuentas con el score necesario para ser {FF9900}EXTERMINADOR");
				//			else if SetPlayerScore(playerid,(GetPlayerScore(playerid))-150000);
				//			else if PlayerInfo[playerid][playerid]-=150000;
							}
				else return SendClientMessage(playerid, red, "Servidor Ya seleccionaste tu clase, no puedes volver a cambiarla espera unos minutos.");
			return 1;
			}
		}	
if(dialogid == DIALOG_CLASS_2)
{
    if(response)
    {
        if(listitem == 0) // Normal
        {
            if(GetPlayerScore(playerid) >= 0 && gTeam[playerid] == NO_TEAM)
            {
                CLASEH[playerid] = 0;
                SendClientMessage(playerid, COLOR_RED, "Cambiaste tu clase a {00FF00}Humano {FFFFFF}Normal.");
            }
            else return SendClientMessage(playerid, red, "No cuentas con el score que requiere esta clase.");
        }
        
        if(listitem == 1) // Superviviente Mercenario
        {
            if(GetPlayerScore(playerid) >= 20000 && gTeam[playerid] == NO_TEAM)
            {
                CLASEH[playerid] = 10;  // Superviviente Mercenario
                SendClientMessage(playerid, COLOR_RED, "Cambiaste tu clase a {33CCFF}Superviviente Mercenario.");
                ELOY9N_ResetPlayerWeapons(playerid);
                ELOY9N_GivePlayerWeapon(playerid, WEAPON_SILENCED, 100); // Silenciada
                ELOY9N_GivePlayerWeapon(playerid, 26, 100);  // Recortadas
                ELOY9N_GivePlayerWeapon(playerid, WEAPON_TEC9, 100);     // Tec 9
                ELOY9N_GivePlayerWeapon(playerid, WEAPON_M4, 200);       // M4
                ELOY9N_GivePlayerWeapon(playerid, WEAPON_RIFLE, 50);     // Rifle               
                SetPlayerColor(playerid,COLOR_MERCENARIO);
            }
            else return SendClientMessage(playerid, red, "No cuentas con el score que requiere esta clase.");
        }
        
        if(listitem == 2) // Exterminador
        {
            if(GetPlayerScore(playerid) >= 130000 && gTeam[playerid] == NO_TEAM)
            {
                CLASEH[playerid] = 11;  // Asignar clase Exterminador
                SendClientMessage(playerid, COLOR_RED, "Cambiaste tu clase a {33CCFF}Superviviente Exterminador.");
               	ELOY9N_ResetPlayerWeapons(playerid);
                ELOY9N_GivePlayerWeapon(playerid, 24, 100); // Desert Eagle
                ELOY9N_GivePlayerWeapon(playerid, 26, 150); // Recortadas (Sawnoff Shotgun)
                ELOY9N_GivePlayerWeapon(playerid, 29, 200); // MP5
                ELOY9N_GivePlayerWeapon(playerid, 30, 200); // AK47
                ELOY9N_GivePlayerWeapon(playerid, 34, 50);  // Sniper Rifle		
				SetPlayerColor(playerid,COLOR_EXTERMINADOR);	
            }
            else return SendClientMessage(playerid, red, "No cuentas con el score que requiere esta clase.");
        }
    }
  //  else return SendClientMessage(playerid, red, "Servidor Ya seleccionaste tu clase, no puedes volver a cambiarla, espera unos minutos.");
    return 1;
}
if(dialogid == DIALOG_MOCHILA) {
    if(response) {
        switch(listitem) {
            case 0: {
                if(PlayerInfo[playerid][EXTASIS_PLAYER_2] > 0) {
                    PlayerInfo[playerid][EXTASIS_PLAYER_2]--;
                    SetPlayerHealth(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                   // ApplyAnimation(playerid, "CRACK", "crckdeth2");
				   ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
                    SendClientMessage(playerid, COLOR_GREEN, "Usaste Extasis. Salud y chaleco al 100.");

					new string[128];
					GetPlayerName(playerid, string, sizeof(string));
					format(string, sizeof(string), "{AB2567}Dealer: {FFFFFF}El jugador %s consumió droga {FFA100}EV (Extasis).", string);
					SendClientMessageToAll(COLOR_WHITE, string);

                } else {
                    SendClientMessage(playerid, COLOR_RED, "No tienes Extasis para consumir.");
                }
            }
            case 1: {
                if(PlayerInfo[playerid][LSD_PLAYER_2] > 0) {
                    PlayerInfo[playerid][LSD_PLAYER_2]--;
                    new Float:health;
                    GetPlayerHealth(playerid, health);
                    health += 50.0;
                    if (health > 100.0) health = 100.0;
                    SetPlayerHealth(playerid, health);
                    SetPlayerArmour(playerid, 100);
                    ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
                    SendClientMessage(playerid, COLOR_GREEN, "Usaste LSD. Salud +50 y chaleco al 100.");

					new string[128];
					GetPlayerName(playerid, string, sizeof(string));
					format(string, sizeof(string), "{AB2567}Dealer: {FFFFFF}El jugador %s consumió droga {FFA100}EV (LSD).", string);
					SendClientMessageToAll(COLOR_WHITE, string);

                } else {
                    SendClientMessage(playerid, COLOR_RED, "No tienes LSD para consumir.");
                }
            }
            case 2: {
                if(PlayerInfo[playerid][FENTANILO_PLAYER_2] > 0) {
                    PlayerInfo[playerid][FENTANILO_PLAYER_2]--;
                    new Float:armour;
                    GetPlayerArmour(playerid, armour);
                    armour += 30.0;
                    if (armour > 100.0) armour = 100.0;
                    SetPlayerArmour(playerid, armour);
                    ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
                    SendClientMessage(playerid, COLOR_GREEN, "Usaste Fentanilo. Chaleco +30.");

					new string[128];
					GetPlayerName(playerid, string, sizeof(string));
					format(string, sizeof(string), "{AB2567}Dealer: {FFFFFF}El jugador %s consumió droga {FFA100}EV (Fentanilo).", string);
					SendClientMessageToAll(COLOR_WHITE, string);

                } else {
                    SendClientMessage(playerid, COLOR_RED, "No tienes Fentanilo para consumir.");
                }
            }
            case 3: {
                if(PlayerInfo[playerid][GHB_PLAYER_2] > 0) {
                    PlayerInfo[playerid][GHB_PLAYER_2]--;
                    new Float:health;
                    GetPlayerHealth(playerid, health);
                    health += 30.0;
                    if (health > 100.0) health = 100.0;
                    SetPlayerHealth(playerid, health);
                    ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
                    SendClientMessage(playerid, COLOR_GREEN, "Usaste GHB. Salud +30.");

					new string[128];
					GetPlayerName(playerid, string, sizeof(string));
					format(string, sizeof(string), "{AB2567}Dealer: {FFFFFF}El jugador %s consumió droga {FFA100}EV (GHB).", string);
					SendClientMessageToAll(COLOR_WHITE, string);

                } else {
                    SendClientMessage(playerid, COLOR_RED, "No tienes GHB para consumir.");
                }
            }

            case 4: {
			if(EstaEnEvento[playerid] == true)
			{
				SendClientMessage(playerid,green,"Drogas clase {AB2567}N-EV {FFFFFF} no pueden usarse en eventos");
				return 1;
			} 
			else {
                if(PlayerInfo[playerid][ALUCINOGENO_PLAYER] > 0) {
                    PlayerInfo[playerid][ALUCINOGENO_PLAYER]--;
                    SetPlayerHealth(playerid, 100);
                    SetPlayerArmour(playerid, 100);
                    ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
                    SendClientMessage(playerid, COLOR_GREEN, "Usaste Alucinógenos. Salud y chaleco al 100.");

					new string[128];
					GetPlayerName(playerid, string, sizeof(string));
					format(string, sizeof(string), "{AB2567}Dealer: {FFFFFF}El jugador %s consumió droga {0F1FFF}N-EV (Alucinógenos).", string);
					SendClientMessageToAll(COLOR_WHITE, string);

                } else {
                    SendClientMessage(playerid, COLOR_RED, "No tienes Alucinógenos para consumir.");
                }
			}
            }
            case 5: {
							if(EstaEnEvento[playerid] == true)
			{
				SendClientMessage(playerid,green,"Drogas clase {AB2567}N-EV {FFFFFF} no pueden usarse en eventos");
				return 1;
			} 
			else{
                if(PlayerInfo[playerid][HEROINA_PLAYER] > 0) {
                    PlayerInfo[playerid][HEROINA_PLAYER]--;
                    SetPlayerHealth(playerid, 100);
                    new Float:armour;
                    GetPlayerArmour(playerid, armour);
                    armour += 50.0;
                    if (armour > 100.0) armour = 100.0;
                    SetPlayerArmour(playerid, armour);
                    ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
                    SendClientMessage(playerid, COLOR_GREEN, "Usaste Heroína. Salud al 100 y chaleco +50.");

					new string[128];
					GetPlayerName(playerid, string, sizeof(string));
					format(string, sizeof(string), "{AB2567}Dealer: {FFFFFF}El jugador %s consumió droga {0F1FFF}N-EV (Heroína).", string);
					SendClientMessageToAll(COLOR_WHITE, string);
                } else {
                    SendClientMessage(playerid, COLOR_RED, "No tienes Heroína para consumir.");
                }
			}
            }
            case 6: {
										if(EstaEnEvento[playerid] == true)
			{
				SendClientMessage(playerid,green,"Drogas clase {AB2567}N-EV {FFFFFF} no pueden usarse en eventos");
				return 1;
			} 
			else{	
                if(PlayerInfo[playerid][INHALANTES_PLAYER] > 0) {
                    PlayerInfo[playerid][INHALANTES_PLAYER]--;
                    SetPlayerArmour(playerid, 100);
                    ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
                    SendClientMessage(playerid, COLOR_GREEN, "Usaste Inhalantes. Chaleco al 100.");
					new string[128];
					GetPlayerName(playerid, string, sizeof(string));
					format(string, sizeof(string), "{AB2567}Dealer: {FFFFFF}El jugador %s consumió droga {0F1FFF}N-EV (Inhalantes).", string);
					SendClientMessageToAll(COLOR_WHITE, string);					
                } else {
                    SendClientMessage(playerid, COLOR_RED, "No tienes Inhalantes para consumir.");
                }
			}
            }
            case 7: {
											if(EstaEnEvento[playerid] == true)
			{
				SendClientMessage(playerid,green,"Drogas clase {AB2567}N-EV {FFFFFF} no pueden usarse en eventos");
				return 1;
			} 
			else{
                if(PlayerInfo[playerid][KETAMINA_PLAYER] > 0) {
                    PlayerInfo[playerid][KETAMINA_PLAYER]--;
                    SetPlayerHealth(playerid, 100);
                    ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
                    SendClientMessage(playerid, COLOR_GREEN, "Usaste Ketamina. Salud al 100.");
					new string[128];
					GetPlayerName(playerid, string, sizeof(string));
					format(string, sizeof(string), "{AB2567}Dealer: {FFFFFF}El jugador %s consumió droga {0F1FFF}N-EV (Ketamina).", string);
					SendClientMessageToAll(COLOR_WHITE, string);					
                } else {
                    SendClientMessage(playerid, COLOR_RED, "No tienes Ketamina para consumir.");
                }
			}
            }
            case 8: {
											if(EstaEnEvento[playerid] == true)
			{
				SendClientMessage(playerid,green,"Drogas clase {AB2567}N-EV {FFFFFF} no pueden usarse en eventos");
				return 1;
			} 
			else{
                if(PlayerInfo[playerid][KHAT_PLAYER] > 0) {
                    PlayerInfo[playerid][KHAT_PLAYER]--;
                    new Float:health, Float:armour;
                    GetPlayerHealth(playerid, health);
                    GetPlayerArmour(playerid, armour);
                    health += 15.0;
                    armour += 20.0;
                    if (health > 100.0) health = 100.0;
                    if (armour > 100.0) armour = 100.0;
                    SetPlayerHealth(playerid, health);
                    SetPlayerArmour(playerid, armour);
                    ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
                    SendClientMessage(playerid, COLOR_GREEN, "Usaste Khat. Salud +15 y chaleco +20.");
					new string[128];
					GetPlayerName(playerid, string, sizeof(string));
					format(string, sizeof(string), "{AB2567}Dealer: {FFFFFF}El jugador %s consumió droga {0F1FFF}N-EV (Khat).", string);
					SendClientMessageToAll(COLOR_WHITE, string);					
                } else {
                    SendClientMessage(playerid, COLOR_RED, "No tienes Khat para consumir.");
                }
			}
            }
            case 9: {
											if(EstaEnEvento[playerid] == true)
			{
				SendClientMessage(playerid,green,"Drogas clase {AB2567}N-EV {FFFFFF} no pueden usarse en eventos");
				return 1;
			} 
			else{
                if(PlayerInfo[playerid][KRATOM_PLAYER] > 0) {
                    PlayerInfo[playerid][KRATOM_PLAYER]--;
                    new Float:health;
                    GetPlayerHealth(playerid, health);
                    health += 10.0;
                    if (health > 100.0) health = 100.0;
                    SetPlayerHealth(playerid, health);
                    ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000); // beber
                    SendClientMessage(playerid, COLOR_GREEN, "Usaste Kratom. Salud +10.");
					new string[128];
					GetPlayerName(playerid, string, sizeof(string));
					format(string, sizeof(string), "{AB2567}Dealer: {FFFFFF}El jugador %s consumió droga {0F1FFF}N-EV (Kratom).", string);
					SendClientMessageToAll(COLOR_WHITE, string);					
                } else {
                    SendClientMessage(playerid, COLOR_RED, "No tienes Kratom para consumir.");
                }
			}
            }
            default:
                SendClientMessage(playerid, COLOR_RED, "Opción inválida.");
        }
    }
    return 1;
}

 if(dialogid == DIALOG_DEALER) {
        if(response) {
            new droga[32];
            new costo, cantidad;

            switch(listitem) {
                case 0: {
                    format(droga, sizeof(droga), "Extasis");
                    costo = 8000;
                    cantidad = 15;
                    
                }
                case 1: {
                    format(droga, sizeof(droga), "LSD");
                    costo = 5000;
                    cantidad = 10;
                    
                }
                case 2: {
                    format(droga, sizeof(droga), "Fentanilo");
                    costo = 3500;
                    cantidad = 5;
                    
                }
                case 3: {
                    format(droga, sizeof(droga), "GHB");
                    costo = 3000;
                    cantidad = 5;
                    
                }
                case 4: {
                    format(droga, sizeof(droga), "Alucinógenos");
                    costo = 500;
                    cantidad = 5;
                    
                }
                case 5: {
                    format(droga, sizeof(droga), "Heroína");
                    costo = 200;
                    cantidad = 3;
                    
                }
                case 6: {
                    format(droga, sizeof(droga), "Inhalantes");
                    costo = 30;
                    cantidad = 1;
                    
                }
                case 7: {
                    format(droga, sizeof(droga), "Ketamina");
                    costo = 25;
                    cantidad = 6;
                    
                }
                case 8: {
                    format(droga, sizeof(droga), "Khat");
                    costo = 20;
                    cantidad = 4;
                    
                }
                case 9: {
                    format(droga, sizeof(droga), "Kratom");
                    costo = 10;
                    cantidad = 2;
                    
                }
            }

            if(PlayerInfo[playerid][PUNTOS_PLAYER_2] >= costo) {
                PlayerInfo[playerid][PUNTOS_PLAYER_2] -= costo;

                switch(listitem) {
                    case 0: {
                        PlayerInfo[playerid][EXTASIS_PLAYER_2] += cantidad;
                        
                    }
                    case 1: {
                        PlayerInfo[playerid][LSD_PLAYER_2] += cantidad;
                        
                    }
                    case 2: {
                        PlayerInfo[playerid][FENTANILO_PLAYER_2] += cantidad;
                        
                    }
                    case 3: {
                        PlayerInfo[playerid][GHB_PLAYER_2] += cantidad;
                        
                    }
                    case 4: {
                        PlayerInfo[playerid][ALUCINOGENO_PLAYER] += cantidad;
                        
                    }
                    case 5: {
                        PlayerInfo[playerid][HEROINA_PLAYER] += cantidad;
                        
                    }
                    case 6: {
                        PlayerInfo[playerid][INHALANTES_PLAYER] += cantidad;
                        
                    }
                    case 7: {
                        PlayerInfo[playerid][KETAMINA_PLAYER] += cantidad;
                        
                    }
                    case 8: {
                        PlayerInfo[playerid][KHAT_PLAYER] += cantidad;
                        
                    }
                    case 9: {
                        PlayerInfo[playerid][KRATOM_PLAYER] += cantidad;
                        
                    }
                }

                new msg[128];
                format(msg, sizeof(msg), "Compraste %s por %d puntos de rango.", droga, costo);
                SendClientMessage(playerid, COLOR_GREEN, msg);
            } else {
                SendClientMessage(playerid, COLOR_GREEN, "No tienes suficientes puntos de rango para comprar esta droga.");
            }
        }
        return 1;
    }
	if(dialogid == DIALOG_NEMESIS_CMD)
	{
        if (response) {
            switch (listitem) {
                case 0: // Transformarse en Nemesis
                    {
						ELOY9N_GivePlayerWeapon(playerid, 35, 9999); // 
						SetPlayerArmour(playerid,3000);
						SetPlayerHealth(playerid,1300);								
                        gTeam[playerid] = TEAM_NEMESIS;
                        ResetPlayerWeapons(playerid);
                        SetPlayerColor(playerid, 0xFF0000FF); // Rojo
                        SendClientMessage(playerid, COLOR_RED, "¡Te has transformado en Nemesis!");				
                    }
                case 1: // Cancelar
                    {
                        SendClientMessage(playerid, COLOR_RED, "Has cancelado la transformación.");
                    }
            }	
		}		
	}
if(dialogid == DIALOG_TOPS)
{
	if(response)
	{
		if (listitem == 0)
		{
		new conquistas_sd = VariablesInfo[SD_CONQUISTAS];
		new conquistas_god = VariablesInfo[GOD_CONQUISTAS];
		new conquistas_swo = VariablesInfo[SWO_CONQUISTAS];
		new string[2048];
		format(string, sizeof(string), "{FFFFFF}{87CEEB}SD: {FF0000}%d{FFFFFF} conquistas\n\n{FFFFFF}{FF0000}SWO: {FF0000}%d{FFFFFF} conquistas\n\n{FFFFFF}{9E12F3}GOD: {FF0000}%d{FFFFFF} conquistas\n", conquistas_sd, conquistas_swo, conquistas_god);
		ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_MSGBOX, "{FFFFFF}Historial de conquistas.", string, "Aceptar", "");
		}
		if (listitem == 1)
		{
			SendClientMessage(playerid,COLOR_RED,"[!] En desarrollo");
		}

		if (listitem == 2)
		{
			SendClientMessage(playerid,COLOR_RED,"[!] En desarrollo");
		}
		if (listitem == 3)
		{
		new string[2048];
		
		format(string, sizeof(string), "{87CEEB}SD: {FF0000}%d{FFFFFF} masacres ganadas\n\n{FF0000}SWO: {FF0000}%d{FFFFFF} masacres ganadas\n\n{9E12F3}GOD: {FF0000}%d{FFFFFF} masacres ganadas\n\n{FFFFFF}Usuarios sin clan: {FF0000}%d{FFFFFF} masacres ganadas\n", VariablesInfo[SD_MASACRE], VariablesInfo[SWO_MASACRE],VariablesInfo[GOD_MASACRE], VariablesInfo[SINCLAN_MASACRE]);

		ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_MSGBOX, "{FFFFFF}Historial de clanes.", string, "Aceptar", "");
		}
		if (listitem == 4)
		{
		new string[2048];
		
		format(string, sizeof(string), "{87CEEB}SD: {FF0000}45{FFFFFF} masacres ganadas\n\n{87CEEB}SD: {FF0000}1273{FFFFFF} conquistas\n\n{FF0000}SWO: {FF0000}7{FFFFFF} masacres ganadas\n\n{FF0000}SWO: {FF0000}1840{FFFFFF} conquistas\n\n{9E12F3}GOD: {FF0000}12{FFFFFF} masacres ganadas\n\n{9E12F3}GOD: {FF0000}2067{FFFFFF} conquistas\n\n{FFFFFF}Usuarios sin clan: {FF0000}13{FFFFFF} masacres ganadas\n\n{FFFFFF}Usuarios sin clan: {FF0000}9230{FFFFFF} conquistas\n");

		ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_MSGBOX, "{FFFFFF}Historial de clanes.", string, "Aceptar", "");
		}		
		if (listitem == 5  || listitem == 6 || listitem == 7 ||  listitem == 8  || listitem == 9 ) {
			SendClientMessage(playerid,COLOR_RED,"[!] En desarrollo");
		}
}
}

if(dialogid == DIALOG_CLASS_3)
		{
		    if(response)
		    {
				        if(listitem == 0)
						{
						    if(GetPlayerScore(playerid) >= 0 && gTeam[playerid] == TEAM_ZOMBIES)
							{
								    CLASEZ[playerid] = 0;
								    SendClientMessage(playerid, COLOR_RED, "Cambiaste tu clase a {FF0000}Zombie {FFFFFF}Normal.");
								    ELOY9N_GivePlayerMoney(playerid, -0);
								    TextDrawHideForPlayer(playerid, VistaZombie0);
									TextDrawHideForPlayer(playerid, VistaZombie1);
									TextDrawHideForPlayer(playerid, VistaZombie2);
									TextDrawHideForPlayer(playerid, VistaZombie3);
									TextDrawHideForPlayer(playerid, VistaZombie4);
									SetPlayerHealth(playerid,100);
							}
							else return SendClientMessage(playerid, red, "No cuentas con el score que requiere esta clase");
						}
						if(listitem == 1)
						{
						    if(GetPlayerScore(playerid) >= 5000 && gTeam[playerid] == TEAM_ZOMBIES)
							{
								    CLASEZ[playerid] = 1;
								    ELOY9N_ResetPlayerWeapons(playerid);
								    SendClientMessage(playerid, COLOR_RED, "Cambiaste tu clase a {FF66FF}Stuner, {FFFFFF}Para empujar a un humano apreta {FF0000}ALT.");
								    SetPlayerHealth(playerid,100);
								    TextDrawHideForPlayer(playerid, VistaZombie0);
									TextDrawHideForPlayer(playerid, VistaZombie1);
									TextDrawHideForPlayer(playerid, VistaZombie2);
									TextDrawHideForPlayer(playerid, VistaZombie3);
									TextDrawHideForPlayer(playerid, VistaZombie4);
									SetPlayerSkin(playerid, SKIN_TANK);
							}
							else return SendClientMessage(playerid, red, "No cuentas con el score que requiere esta clase");
						}
						if(listitem == 2)
						{
						    if(GetPlayerScore(playerid) >= 10000 && gTeam[playerid] == TEAM_ZOMBIES)
							{
								    CLASEZ[playerid] = 3;
								    //SetPlayerColor(playerid,0xaf14ed);
								    SetPlayerHealth(playerid,100);
								    SendClientMessage(playerid, COLOR_RED, "Cambiaste tu clase a {800080}Hunter.");
								    TextDrawHideForPlayer(playerid, VistaZombie0);
									TextDrawHideForPlayer(playerid, VistaZombie1);
									TextDrawHideForPlayer(playerid, VistaZombie2);
									TextDrawHideForPlayer(playerid, VistaZombie3);
									TextDrawHideForPlayer(playerid, VistaZombie4);
									SetPlayerSkin(playerid, SKIN_HUNTER);
							}
							else return SendClientMessage(playerid, red, "No cuentas con el score que requiere esta clase");
						}
						if(listitem == 3)
						{
						    if(GetPlayerScore(playerid) >= 30000 && gTeam[playerid] == TEAM_ZOMBIES)
							{
							    
								    CLASEZ[playerid] = 4;
								    SetPlayerHealth(playerid,100);
								    //SetPlayerColor(playerid,0xaf14ed);
								    SendClientMessage(playerid, COLOR_RED, "Cambiaste tu clase a {FF8040}Boomer, {FFFFFF}Para utilizar la habilidad apreta {FF0000}ALT.");
								    TextDrawHideForPlayer(playerid, VistaZombie0);
									TextDrawHideForPlayer(playerid, VistaZombie1);
									TextDrawHideForPlayer(playerid, VistaZombie2);
									TextDrawHideForPlayer(playerid, VistaZombie3);
									TextDrawHideForPlayer(playerid, VistaZombie4);
									SetPlayerSkin(playerid, SKIN_BOOMER);
							}
						}	

						if(listitem == 4)
						{
							if(GetPlayerScore(playerid) >= 100000 && gTeam[playerid] == TEAM_ZOMBIES)
							{
								    CLASEZ[playerid] = 5;
								    SetPlayerHealth(playerid,100);
								    //SetPlayerColor(playerid,0xaf14ed);
								    SendClientMessage(playerid, COLOR_RED, "Cambiaste tu clase a {FF8040}Witch, {FFFFFF}Para utilizar la habilidad apreta {FF0000}ALT.");
								    TextDrawHideForPlayer(playerid, VistaZombie0);
									TextDrawHideForPlayer(playerid, VistaZombie1);
									TextDrawHideForPlayer(playerid, VistaZombie2);
									TextDrawHideForPlayer(playerid, VistaZombie3);
									TextDrawHideForPlayer(playerid, VistaZombie4);
									SetPlayerSkin(playerid, SKIN_WITCH);
							}

						}

						if(listitem == 5)
						{
							if(GetPlayerScore(playerid) >= 150000 && gTeam[playerid] == TEAM_ZOMBIES)
							{
								    CLASEZ[playerid] = 6;
								    SetPlayerHealth(playerid,100);
									SetPlayerArmour(playerid,100);
								    //SetPlayerColor(playerid,0xaf14ed);
								    SendClientMessage(playerid, COLOR_RED, "Cambiaste tu clase a {FF8040}Gordinflon, {FFFFFF}Para utilizar la habilidad apreta {FF0000}ALT.");
								    TextDrawHideForPlayer(playerid, VistaZombie0);
									TextDrawHideForPlayer(playerid, VistaZombie1);
									TextDrawHideForPlayer(playerid, VistaZombie2);
									TextDrawHideForPlayer(playerid, VistaZombie3);
									TextDrawHideForPlayer(playerid, VistaZombie4);
									SetPlayerSkin(playerid, SKIN_TANK);
							}

						}
				else return SendClientMessage(playerid, red, "Servidor Ya seleccionaste tu clase, no puedes volver a cambiarla espera unos minutos.");
			}
			return 1;
		}
		
		//---------------------- cura
		
if(dialogid == ANTIVIRUS)
{
    if(!response) return 0; // Si el jugador presiona el segundo botón (cancelar), el diálogo desaparece y no sucede nada
    if(response) // Si hay una respuesta (primer botón (ok)), continúa
    {
        new Float:Health;
        GetPlayerHealth(playerid,Health);
        if(Health < 10) return SendClientMessage(playerid,green,"Necesitas tener más salud para curarte");

        SendClientMessageToAll(green, "¡Un zombie ha sido desinfectado!");
        gTeam[playerid] = 255;
        SetPlayerTeam(playerid, gTeam[playerid]);
        
        if(CLASEH[playerid] == 11) // Exterminador
        {
            SetPlayerColor(playerid, COLOR_EXTERMINADOR);
            ELOY9N_ResetPlayerWeapons(playerid);
            ELOY9N_GivePlayerWeapon(playerid, 24, 100); // Desert Eagle
            ELOY9N_GivePlayerWeapon(playerid, 26, 100); // Recortadas (Sawnoff Shotgun)
            ELOY9N_GivePlayerWeapon(playerid, 29, 200); // MP5
            ELOY9N_GivePlayerWeapon(playerid, 30, 200); // AK47
            ELOY9N_GivePlayerWeapon(playerid, 34, 50);  // Sniper Rifle
			SetPlayerArmour(playerid,60);
            // Otros ajustes para Exterminador si es necesario
        }
        else if(CLASEH[playerid] == 10) // Mercenario
        {
            SetPlayerColor(playerid, COLOR_MERCENARIO);
            ELOY9N_ResetPlayerWeapons(playerid);
            ELOY9N_GivePlayerWeapon(playerid, 23, 20);  // Silenciada
            ELOY9N_GivePlayerWeapon(playerid, 26, 130); // Recortadas
            ELOY9N_GivePlayerWeapon(playerid, 32, 230); // Tec 9
            ELOY9N_GivePlayerWeapon(playerid, 31, 90);  // M4
            ELOY9N_GivePlayerWeapon(playerid, 33, 120); // Rifle
            // Otros ajustes para Mercenario si es necesario
        }
        else // Normal
        {
            SetPlayerColor(playerid, 0x218C07FF);
            ELOY9N_ResetPlayerWeapons(playerid);
            ELOY9N_GivePlayerWeapon(playerid, 25, 20);  // Escopeta
            ELOY9N_GivePlayerWeapon(playerid, 29, 114); // MP5
            ELOY9N_GivePlayerWeapon(playerid, 24, 75);  // Desert Eagle
            ELOY9N_GivePlayerWeapon(playerid, 31, 90);  // M4
            // Otros ajustes para Normal si es necesario
        }

        if(Skin_Humano[playerid] == 0)
        {
            SetPlayerSkin(playerid, skinsh[random(213)]);
        }
        else
        {
            SetPlayerSkin(playerid, Skin_Humano[playerid]);
        }

        SetPlayerHealth(playerid, 100);

        TextDrawHideForPlayer(playerid, VistaZombie0);
        TextDrawHideForPlayer(playerid, VistaZombie1);
        TextDrawHideForPlayer(playerid, VistaZombie2);
        TextDrawHideForPlayer(playerid, VistaZombie3);
        TextDrawHideForPlayer(playerid, VistaZombie4);
        InfeccionEnprogreso[playerid] = 0;

        return 1;
    }
}

//------------------------------objetos-------------------------



if(dialogid == Object && response)
	{
		if(listitem == 0) //Seleziona elemento riga 0
		{
        SetPlayerAttachedObject( playerid, 5, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
		SetPlayerAttachedObject( playerid, 7, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
	//		SetPlayerAttachedObject( playerid, 9, 18635, 6, -0.017818, -0.020071, 0.033806, 2.351720, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
		}
		if(listitem == 1) //Seleziona elemento riga 1 etc e così via
		{
        SetPlayerAttachedObject( playerid, 5, 18706, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
		SetPlayerAttachedObject( playerid, 7, 18706, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
  //         SetPlayerAttachedObject( playerid, 9, 1212, 6, -0.017818, -0.020071, 0.033806, 2.351720, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
		//Evento alla risposta del player al dialog elemento 1 etc e così via
		}
		if(listitem == 2)
		{
        SetPlayerAttachedObject( playerid, 5, 18717, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
		SetPlayerAttachedObject( playerid, 7, 18717, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
    //       SetPlayerAttachedObject( playerid, 9, 1512, 6, -0.017818, -0.020071, 0.033806, 2.351720, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
        }
        if(listitem == 3)
        {
        SetPlayerAttachedObject( playerid, 5, 18718, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
		SetPlayerAttachedObject( playerid, 7, 18718, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
	//       SetPlayerAttachedObject( playerid, 9, 1484, 6, -0.017818, -0.020071, 0.033806, 2.351720, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
		}
		if(listitem == 4)
		{
        SetPlayerAttachedObject( playerid, 5, 18728, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
		SetPlayerAttachedObject( playerid, 7, 18728, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
	  //     SetPlayerAttachedObject( playerid, 9, 1210, 5, 0.228748, 0.415434, -0.187985, 159.754943, 278.963317, 0.000000, 1.000000, 1.000000, 1.000000 ); // briefcase - Valigetta
        }
        if(listitem == 5)
		{
        SetPlayerAttachedObject( playerid, 5, 18721, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
		SetPlayerAttachedObject( playerid, 7, 18721, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
	   //    SetPlayerAttachedObject( playerid, 9, 323, 5, 0.228748, 0.415434, -0.187985, 159.754943, 278.963317, 0.000000, 1.000000, 1.000000, 1.000000 ); // briefcase - Valigetta
        }
        return 1;
	}

//----------------------- compra de autos----------------------

//============================================  dialog autos =========================================



//------------------items  humanos y zombies------------------------
//EVENTOS DIALOGOS
	if(dialogid == DIALOG_CREAREVENTO)
		{
				if(response)
				{
    					if(listitem == 0)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 3) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento masacre en Oceanside.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento masacre en {FF0000}Oceanside.", PlayerName2(playerid));
                        MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
					//	SendClientMessageToAll(COLOR_WHITE,string2);
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[Oceanside] = true;
						SetPlayerPos(playerid,-2227.7358, 2326.8911, 6.9737);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,55);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
                      //  SendClientMessage(playerid, red, "{FF0000}Evento no habilitado *Elija otro evento por favor. ¡ATTE : Pac0!*.");
						return 1;
                        }
    					if(listitem == 1)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 3) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento Masacre.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}Masacre.", PlayerName2(playerid));
						MessageToAdmins(COLOR_WHITE,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[Masacre] = true;
					//	SetPlayerPos(playerid,731.8084, 1219.7795, 20.5230);
                        new rand = random(sizeof(RandomSpawnsMasacre));
                        SetPlayerPos(playerid, RandomSpawnsMasacre[rand][0], RandomSpawnsMasacre[rand][1], RandomSpawnsMasacre[rand][2]);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,45);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }
   					    if(listitem == 2)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste un evento personalizado.");
                        SendClientMessage(playerid, red,"Los jugadores spawnearan en la ultima posición donde usaste el comando /pevents.");
                        SendClientMessage(playerid, red,"Tambien tendran el mismo VirtualWorld y Interior , (donde usaste el comando /pevents).");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó un evento {FF0000}P E R S O N A L I Z A D O.", PlayerName2(playerid));
						MessageToAdmins(green,string2);
                        GetPlayerPos(playerid, Event[X22], Event[Y22], Event[Z22]);
                        Event[VirtualWorld] = GetPlayerVirtualWorld(playerid);
		                Event[Interior] = GetPlayerInterior(playerid);
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[Personalizado] = true;
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }  	
    					if(listitem == 3)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento Masacre - Ocean Docks.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}Masacre - Ocean Docks.", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[MasacreDocks] = true;
					//	SetPlayerPos(playerid,731.8084, 1219.7795, 20.5230);
                        new rand = random(sizeof(RandomSpawnsMasacreDocks));
                        SetPlayerPos(playerid, RandomSpawnsMasacreDocks[rand][0], RandomSpawnsMasacreDocks[rand][1], RandomSpawnsMasacreDocks[rand][2]);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,48);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }		
					if(listitem == 4)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento Masacre.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}Masacre - WoodBury", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[WoodBury] = true;
					//	SetPlayerPos(playerid,731.8084, 1219.7795, 20.5230);
                        new rand = random(sizeof(RandomSpawnsWoodBury));
                        SetPlayerPos(playerid, RandomSpawnsWoodBury[rand][0], RandomSpawnsWoodBury[rand][1], RandomSpawnsWoodBury[rand][2]);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,46);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }	
					if(listitem == 5)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el escondidas en el casino.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}Escondidas - Casino", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						Event[Creado] = true;
						Event[Trancado] = true;
						EstaEnEvento[playerid] = true;
						Event[Escondidas] = true;   						
                        SetPlayerPos(playerid,2235.5210,1630.1899,1008.3594);
						SetPlayerInterior(playerid,1);
						ELOY9N_GivePlayerWeapon(playerid,38,9999);
						SetPlayerColor(playerid,COLOR_PURPLE);
						SetPlayerSkin(playerid,230);
						gTeam[playerid] = 255;
						SetPlayerVirtualWorld(playerid,35);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }		
					if(listitem == 6)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento TDM.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}TDM", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[TDM] = true;   						
                        SetPlayerPos(playerid,2424.4197,679.5516,10.6719);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,24);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }		
					if(listitem == 7)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento avion asesino.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}avion asesino", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[EscapeAvion] = true;   						
                        SetPlayerPos(playerid,421.9713, 2530.4839, 16.3425);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,33);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }		
					if(listitem == 8)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 3) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento purga en Los Santos.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}purga en Los Santos", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[PurgaLS] = true;   						
                        SetPlayerPos(playerid,1479.4601, -1686.6536, 13.4345);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,33);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }	
					if(listitem == 9)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento sobrevive a Harry Potter.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}sobrevive a Harry Potter", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[HarryPotter] = true;   		
						SetPlayerArmour(playerid,100000);
						SetPlayerHealth(playerid,100000);				
                        SetPlayerPos(playerid,1509.3710,-1095.5514,181.2031);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,66);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }	
					if(listitem == 10)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento TDM 2.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}TDM", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[TDM2] = true;   						
                        SetPlayerPos(playerid,-2697.8066, -207.3960, 4.0013);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,24);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }	
					if(listitem == 11)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento Royal Rumble.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}Royal Rumble", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[Royal_1] = true;   						
                        SetPlayerPos(playerid,1732.3805, -1272.6584, 120.5907);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,33);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }	
					if(listitem == 12)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento Royal Rumble 2.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}Royal Rumble 2", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[Royal_2] = true;   						
                        SetPlayerPos(playerid,1089.4056, 1072.3854, 98.7926);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,33);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }		
					if(listitem == 13)
                        {
                        if(Event[Creado]) //return SendClientMessage(playerid, red, "No se ha creado un evento!");
                        {
                        SendClientMessage(playerid, red,"Ya hay un evento creado.");
                        return 1;
                        }
						if(PlayerInfo[playerid][Level] >= 2) {
						CMDMessageToPac0(playerid,"CREAREVENTO");
						SendClientMessage(playerid, red,"Creaste el evento supervivencia del nemesis 1.");
						format(string2,sizeof(string2),"(STAFF - Notificación) %s creó el evento {FF0000}Supervivencia del nemesis 1", PlayerName2(playerid));
						MessageToAdmins(green,string2);
						EstaEnEvento[playerid] = true;
						Event[Creado] = true;
						Event[Trancado] = true;
						Event[Supervivencia] = true;   						
                        SetPlayerPos(playerid,-1231.5956,-209.3065,14.1440);
						SetPlayerHealth(playerid,9999);
						SetPlayerArmour(playerid,9999);
						gTeam[playerid] = TEAM_NEMESIS;
						SetPlayerColor(playerid,COLOR_RED);
						ELOY9N_GivePlayerWeapon(playerid,35,9999);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,33);
						} else SendClientMessage(playerid, red, "{FF0000}Necesitas ser administrador con el nivel que requiere este comando.");
						return 1;
                        }																																																																							                      
  				}
		}                             
//=========================== dialogo itemsh  ================
	if(dialogid == DIALOG_ITEMSH)
          {
                if(response)
                {
                   	/*	if(listitem == 0)
                   		{
                    	ShowPlayerDialog(playerid, DArmas,DIALOG_STYLE_LIST,"{0000FF}Armas","Silenciada($1000)\n9mm($1500)\nDesert Eagle($5000)\nEscopeta($3000)\nTec9($4000)\nMP5($4000)\nEscopeta de combate($5000)\nM4($7000)\nAK-47($7000)\nRifle($7000)\nGranadas($5000)\nMolotov($5000)\nLanza Misiles($100,000)","Seleccionar","Salir");
                  		return 1;
                        }
                        if(listitem == 1)
                        {
                        ShowPlayerDialog(playerid, Autosh,DIALOG_STYLE_LIST,"{0000FF}Autos","LandsTalker($5000)\nSentinel($6000) \nPremier($6000)\nPatriot($8000)\nQuad($4000)\nMaverick($9000)\nFBI Rancher($7000) \nSabre($3000)","Seleccionar","Salir");
                  		return 1;
                        }*/
            /*            if(listitem == 0)
                        {
                        if(GetPlayerMoney(playerid) < 20000)
                        {
                        SendClientMessage(playerid,COLOR_RED,"Necesitas {FFF000}$20.000{FFFFFF} para comprar este item.");
                        return 1;
                        }
                        SetPlayerHealth(playerid,100);
                        SendClientMessage(playerid,COLOR_RED,"Vida restablecida a 100.");
						ELOY9N_GivePlayerMoney(playerid,-20000);
                        return 1;
                        }
                        if(listitem == 1)
                        {
                        if(GetPlayerMoney(playerid) < 35000)
                        {
                        SendClientMessage(playerid,COLOR_RED,"Necesitas {FFF000}$35.000{FFFFFF} para comprar este item.");
                        return 1;
                        }
                        SetPlayerArmour(playerid, 100);
                        SendClientMessage(playerid,COLOR_RED,"Armadura restablecida a 100.");
                        ELOY9N_GivePlayerMoney(playerid,-35000);
                        return 1;
                        }*/
                        if(listitem == 0)
                        {
                        if(GetPlayerMoney(playerid) < 10000)
                        {
                        SendClientMessage(playerid, COLOR_WHITE,"Necesitas {33FF33}$10.000{FFFFFF} para comprar este item.");
                        return 1;
                        }
                        SetTimerEx("CompletaInfeccion", 60000,0,"d",playerid);
    					InfeccionEnprogreso[playerid]=1;
						VidaTimer[playerid]=SetTimerEx("VidaBajando", 1000,0,"d",playerid);
						TextDrawShowForPlayer(playerid,HealthBar[0]);
                        ShowTDN(playerid, 20000, "te inyectaste el ~n~~r~virus Z.");

						
						
                        ELOY9N_GivePlayerMoney(playerid,-10000);
                        return 1;
                        }

                        if(listitem == 1)
                        {
						ShowModelSelectionMenu(playerid, skinlist1, "Skins");
                        return 1;
                        }

           /*             if(listitem == 5)
                        {
                        if(GetPlayerMoney(playerid) < 5000)
                        {
                        SendClientMessage(playerid,COLOR_RED,"Necesitas {FFF000}$5000{FFFFFF} para comprar este item.");
                        return 1;
                        }
                        if((gTeam[playerid] == NO_TEAM) && !(InfeccionEnprogreso[playerid]==1)) return ShowTDN(playerid, 20000, "tu no necesitas ~n~~r~cura.");
						SendClientMessage(playerid,COLOR_RED,"Casi te conviertes!");
						gTeam[playerid]=255;
					//	OnRequest[playerid] = 0;
						SetPlayerTeam(playerid, gTeam[playerid]);
						SetPlayerColor(playerid, 0x218C07FF);
						//SetPlayerSkin(playerid, 285);
						//SetPlayerSkin(skinsh[random(213)];
						//Skins[playerid]=285;
					//	TextDrawShowForPlayer(playerid, Textdraw0);
					//	TextDrawHideForPlayer(playerid, Textdraw2);
						InfeccionEnprogreso[playerid]=0;
						DeletePlayer3DTextLabel(playerid,PlayerText3D:label);
						SetPlayerHealth(playerid,100.0);
						KillTimer(VidaTimer[playerid]);
                        ELOY9N_GivePlayerMoney(playerid,-5000);
                        for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
                        return 1;
                        }*/

                        /*if(listitem == 4)
                        {
                        ShowPlayerDialog(playerid, AUTOSH,DIALOG_STYLE_LIST,"{0000FF}Autos","LandsTalker($5000)\nSentinel($6000) \nPremier($6000)\nPetriot($8000)\nQuad($4000)\nMaverick($9000)\nFBI Rancher($7000)","Seleccionar","Salir");
                  		return 1;
                        }*/
                }
        }
        if(dialogid == DIALOG_RECOMPENSA)
		{
                if(response)
                {
                        if(listitem == 0)
                        {
						SetPlayerScore(playerid,(GetPlayerScore(playerid))+1000);
						PlayerInfo[playerid][Kills]+=1000;
						CMDMessageToPac0(playerid,"DIALOGOPREMIO");
						new Nombre[MAX_PLAYERS];
						GetPlayerName(playerid, Nombre, sizeof(Nombre));
						format(string2,sizeof(string2),"{00FF7C}%s acepto un premio. {FFFFFF}1000 Score.",Nombre);
						SendClientMessageToAll(COLOR_WHITE,string2);
                        return 1;
                        }
                        if(listitem == 1)
                        {
                        ELOY9N_GivePlayerMoney(playerid,150000);
                        CMDMessageToPac0(playerid,"DIALOGOPREMIO");
						new Nombre[MAX_PLAYERS];
						GetPlayerName(playerid, Nombre, sizeof(Nombre));
						format(string2,sizeof(string2),"{00FF7C}%s acepto un premio. {FFFFFF}$150.000.",Nombre);
						 SendClientMessageToAll(COLOR_WHITE,string2);
                        return 1;
						}
						if(listitem == 2)
                        {
						ELOY9N_GivePlayerWeapon(playerid, 35, 200);
						new Nombre[MAX_PLAYERS];
						GetPlayerName(playerid, Nombre, sizeof(Nombre));
						format(string2,sizeof(string2),"{00FF7C}%s acepto un premio. {FFFFFF}RPG.",Nombre);
						 SendClientMessageToAll(COLOR_WHITE,string2);
                        return 1;
						}
						if(listitem == 3)
						{
						ELOY9N_GivePlayerWeapon(playerid, 38, 1000);  
						new Nombre[MAX_PLAYERS];
						GetPlayerName(playerid, Nombre, sizeof(Nombre));
						format(string2,sizeof(string2),"{00FF7C}%s acepto un premio. {FFFFFF}Minigun.",Nombre);
						 SendClientMessageToAll(COLOR_WHITE,string2);
                        return 1;
						}
						if(listitem == 4)
						{
						CarSpawner(playerid,432);
						new Nombre[MAX_PLAYERS];
						GetPlayerName(playerid, Nombre, sizeof(Nombre));
						format(string2,sizeof(string2),"{00FF7C}%s acepto un premio. {FFFFFF}Vehiculo especial.",Nombre);
						 SendClientMessageToAll(COLOR_WHITE,string2);
						return 1;
						}
						if(listitem == 5)
						{
						CarSpawner(playerid,425);
						new Nombre[MAX_PLAYERS];
						GetPlayerName(playerid, Nombre, sizeof(Nombre));
						format(string2,sizeof(string2),"{00FF7C}%s acepto un premio. {FFFFFF}Vehiculo especial.",Nombre);
						 SendClientMessageToAll(COLOR_WHITE,string2);
						return 1;
						}
						if(listitem == 6)
						{
						CarSpawner(playerid,520);
						new Nombre[MAX_PLAYERS];
						GetPlayerName(playerid, Nombre, sizeof(Nombre));
						format(string2,sizeof(string2),"{00FF7C}%s acepto un premio. {FFFFFF}Vehiculo especial.",Nombre);
						 SendClientMessageToAll(COLOR_WHITE,string2);						
						return 1;
						}
						if(listitem == 7)
						{				
						PlayerInfo[playerid][PUNTOS_PLAYER_2] += 300;	
					//	format(string2, sizeof(string2), "%d", PlayerInfo[playerid][PUNTOS_PLAYER_2]);
					//	TextDrawSetString(TextdrawPuntosTotal[playerid], string2);
					//	TextDrawShowForPlayer(playerid, TextdrawPuntosTotal[playerid]);
						new Nombre[MAX_PLAYERS];
						GetPlayerName(playerid, Nombre, sizeof(Nombre));
						format(string2,sizeof(string2),"{00FF7C}%s acepto un premio. {FFFFFF}300 Puntos de rango.",Nombre);
						SendClientMessageToAll(COLOR_WHITE,string2);	
						return 1;
						}						
						
				}
  		}
		if(dialogid == DIALOG_VIP_PLATA)
		{
                if(response)
                {
                        if(listitem == 0)
                        {
                        if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
						{
      					SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar esta ventaja dentro de un evento.");
                        return 1;
	  					}
	  					ELOY9N_GivePlayerWeapon(playerid, 27, 6000);
	  					return 1;
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
                        {
                        if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
						{
      					SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar esta ventaja dentro de un evento.");
                        return 1;
						}
						if(IsPlayerInAnyVehicle(playerid))
						{
						SendClientMessage(playerid,red,"Apareciste un vehiculo");
						}
						else{
						if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
						new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
				        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToPac0(playerid,"LTunedCar");	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
					    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
					    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,1);
					   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
						PlayerInfo[playerid][pCar] = LVehicleIDt;
	  					}
	  					return 1;
						}
	  					/////////////////////////////////////////
	  					if(listitem == 2)
	  					{
	  					if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
	  					{
	  					SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar esta ventaja dentro de un evento.");
	  					return 1;
	  					}
						if(IsPlayerInAnyVehicle(playerid))
						{
						SendClientMessage(playerid,red,"Apareciste un vehiculo");
						}
						else {
						if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
						new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
				        carid = CreateVehicle(559,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
				    	AddVehicleComponent(carid,1065);    AddVehicleComponent(carid,1067);    AddVehicleComponent(carid,1162); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073);	ChangeVehiclePaintjob(carid,1);
					   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
						PlayerInfo[playerid][pCar] = carid;
	  					}
	  					return 1;
				}
			}
	 	}
		if(dialogid == DIALOG_VIP_Bronce)
          {
                if(response)
                {
                        if(listitem == 0)
                        {
                        if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
						{
      					SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar esta ventaja dentro de un evento.");
                        return 1;
	  					}
	  					ELOY9N_GivePlayerWeapon(playerid, 27, 250);
	  					return 1;
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
                        {
                        if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
						{
      					SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar esta ventaja dentro de un evento.");
                        return 1;
						}
						if(IsPlayerInAnyVehicle(playerid))
						{
						SendClientMessage(playerid,red,"Apareciste un vehiculo");
						}
						else{
						if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
						new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
				        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToPac0(playerid,"LTunedCar");	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
					    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
					    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,1);
					   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
						PlayerInfo[playerid][pCar] = LVehicleIDt;
	  					}
	  					return 1;
						}
	  					/////////////////////////////////////////
	  					if(listitem == 2)
	  					{
	  					if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
	  					{
	  					SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar esta ventaja dentro de un evento.");
	  					return 1;
	  					}
						if(IsPlayerInAnyVehicle(playerid))
						{
						SendClientMessage(playerid,red,"Apareciste un vehiculo");
						}
						else {
						if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
						new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
				        carid = CreateVehicle(559,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
				    	AddVehicleComponent(carid,1065);    AddVehicleComponent(carid,1067);    AddVehicleComponent(carid,1162); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073);	ChangeVehiclePaintjob(carid,1);
					   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
						PlayerInfo[playerid][pCar] = carid;
	  					}
	  					return 1;
						}
						if(listitem == 3)
	  					{
	  					if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
	  					{
	  					SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar esta ventaja dentro de un evento.");
	  					return 1;
	  					}
						if(IsPlayerInAnyVehicle(playerid))
						{
						SendClientMessage(playerid,red,"Apareciste un vehiculo");
						}
						else {
						if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
						new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
				        carid = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0); CMDMessageToPac0(playerid,"LTunedCar");
					    AddVehicleComponent(carid,1034); AddVehicleComponent(carid,1038); AddVehicleComponent(carid,1147); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
					   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
						PlayerInfo[playerid][pCar] = carid;
						}
						return 1;
	  					}
      					if(listitem == 4)
                        {
                        if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
						{
      					SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar esta ventaja dentro de un evento.");
                        return 1;
	  					}
	  					ELOY9N_GivePlayerWeapon(playerid, 16, 100);
	  					return 1;
						}
      					if(listitem == 5)
                        {
                        if(EstaEnEvento[playerid] == true || EstaEnDesmadre[playerid] == true)
						{
      					SendClientMessage(playerid,COLOR_WHITE,"No podes utilizar esta ventaja dentro de un evento.");
                        return 1;
	  					}
	  					ELOY9N_GivePlayerWeapon(playerid, 35, 4);
	  					return 1;
				}
			}
		}
		if(dialogid == DIALOG_VIP_OROVEHICULOS)
          {
                if(response)
                {
                        if(listitem == 0)
                        {
						CarSpawner(playerid,522);
						SendClientMessage(playerid,green,"Apareciste tu NRG con exito. - War Blood");
						return 1;
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
                        {
						CarSpawner(playerid,411);
						SendClientMessage(playerid,green,"Apareciste tu Infernus con exito. - War Blood");
						return 1;
	  					}
						if(listitem == 2)
                        {
						CarSpawner(playerid,487);
						SendClientMessage(playerid,green,"Apareciste tu Maverick con exito. - War Blood");
						return 1;
	  					}
						if(listitem == 3)
                        {
						CarSpawner(playerid,539);
						SendClientMessage(playerid,green,"Apareciste tu Vortex con exito. - War Blood");								
	  					return 1;
					}
			}
		}
		if(dialogid == DIALOG_VIP_OROARMAS)
          {
                if(response)
                {
                        if(listitem == 0)
						{
						if(GetPlayerMoney(playerid) > 9999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 36, 1);
						ELOY9N_GivePlayerMoney(playerid, -10000);
						SendClientMessage(playerid, green, "Compraste un RPG por $10.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
						{
						if(GetPlayerMoney(playerid) > 9999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 26, 500);
						ELOY9N_GivePlayerMoney(playerid, -10000);
						SendClientMessage(playerid, green, "Compraste unas escopetas recortadas por $10.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
						if(listitem == 2)
						{
						if(GetPlayerMoney(playerid) > 49999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 37, 1000);
						ELOY9N_GivePlayerMoney(playerid, -50000);
						SendClientMessage(playerid, green, "Compraste un lazallamas por $50.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
						if(listitem == 3)
						{
						if(GetPlayerMoney(playerid) > 19999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 16, 50);
						ELOY9N_GivePlayerMoney(playerid, -20000);
						SendClientMessage(playerid, green, "Compraste unas granadas por $20.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}	
						if(listitem == 4)
						{
						if(GetPlayerMoney(playerid) > 19999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 18, 50);
						ELOY9N_GivePlayerMoney(playerid, -20000);
						SendClientMessage(playerid, green, "Compraste 50 Molotovs por $20.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}														
	  					return 1;
				}
			}
	if(dialogid == DIALOG_VIP_OROCHALECO)
          {
                if(response)
                {
						if(listitem == 0)
                        {
							if(MurioChaleco[playerid] == 0)
							{
								SendClientMessage(playerid, green,"Debes morir para usar esta ventaja.");
							}
							else{
 						new Float:HP; GetPlayerArmour(playerid, HP);
						new Float:Armour;
						GetPlayerArmour(playerid,Armour);
		    			if(HP >= 70)
						{
						SendClientMessage(playerid, COLOR_RED, "Ya tenes más de el 70 porciento de tu chaleco.");
   						}
   						else
			   			{	
						SetPlayerArmour(playerid,Armour+70);
						}
						if(HP >= 100)
						{
						SetPlayerArmour(playerid,70);
						}
						MurioChaleco[playerid] = 0;
						SendClientMessage(playerid,green,"Recibiste 70 porciento de re integración de tu chaleco. - War Blood");		
							}						
	  					return 1;
					}
			}
		}
	if(dialogid == DIALOG_VIP_DIOSCHALECO)
          {
                if(response)
                {
						if(listitem == 0)
                        {
							if(MurioChaleco[playerid] == 0)
							{
								SendClientMessage(playerid, green,"Debes morir para usar esta ventaja.");
							}
							else{
 						new Float:HP; GetPlayerArmour(playerid, HP);
						new Float:Armour;
						GetPlayerArmour(playerid,Armour);
		    			if(HP >= 100)
						{
						SendClientMessage(playerid, COLOR_RED, "Ya tenes más de el 100 porciento de tu chaleco.");
   						}
   						else
			   			{	
						SetPlayerArmour(playerid,Armour+100);
						}
						if(HP >= 100)
						{
						SetPlayerArmour(playerid,100);
						}
						MurioChaleco[playerid] = 0;
						SendClientMessage(playerid,green,"Recibiste 100 porciento de re integración de tu chaleco. - War Blood");		
							}						
	  					return 1;
					}
			}
		}																	
		if(dialogid == DIALOG_VIP_ORO)
          {
                if(response)
                {
                        if(listitem == 0)
                        {
						ShowPlayerDialog(playerid,DIALOG_VIP_OROVEHICULOS,DIALOG_STYLE_LIST,"{FFF000}Vehiculos VIP","{FFFFFF}NRG\n{FFFFFF}Infernus\n{FFFFFF}Maverick\n{FFFFFF}Vortex","Seleccionar","Salir");
	  					return 1;
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
                        {
						ShowPlayerDialog(playerid,DIALOG_VIP_OROARMAS,DIALOG_STYLE_LIST,"{FFF000}Armas VIP","{FFFFFF}RPG[10k$]\n{FFFFFF}Escopetas Recortadas[10k$]\n{FFFFFF}Lanzallamas[50k$]\n{FFFFFF}Granadas[20k$]\n{FFFFFF}Molotovs[20k$]","Seleccionar","Salir");
	  					}
	  					if(listitem == 2)
                        {
						ShowPlayerDialog(playerid,DIALOG_VIP_OROCHALECO,DIALOG_STYLE_LIST,"{FFF000}Chaleco VIP","{FFFFFF}Chaleco","Seleccionar","Salir");
	  					}						
	  					return 1;
				}
			}
		if(dialogid == DIALOG_VIP_DIAMANTEARMAS)
          {
                if(response)
                {
                        if(listitem == 0)
						{
						if(GetPlayerMoney(playerid) > 29999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 36, 5);
						ELOY9N_GivePlayerMoney(playerid, -30000);
						SendClientMessage(playerid, green, "Compraste un RPG por $30.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
						{
						if(GetPlayerMoney(playerid) > 9999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 26, 500);
						ELOY9N_GivePlayerMoney(playerid, -10000);
						SendClientMessage(playerid, green, "Compraste unas escopetas recortadas por $10.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
						if(listitem == 2)
						{
						if(GetPlayerMoney(playerid) > 49999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 37, 1000);
						ELOY9N_GivePlayerMoney(playerid, -50000);
						SendClientMessage(playerid, green, "Compraste un lazallamas por $50.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
						if(listitem == 3)
						{
						if(GetPlayerMoney(playerid) > 19999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 16, 50);
						ELOY9N_GivePlayerMoney(playerid, -20000);
						SendClientMessage(playerid, green, "Compraste unas granadas por $20.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}	
						if(listitem == 4)
						{
						if(GetPlayerMoney(playerid) > 19999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 18, 50);
						ELOY9N_GivePlayerMoney(playerid, -20000);
						SendClientMessage(playerid, green, "Compraste 50 Molotovs por $20.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}	
						if(listitem == 5)
						{
						if(GetPlayerMoney(playerid) > 499999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 38, 5);
						ELOY9N_GivePlayerMoney(playerid, -500000);
						SendClientMessage(playerid, green, "Compraste una minigun por $500.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
						if(listitem == 6)
						{
						if(GetPlayerMoney(playerid) > 24999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 24, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 31, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 29, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 25, 9999);
						ELOY9N_GivePlayerMoney(playerid, -25000);
						SendClientMessage(playerid, green, "Compraste balas infinitas para un set basico por $25.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}																											
	  					return 1;
				}
			}
		if(dialogid == DIALOG_EVENTOARMAS)
          {
                if(response)
                {
						if(listitem == 0)
						{
						ELOY9N_GivePlayerWeapon(playerid, 24, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 25, 9999);					
						ELOY9N_GivePlayerWeapon(playerid, 31, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 33, 9999);
						SendClientMessage(playerid, green, "Kit Basico - Equipado.");
						}																											
	  					return 1;
				}
			}	
		if(dialogid == DIALOG_EVENTOARMAS1)
          {
                if(response)
                {
						if(listitem == 0)
						{
						ELOY9N_GivePlayerWeapon(playerid, 24, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 25, 9999);					
						ELOY9N_GivePlayerWeapon(playerid, 31, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 33, 9999);
						SendClientMessage(playerid, green, "Kit Basico - Equipado.");
						}	
						if(listitem == 1)
						{
						ELOY9N_GivePlayerWeapon(playerid, 24, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 27, 9999);					
						ELOY9N_GivePlayerWeapon(playerid, 31, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 28, 200);
						ELOY9N_GivePlayerWeapon(playerid, 34, 9999);
						SendClientMessage(playerid, green, "Kit Prime - Equipado.");
						}																																		
	  					return 1;
				}
			}		
		if(dialogid == DIALOG_EVENTOARMAS2)
          {
                if(response)
                {
						if(listitem == 0)
						{
						ELOY9N_GivePlayerWeapon(playerid, 24, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 25, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 29, 9999);						
						ELOY9N_GivePlayerWeapon(playerid, 31, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 33, 9999);
						SendClientMessage(playerid, green, "Kit Basico - Equipado.");
						}	
						if(listitem == 1)
						{
						ELOY9N_GivePlayerWeapon(playerid, 24, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 27, 9999);	
						ELOY9N_GivePlayerWeapon(playerid, 28, 9999);					
						ELOY9N_GivePlayerWeapon(playerid, 31, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 34, 9999);
						SendClientMessage(playerid, green, "Kit Prime - Equipado.");
						}	
						if(listitem == 2)
						{
						ELOY9N_GivePlayerWeapon(playerid, 24, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 26, 430);					
						ELOY9N_GivePlayerWeapon(playerid, 31, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 32, 9999);	
						ELOY9N_GivePlayerWeapon(playerid, 34, 9999);
						SendClientMessage(playerid, green, "Kit Patreon - Equipado.");
						}																																								
	  					return 1;
				}
			}						
		if(dialogid == DIALOG_VIP_DIAMANTEVEHICULOS)
          {
                if(response)
                {
                        if(listitem == 0)
                        {
						CarSpawner(playerid,522);
						SendClientMessage(playerid,green,"Apareciste tu NRG con exito. - War Blood");
						return 1;
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
                        {
						CarSpawner(playerid,411);
						SendClientMessage(playerid,green,"Apareciste tu Infernus con exito. - War Blood");
						return 1;
	  					}
						if(listitem == 2)
                        {
						CarSpawner(playerid,487);
						SendClientMessage(playerid,green,"Apareciste tu Maverick con exito. - War Blood");
						return 1;
	  					}
						if(listitem == 3)
                        {
						CarSpawner(playerid,539);
						SendClientMessage(playerid,green,"Apareciste tu Vortex con exito. - War Blood");								
	  					return 1;
						}
						if(listitem == 4)
                        {
							if(GetPlayerMoney(playerid) > 999999)
								{
								ELOY9N_GivePlayerMoney(playerid, -1000000);
						//		new SWATBLINDADO;
						//		SWATBLINDADO = CreateVehicle(601, 2473.2566, -840.2829, 103.8974, 270.0024, -1, -1, 100);
						//		SetVehicleHealth(SWATBLINDADO,20000);

								//new rhino;
								//rhino = CarSpawner(playerid,432);
								//SetVehicleHealth(rhino,50000);
								CarSpawner(playerid,432);
								SetVehicleHealth(GetPlayerVehicleID(playerid), 50000);

								SendClientMessage(playerid,green,"Apareciste tu RHINO blindado con exito - Lo pagaste $1.000.000. - War Blood");	
								}
							else
								{
								SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
								}
									
						}													
						if(listitem == 5)
                        {
							if(GetPlayerMoney(playerid) > 299999)
								{
								ELOY9N_GivePlayerMoney(playerid, -300000);
							//	new rhino = 432;
								CarSpawner(playerid,447);
							//	SetVehicleHealth(rhino,50000);
								SendClientMessage(playerid,green,"Apareciste tu Seasparrow  con exito - Lo pagaste $300.000. - War Blood");	
								}
							else
								{
								SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
								}
								
						}													
	  					return 1;					
					}						
			}
		if(dialogid == DIALOG_VIP_DIOSVEHICULOS)
          {
                if(response)
                {
                        if(listitem == 0)
                        {
						CarSpawner(playerid,522);
						SendClientMessage(playerid,green,"Apareciste tu NRG con exito. - War Blood");
						return 1;
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
                        {
						CarSpawner(playerid,411);
						SendClientMessage(playerid,green,"Apareciste tu Infernus con exito. - War Blood");
						return 1;
	  					}
						if(listitem == 2)
                        {
						CarSpawner(playerid,487);
						SendClientMessage(playerid,green,"Apareciste tu Maverick con exito. - War Blood");
						return 1;
	  					}
						if(listitem == 3)
                        {
						CarSpawner(playerid,539);
						SendClientMessage(playerid,green,"Apareciste tu Vortex con exito. - War Blood");								
	  					return 1;
						}
						if(listitem == 4)
                        {
							if(GetPlayerMoney(playerid) > 999999)
								{
								ELOY9N_GivePlayerMoney(playerid, -1000000);
						//		new SWATBLINDADO;
						//		SWATBLINDADO = CreateVehicle(601, 2473.2566, -840.2829, 103.8974, 270.0024, -1, -1, 100);
						//		SetVehicleHealth(SWATBLINDADO,20000);

								//new rhino;
								//rhino = CarSpawner(playerid,432);
								//SetVehicleHealth(rhino,50000);
								CarSpawner(playerid,432);
								SetVehicleHealth(GetPlayerVehicleID(playerid), 50000);

								SendClientMessage(playerid,green,"Apareciste tu RHINO blindado con exito - Lo pagaste $1.000.000. - War Blood");	
								}
							else
								{
								SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
								}
									
						}													
						if(listitem == 5)
                        {
							if(GetPlayerMoney(playerid) > 299999)
								{
								ELOY9N_GivePlayerMoney(playerid, -300000);
							//	new rhino = 432;
								CarSpawner(playerid,447);
							//	SetVehicleHealth(rhino,50000);
								SendClientMessage(playerid,green,"Apareciste tu Seasparrow con exito - Lo pagaste $300.000. - War Blood");	
								}
							else
								{
								SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
								}
								
						}	
						if(listitem == 6)
                        {
							if(GetPlayerMoney(playerid) > 999999)
								{
								ELOY9N_GivePlayerMoney(playerid, -1000000);
							//	new rhino = 432;
								CarSpawner(playerid,425);
							//	SetVehicleHealth(rhino,50000);
								SendClientMessage(playerid,green,"Apareciste tu Hunter con exito - Lo pagaste $1.000.000. - War Blood");	
								}
							else
								{
								SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
								}
								
						}
						if(listitem == 7)
                        {
							if(GetPlayerMoney(playerid) > 1499999)
								{
								ELOY9N_GivePlayerMoney(playerid, -1500000);
							//	new rhino = 432;
								CarSpawner(playerid,520);
							//	SetVehicleHealth(rhino,50000);
								SendClientMessage(playerid,green,"Apareciste tu Hydra con exito - Lo pagaste $1.500.000. - War Blood");	
								}
							else
								{
								SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
								}
								
						}																									
	  					return 1;					
					}						
			}													
		if(dialogid == DIALOG_VIP_DIAMANTE)
          {
                if(response)
                {
                        if(listitem == 0)
                        {
						ShowPlayerDialog(playerid,DIALOG_VIP_DIAMANTEVEHICULOS,DIALOG_STYLE_LIST,"{FFF000}Vehiculos VIP","{FFFFFF}NRG\n{FFFFFF}Infernus\n{FFFFFF}Maverick\n{FFFFFF}Vortex\n{FFFFFF}Tanque[1.M$]\n{FFFFFF}Sparrow[300k$]","Seleccionar","Salir");
	  					return 1;
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
                        {
						ShowPlayerDialog(playerid,DIALOG_VIP_DIAMANTEARMAS,DIALOG_STYLE_LIST,"{FFF000}Armas VIP","{FFFFFF}RPG[30k$]\n{FFFFFF}Escopetas Recortadas[10k$]\n{FFFFFF}Lanzallamas[50k$]\n{FFFFFF}Granadas[20k$]\n{FFFFFF}Molotovs[20k$]\n{FFFFFF}Minigun[500k$]\n{F59317}Balas infinitas[25k$]","Seleccionar","Salir");
	  					}
	  					if(listitem == 2)
                        {
						ShowPlayerDialog(playerid,DIALOG_VIP_OROCHALECO,DIALOG_STYLE_LIST,"{FFF000}Chaleco VIP","{FFFFFF}Chaleco","Seleccionar","Salir");
	  					}	
	  					if(listitem == 3)
                        {
					/*	if(CMDRegeneracionHP[playerid] == 1)
						{
							KillTimer(VariableRegeneracionHP[playerid]);
						 
							SendClientMessage(playerid,green,"Desactivaste la regeneración de vida.");
							RemovePlayerAttachedObject(playerid,5);
							RemovePlayerAttachedObject(playerid,7);
							//RemovePlayerAttachedObject(playerid,8);
							//RemovePlayerAttachedObject(playerid,9);
							CMDRegeneracionHP[playerid] = 0;
						}
						else 
						{
					//	VariableRegeneracionHP[playerid] = SetTimer("RegeneracionHP",6000,1);
						
						VariableRegeneracionHP[playerid] = SetTimerEx("RegeneracionHP", 6000, true, "i", playerid);
						SendClientMessage(playerid,green,"Activaste la regeneración de vida.");
					    SetPlayerAttachedObject( playerid, 5, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
		                SetPlayerAttachedObject( playerid, 7, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
						CMDRegeneracionHP[playerid] = 1;
						}*/
						if(CMDRegeneracionARMADURA[playerid] == 1)
						{
							KillTimer(VariableRegeneracionARMADURA[playerid]);
							SendClientMessage(playerid,green,"Desactivaste la regeneración de chaleco.");
							RemovePlayerAttachedObject(playerid,2);
							RemovePlayerAttachedObject(playerid,3);
							RemovePlayerAttachedObject(playerid,5);
							RemovePlayerAttachedObject(playerid,7);
							CMDRegeneracionARMADURA[playerid] = 0;
						}
						else 
						{
						//VariableRegeneracionARMADURA[playerid]= SetTimer("RegeneracionARMADURA",3000,1);
						VariableRegeneracionARMADURA[playerid] = SetTimerEx("RegeneracionARMADURA", 3000, true, "i", playerid);
						SendClientMessage(playerid,green,"Activaste la regeneración de armadura.");
					    SetPlayerAttachedObject( playerid, 2, 18717, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
						SetPlayerAttachedObject( playerid, 3, 18717, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
						CMDRegeneracionARMADURA[playerid] = 1;
						}

	  					}												
	  					return 1;
				}
			}
		if(dialogid == DIALOG_VIP_DIOS)
          {
                if(response)
                {
                        if(listitem == 0)
                        {
						ShowPlayerDialog(playerid,DIALOG_VIP_DIOSVEHICULOS,DIALOG_STYLE_LIST,"{FFF000}Vehiculos VIP","{FFFFFF}NRG\n{FFFFFF}Infernus\n{FFFFFF}Maverick\n{FFFFFF}Vortex\n{FFFFFF}Tanque[1.M$]\n{FFFFFF}Sparrow[300k$]\n{FFFFFF}Hunter[1.M$]\n{FFFFFF}Hydra[1.5M$]","Seleccionar","Salir");
	  					return 1;
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
                        {
						ShowPlayerDialog(playerid,DIALOG_VIP_DIOSARMAS,DIALOG_STYLE_LIST,"{FFF000}Armas VIP","{FFFFFF}RPG[50k$]\n{FFFFFF}Escopetas Recortadas[10k$]\n{FFFFFF}Lanzallamas[50k$]\n{FFFFFF}Granadas[20k$]\n{FFFFFF}Molotovs[20k$]\n{FFFFFF}Minigun[600k$]\n{F59317}Balas infinitas[25k$]","Seleccionar","Salir");
	  					}
	  					if(listitem == 2)
                        {
						ShowPlayerDialog(playerid,DIALOG_VIP_DIOSCHALECO,DIALOG_STYLE_LIST,"{FFF000}Chaleco VIP","{FFFFFF}Chaleco","Seleccionar","Salir");
	  					}						
	  					if(listitem == 3)
                        {
						if(CMDRegeneracionHP[playerid] == 1)
						{
							KillTimer(VariableRegeneracionHPPATREON[playerid]);					
							SendClientMessage(playerid,green,"Desactivaste la regeneración de vida.");
							RemovePlayerAttachedObject(playerid,5);
							RemovePlayerAttachedObject(playerid,7);
							RemovePlayerAttachedObject(playerid,8);
							RemovePlayerAttachedObject(playerid,9);
							CMDRegeneracionHP[playerid] = 0;
						}
						else 
						{
						//VariableRegeneracionHPPATREON[playerid] = SetTimer("RegeneracionHPPATREON",6000,1);
						VariableRegeneracionHPPATREON[playerid] = SetTimerEx("RegeneracionHPPATREON", 6000, true, "i", playerid);
						SendClientMessage(playerid,green,"Activaste la regeneración de vida.");
					    SetPlayerAttachedObject( playerid, 5, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
		                SetPlayerAttachedObject( playerid, 7, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
						CMDRegeneracionHP[playerid] = 1;
						}
	  					}
	  					if(listitem == 4)
                        {
						if(CMDRegeneracionARMADURA[playerid] == 1)
						{
							KillTimer(VariableRegeneracionARMADURA[playerid]);
							SendClientMessage(playerid,green,"Desactivaste la regeneración de chaleco.");
							RemovePlayerAttachedObject(playerid,2);
							RemovePlayerAttachedObject(playerid,3);
							RemovePlayerAttachedObject(playerid,5);
							RemovePlayerAttachedObject(playerid,7);
							CMDRegeneracionARMADURA[playerid] = 0;
						}
						else 
						{
						//VariableRegeneracionARMADURA[playerid]= SetTimer("RegeneracionARMADURA",3000,1);
						VariableRegeneracionARMADURA[playerid] = SetTimerEx("RegeneracionARMADURA", 3000, true, "i", playerid);
						SendClientMessage(playerid,green,"Activaste la regeneración de armadura.");
					    SetPlayerAttachedObject( playerid, 2, 18717, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
						SetPlayerAttachedObject( playerid, 3, 18717, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
						CMDRegeneracionARMADURA[playerid] = 1;
						}
	  					}
						if(listitem == 5)
						{
								if(g_RadarInvisible[playerid] == 1) // Si el jugador ya está invisible en el radar, lo vuelve visible
								{
	
									SetPlayerColor(playerid,g_PlayerMarkerColor[playerid]);
									SendClientMessage(playerid, green, "Ahora eres visible en el radar.");
									g_RadarInvisible[playerid] = 0; 
								}
								else // Si el jugador no está invisible en el radar, lo vuelve invisible
								{
	
										
										g_PlayerMarkerColor[playerid] = GetPlayerColor(playerid);
										SetPlayerColor(playerid,COLOR_INVISIBLE);
								
									SendClientMessage(playerid, green, "Ahora eres invisible en el radar."); // Mensaje al jugador
									g_RadarInvisible[playerid] = 1; // Actualiza el estado de invisibilidad en el radar del jugador
								}					
					    }
					}								
	  		return 1;
			}			
		if(dialogid == DIALOG_VIP_DIOSARMAS)
          {
                if(response)
                {
                        if(listitem == 0)
						{
						if(GetPlayerMoney(playerid) > 49999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 36, 10);
						ELOY9N_GivePlayerMoney(playerid, -50000);
						SendClientMessage(playerid, green, "Compraste un RPG por $50.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
						{
						if(GetPlayerMoney(playerid) > 9999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 26, 500);
						ELOY9N_GivePlayerMoney(playerid, -10000);
						SendClientMessage(playerid, green, "Compraste unas escopetas recortadas por $10.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
						if(listitem == 2)
						{
						if(GetPlayerMoney(playerid) > 49999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 37, 1000);
						ELOY9N_GivePlayerMoney(playerid, -50000);
						SendClientMessage(playerid, green, "Compraste un lazallamas por $50.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
						if(listitem == 3)
						{
						if(GetPlayerMoney(playerid) > 19999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 16, 50);
						ELOY9N_GivePlayerMoney(playerid, -20000);
						SendClientMessage(playerid, green, "Compraste unas granadas por $20.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}	
						if(listitem == 4)
						{
						if(GetPlayerMoney(playerid) > 19999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 18, 50);
						ELOY9N_GivePlayerMoney(playerid, -20000);
						SendClientMessage(playerid, green, "Compraste 50 Molotovs por $20.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}	
						if(listitem == 5)
						{
						if(GetPlayerMoney(playerid) > 599999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 38, 10);
						ELOY9N_GivePlayerMoney(playerid, -500000);
						SendClientMessage(playerid, green, "Compraste una minigun por $600.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}
						if(listitem == 6)
						{
						if(GetPlayerMoney(playerid) > 24999)
						{
						ELOY9N_GivePlayerWeapon(playerid, 24, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 31, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 29, 9999);
						ELOY9N_GivePlayerWeapon(playerid, 25, 9999);
						ELOY9N_GivePlayerMoney(playerid, -25000);
						SendClientMessage(playerid, green, "Compraste balas infinitas para un set basico por $25.000.");
						}
						else
						{
						SendClientMessage(playerid, COLOR_RED, "No tenes suficiente dinero.");
						}
						}																											
	  					return 1;
				}
			}			


  //////////////////////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////////////////////
  
  /////////////////////////////HUMANOS ITEM///////////////////////////////////////////////////////////
  
  //////////////////////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////////////////////
		if(dialogid == DIALOG_ITEMSU)
          {
                if(response)
                {
                        if(listitem == 0)
                        {
                        if(GetPlayerMoney(playerid) < 20000)
                        {
                        SendClientMessage(playerid,COLOR_WHITE,"Necesitas {33FF33}$20.000{FFFFFF} para comprar este item.");
                        return 1;
                        }
                        SetPlayerHealth(playerid,100);
                        SendClientMessage(playerid,COLOR_RED,"Vida restablecida a 100.");
						ELOY9N_GivePlayerMoney(playerid,-20000);
                        return 1;
                        }
                        if(listitem == 1)
                        {
                        if(GetPlayerMoney(playerid) < 35000)
                        {
                        SendClientMessage(playerid,COLOR_WHITE,"Necesitas {33FF33}$35.000{FFFFFF} para comprar este item.");
                        return 1;
                        }
                        SetPlayerArmour(playerid, 100);
                        SendClientMessage(playerid,COLOR_RED,"Armadura restablecida a 100.");
                        ELOY9N_GivePlayerMoney(playerid,-35000);
                        return 1;
                        }
                        if(listitem == 2)
                        {
                        if(GetPlayerMoney(playerid) < 10000)
                        {
                        SendClientMessage(playerid, COLOR_WHITE,"Necesitas {33FF33}$10.000{FFFFFF} para comprar este item.");
                        return 1;
                        }
                        SetTimerEx("CompletaInfeccion", 60000,0,"d",playerid);
    					InfeccionEnprogreso[playerid]=1;
						VidaTimer[playerid]=SetTimerEx("VidaBajando", 1000,0,"d",playerid);
						TextDrawShowForPlayer(playerid,HealthBar[0]);
                        ShowTDN(playerid, 20000, "te inyectaste el ~n~~r~virus Z.");
                        ELOY9N_GivePlayerMoney(playerid,-10000);
                        return 1;
                        }
                }
        }
	//========================= dialogo itemsz ===================

	if(dialogid == DIALOG_ITEMSZ)
{
	if(response)
	{
		if(listitem == 0)
		{
		new Float:Health;
		GetPlayerHealth(playerid,Health);
		if(Health < 50) return SendClientMessage(playerid,green,"Necesitas tener más de la mitad de salud para poder curarte");			
			if(GetPlayerMoney(playerid) < 85000)
			{
				SendClientMessage(playerid,COLOR_WHITE,"Necesitas {33FF33}$85.000{FFFFFF} para comprar este item.");
				return 1;
			}
			//SetPlayerHealth(playerid,25);
			SetPlayerColor(playerid, 0x218C07FF);
			ShowTDN(playerid, 20000, "te inyectaste el antidoto del ~n~~r~virus Z.");
			ELOY9N_GivePlayerMoney(playerid,-85000);
			SendClientMessageToAll(green, "¡Un zombie ha sido desinfectado!");
			gTeam[playerid]=255;
		//	OnRequest[playerid] = 0;
			SetPlayerTeam(playerid, gTeam[playerid]);
			if(Skin_Humano[playerid] == 0)
			{
			SetPlayerSkin(playerid, skinsh[random(213)]);
			}
			else {
			SetPlayerSkin(playerid,Skin_Humano[playerid]);
			}
			ELOY9N_ResetPlayerWeapons(playerid);
			SetPlayerHealth(playerid,100);
		 	ELOY9N_GivePlayerWeapon(playerid, 25, 20);  //escopeta
	  		ELOY9N_GivePlayerWeapon(playerid, 29, 114);   //mp5
	  		ELOY9N_GivePlayerWeapon(playerid, 24, 75);
	  		ELOY9N_GivePlayerWeapon(playerid, 31, 250);
	  	//	ELOY9N_GivePlayerWeapon(playerid, 24, 35);  //deagle
		//	TextDrawShowForPlayer(playerid, Textdraw0);
		//	TextDrawHideForPlayer(playerid, Textdraw2);
	  		TextDrawHideForPlayer(playerid, VistaZombie0);
			TextDrawHideForPlayer(playerid, VistaZombie1);
			TextDrawHideForPlayer(playerid, VistaZombie2);
			TextDrawHideForPlayer(playerid, VistaZombie3);
			TextDrawHideForPlayer(playerid, VistaZombie4);
			InfeccionEnprogreso[playerid]=0;
			return 1;
		}
                        if(listitem == 1)
                        {
						ShowModelSelectionMenu(playerid, skinlist2, "Skins");
                        return 1;
                        }		
/*		if(listitem == 1)
		{
			if(GetPlayerMoney(playerid) < 2000)
			{
				SendClientMessage(playerid,COLOR_RED,"Necesitas $2000 para comprar este item..");
				return 1;
			}
			SetPlayerHealth(playerid,100);
			SendClientMessage(playerid,COLOR_RED,"Vida restablecida a 100.");
			ELOY9N_GivePlayerMoney(playerid,-2000);
			return 1;
		}
		if(listitem == 2)
		{
			if(GetPlayerMoney(playerid) < 1000)
			{
				SendClientMessage(playerid,COLOR_RED,"Necesitas $1000 para comprar este item.");
				return 1;
			}
			CarSpawner(playerid,463);
			SendClientMessage(playerid,COLOR_RED,"Moto Freeway spawneada!");
			ELOY9N_GivePlayerMoney(playerid,-2000);
		}
		return 1;*/
	}
}
if(dialogid == DIALOG_ARMASCLANES)
{
    if(response)
    {
        switch(listitem)
        {
            case 0:
            {
                ELOY9N_GivePlayerWeapon(playerid, 24, 150); // Desert Eagle
                SendClientMessage(playerid, green, "Recibiste una Desert Eagle del equipo de armamento de tu clan.");
            }
            case 1:
            {
                ELOY9N_GivePlayerWeapon(playerid, 25, 40); // Escopeta
                SendClientMessage(playerid, green, "Recibiste una Escopeta del equipo de armamento de tu clan.");
            }
            case 2:
            {
                ELOY9N_GivePlayerWeapon(playerid, 26, 40); // Escopeta Recortada
                SendClientMessage(playerid, green, "Recibiste una Escopeta Recortada del equipo de armamento de tu clan.");
            }
            case 3:
            {
                ELOY9N_GivePlayerWeapon(playerid, 31, 400); // M4
                SendClientMessage(playerid, green, "Recibiste una M4 del equipo de armamento de tu clan.");
            }
            case 4:
            {
                ELOY9N_GivePlayerWeapon(playerid, 30, 150); // AK-47
                SendClientMessage(playerid, green, "Recibiste una AK-47 del equipo de armamento de tu clan.");
            }
            case 5:
            {
                ELOY9N_GivePlayerWeapon(playerid, 34, 40); // Sniper
                SendClientMessage(playerid, green, "Recibiste un Sniper del equipo de armamento de tu clan.");
            }
        }
    }
    return 1;
}
	if(dialogid == DIALOG_TRANSFORMACION)
          {
                if(response)
				{

                        if(listitem == 0)
                        {
						gTeam[playerid] = TEAM_NEMESIS;
						ELOY9N_GivePlayerWeapon(playerid, 35, 9999); // 
						SetPlayerColor(playerid, COLOR_RED);
						SetPlayerArmour(playerid,3000);
						SetPlayerHealth(playerid,1300);

						SetPlayerAttachedObject( playerid, 5, 18728, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
						SetPlayerAttachedObject( playerid, 7, 18728, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
						SetPlayerSkin(playerid,17);
						SendClientMessageToAll(COLOR_RED,"Alerta: ¡Un zombie se ha transformado en nemesis!");
						SendClientMessage(playerid,COLOR_RED,"¡Cometiste un error! - [!] Transformación exitosa.");
                        return 1;
                        }
				}

                }
	if(dialogid == DIALOG_ITEMSSHOPH)
          {
                if(response)
                {
                   	/*	if(listitem == 0)
                   		{
                    	ShowPlayerDialog(playerid, DArmas,DIALOG_STYLE_LIST,"{0000FF}Armas","Silenciada($1000)\n9mm($1500)\nDesert Eagle($5000)\nEscopeta($3000)\nTec9($4000)\nMP5($4000)\nEscopeta de combate($5000)\nM4($7000)\nAK-47($7000)\nRifle($7000)\nGranadas($5000)\nMolotov($5000)\nLanza Misiles($100,000)","Seleccionar","Salir");
                  		return 1;
                        }
                        if(listitem == 1)
                        {
                        ShowPlayerDialog(playerid, Autosh,DIALOG_STYLE_LIST,"{0000FF}Autos","LandsTalker($5000)\nSentinel($6000) \nPremier($6000)\nPatriot($8000)\nQuad($4000)\nMaverick($9000)\nFBI Rancher($7000) \nSabre($3000)","Seleccionar","Salir");
                  		return 1;
                        }*/
            /*            if(listitem == 0)
                        {
                        if(GetPlayerMoney(playerid) < 20000)
                        {
                        SendClientMessage(playerid,COLOR_RED,"Necesitas {FFF000}$20.000{FFFFFF} para comprar este item.");
                        return 1;
                        }
                        SetPlayerHealth(playerid,100);
                        SendClientMessage(playerid,COLOR_RED,"Vida restablecida a 100.");
						ELOY9N_GivePlayerMoney(playerid,-20000);
                        return 1;
                        }
                        if(listitem == 1)
                        {
                        if(GetPlayerMoney(playerid) < 35000)
                        {
                        SendClientMessage(playerid,COLOR_RED,"Necesitas {FFF000}$35.000{FFFFFF} para comprar este item.");
                        return 1;
                        }
                        SetPlayerArmour(playerid, 100);
                        SendClientMessage(playerid,COLOR_RED,"Armadura restablecida a 100.");
                        ELOY9N_GivePlayerMoney(playerid,-35000);
                        return 1;
                        }*/
                        if(listitem == 0)
                        {
                      //  if(GetPlayerMoney(playerid) < 10000)
                       // {
                       // SendClientMessage(playerid, COLOR_WHITE,"Necesitas {33FF33}$10.000{FFFFFF} para comprar este item.");
                       // return 1;
                       // }
                        SetTimerEx("CompletaInfeccion", 60000,0,"d",playerid);
    					InfeccionEnprogreso[playerid]=1;
						VidaTimer[playerid]=SetTimerEx("VidaBajando", 1000,0,"d",playerid);
						TextDrawShowForPlayer(playerid,HealthBar[0]);
                        ShowTDN(playerid, 20000, "te inyectaste el ~n~~r~virus Z.");
                       // ELOY9N_GivePlayerMoney(playerid,-10000);
                        return 1;
                        }
           /*             if(listitem == 5)
                        {
                        if(GetPlayerMoney(playerid) < 5000)
                        {
                        SendClientMessage(playerid,COLOR_RED,"Necesitas {FFF000}$5000{FFFFFF} para comprar este item.");
                        return 1;
                        }
                        if((gTeam[playerid] == NO_TEAM) && !(InfeccionEnprogreso[playerid]==1)) return ShowTDN(playerid, 20000, "tu no necesitas ~n~~r~cura.");
						SendClientMessage(playerid,COLOR_RED,"Casi te conviertes!");
						gTeam[playerid]=255;
					//	OnRequest[playerid] = 0;
						SetPlayerTeam(playerid, gTeam[playerid]);
						SetPlayerColor(playerid, 0x218C07FF);
						//SetPlayerSkin(playerid, 285);
						//SetPlayerSkin(skinsh[random(213)];
						//Skins[playerid]=285;
					//	TextDrawShowForPlayer(playerid, Textdraw0);
					//	TextDrawHideForPlayer(playerid, Textdraw2);
						InfeccionEnprogreso[playerid]=0;
						DeletePlayer3DTextLabel(playerid,PlayerText3D:label);
						SetPlayerHealth(playerid,100.0);
						KillTimer(VidaTimer[playerid]);
                        ELOY9N_GivePlayerMoney(playerid,-5000);
                        for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
                        return 1;
                        }*/

                        /*if(listitem == 4)
                        {
                        ShowPlayerDialog(playerid, AUTOSH,DIALOG_STYLE_LIST,"{0000FF}Autos","LandsTalker($5000)\nSentinel($6000) \nPremier($6000)\nPetriot($8000)\nQuad($4000)\nMaverick($9000)\nFBI Rancher($7000)","Seleccionar","Salir");
                  		return 1;
                        }*/
                }
        }
if(dialogid == DIALOG_ITEMSSHOPZ)
{
    if(response)
    {
        if(listitem == 0)
        {
            new Float:Health;
            GetPlayerHealth(playerid,Health);           
            if(Health < 50) return SendClientMessage(playerid,green,"Necesitas tener más de la mitad de salud para poder curarte");
                //SetPlayerHealth(playerid,25);
            if(CLASEH[playerid] == 11) // Exterminador
            {
                SetPlayerColor(playerid, COLOR_EXTERMINADOR);
				SetPlayerArmour(playerid,60);
                ELOY9N_ResetPlayerWeapons(playerid);
                ELOY9N_GivePlayerWeapon(playerid, 24, 100); // Desert Eagle
                ELOY9N_GivePlayerWeapon(playerid, 26, 100); // Recortadas (Sawnoff Shotgun)
                ELOY9N_GivePlayerWeapon(playerid, 29, 200); // MP5
                ELOY9N_GivePlayerWeapon(playerid, 30, 200); // AK47
                ELOY9N_GivePlayerWeapon(playerid, 34, 50);  // Sniper Rifle
                // Otros ajustes para Exterminador si es necesario
            }
            else if(CLASEH[playerid] == 10) // Mercenario
            {
                SetPlayerColor(playerid, COLOR_MERCENARIO);
                ELOY9N_ResetPlayerWeapons(playerid);
                ELOY9N_GivePlayerWeapon(playerid, 23, 20);  // Silenciada
                ELOY9N_GivePlayerWeapon(playerid, 26, 130); // Recortadas
                ELOY9N_GivePlayerWeapon(playerid, 32, 230); // Tec 9
                ELOY9N_GivePlayerWeapon(playerid, 31, 90);  // M4
                ELOY9N_GivePlayerWeapon(playerid, 33, 120); // Rifle
                // Otros ajustes para Mercenario si es necesario
            }
            else // Normal
            {
                SetPlayerColor(playerid, 0x218C07FF);
                ELOY9N_ResetPlayerWeapons(playerid);
                ELOY9N_GivePlayerWeapon(playerid, 25, 20);  // Escopeta
                ELOY9N_GivePlayerWeapon(playerid, 29, 114); // MP5
                ELOY9N_GivePlayerWeapon(playerid, 24, 75);  // Desert Eagle
                ELOY9N_GivePlayerWeapon(playerid, 31, 90);  // M4
                // Otros ajustes para Normal si es necesario
            }

            ShowTDN(playerid, 20000, "te inyectaste el antidoto del ~n~~r~virus Z.");

            SendClientMessageToAll(green, "¡Un zombie ha sido desinfectado!");
            gTeam[playerid] = 255;

            SetPlayerTeam(playerid, gTeam[playerid]);
            if(Skin_Humano[playerid] == 0)
            {
                SetPlayerSkin(playerid, skinsh[random(213)]);
            }
            else
            {
                SetPlayerSkin(playerid, Skin_Humano[playerid]);
            }

            SetPlayerHealth(playerid, 100);

            TextDrawHideForPlayer(playerid, VistaZombie0);
            TextDrawHideForPlayer(playerid, VistaZombie1);
            TextDrawHideForPlayer(playerid, VistaZombie2);
            TextDrawHideForPlayer(playerid, VistaZombie3);
            TextDrawHideForPlayer(playerid, VistaZombie4);
            InfeccionEnprogreso[playerid] = 0;
            return 1;
        }

    }
}

//-------------------------musica--------------------------------------------

//==============================================================================

if(dialogid == Musicap)
{
if(response)//Esto es el "aceptar"
{
if(listitem == 0)
{
PlayAudioStreamForPlayer(playerid, "http://alohapainting.net/media/aceofspades.mp3"); // MUSICA 1
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 1)
{
PlayAudioStreamForPlayer(playerid, "http://www.myglife.org/w/images/bwccwiki/5/5d/In_The_End_-_Linkin_Park.mp3"); // MUSICA 2
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 2)
{
PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_mm3pv7y85n1qe380eo1.mp3#_=_"); // MUSICA 3.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 3)
{
PlayAudioStreamForPlayer(playerid, "http://crbestofthemonth.files.wordpress.com/2012/03/avicii-levels-skrillex-remix.mp3"); // MUSICA 4.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 4)
{
PlayAudioStreamForPlayer(playerid, "http://www.thewolvessite.co.uk/champs.mp3"); // MUSICA 5.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 5)
{
PlayAudioStreamForPlayer(playerid, "http://mgkestfam.files.wordpress.com/2012/10/11-invincible-feat-ester-dean.mp3"); // MUSICA 7.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 6)
{
PlayAudioStreamForPlayer(playerid, "http://s1.radio.ge/Music/Metallica/1988_And_Justice_For_All/04_One.mp3"); // MUSICA 8.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 7)
{
PlayAudioStreamForPlayer(playerid, "http://media.funradio.fr/online/sound/2013/0729/7763461539_avicii-wake-me-up.mp3"); // MUSICA 9.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 8)
{
PlayAudioStreamForPlayer(playerid, "http://tylergrund.com/mp3/obsessionsongs/Guns%20N%20Roses%20-%20Sweet%20Child%20of%20Mine.mp3"); // MUSICA 10.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 9)
{
PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_lpls7p4iyt1qgze8io1.mp3#_=_"); // MUSICA 11.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 10)
{
PlayAudioStreamForPlayer(playerid, "http://api.ning.com/files/3BUwwLuJMnR4LexxQBZ6f11SvPXejTDD9j5IB9tRLZO1EDLiyyUzg12h6RB6-CqG6T65-gnyYYajqYQmoVzSJe7*olPt3Pni/nirvanasmellsliketeenspirit087.mp3"); // MUSICA 12.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 11)
{
PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_m75mo2DlkL1rn76IV-Zo1.mp3"); // MUSICA 13.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 12)
{
PlayAudioStreamForPlayer(playerid, "http://hoppingintopuddles.files.wordpress.com/2009/12/memories-feat-kid-cudi.mp3"); // MUSICA 14.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 13)
{
PlayAudioStreamForPlayer(playerid, "http://www.30secondstomars.ru/download/This_Is_War.mp3"); // MUSICA 15.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 14)
{
PlayAudioStreamForPlayer(playerid, "http://evilbeard.com/evilbeard/Living%20Colour%20-%20Cult%20of%20Personality.mp3"); // MUSICA 16.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
if(listitem == 15)
{
PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_m7fsrh5KSl1qhwi0mo1.mp3"); // MUSICA 17.
SendClientMessage(playerid,0xFF8C00AA,"{FFFFFF}Música reproduciendose, espere unos segundos.");
}
}
}
////
if(dialogid == DIALOG_AUTOPOS)
{
if(response)
{
if(listitem == 0)  //PATRIOT
{
CarSpawner(playerid,470);
SendClientMessage(playerid,COLOR_RED,"EXTERMINADOR : tu vehiculo fue entregado.");
}
}
return 1;
}

///
if(dialogid == DIALOG_TANQUEPOS)
{
if(response)
{
if(listitem == 0)  //RHINO
{
CarSpawner(playerid,432);
SendClientMessage(playerid,COLOR_RED,"EXTERMINADOR : tu vehiculo fue entregado.");
}
}
return 1;
}
///
if(dialogid == DIALOG_HELIPOS)
{
if(response)
{
if(listitem == 0)  //HELI
{
CarSpawner(playerid,497);
SendClientMessage(playerid,COLOR_RED,"EXTERMINADOR : tu vehiculo fue entregado.");
}
}
return 1;
}
////
if(dialogid == DIALOG_AVIONPOS)
{
if(response)
{
if(listitem == 0)  //Avion
{
CarSpawner(playerid,520);
SendClientMessage(playerid,COLOR_RED,"EXTERMINADOR : tu vehiculo fue entregado.");
}
}
return 1;
}
if(dialogid == DTienda)
{
if(response)
{
if(listitem == 0)  //MP5
{
		if(PlayerInfo[playerid][RANGO_PLAYER] < 2)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para comprar este articulo.");
	}
	
	else 
	{
if(GetPlayerMoney(playerid) > 14999)
{
SetPlayerHealth(playerid,100);
ELOY9N_GivePlayerMoney(playerid, -15000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
	}
}

if(listitem == 1)  //MP5
{
		if(PlayerInfo[playerid][RANGO_PLAYER] < 7)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para comprar este articulo.");
	}
	else 
	{
if(GetPlayerMoney(playerid) > 39999)
{
SetPlayerArmour(playerid,100);
ELOY9N_GivePlayerMoney(playerid, -40000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
	}
}
if(listitem == 2)  //RPG
{
	if(PlayerInfo[playerid][RANGO_PLAYER] < 16)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para comprar este articulo.");
	}
	else 
	{
if(GetPlayerMoney(playerid) > 99999)
{
ELOY9N_GivePlayerWeapon(playerid, 26, 200);
ELOY9N_GivePlayerMoney(playerid, -100000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
	}
}
return 1;
}
}

if(dialogid == DAereo)
{
    if(response)
    {
        if(listitem == 0) // Comprar Raindance
        {
            if(PlayerInfo[playerid][RANGO_PLAYER] < 6)
            {
                SendClientMessage(playerid, COLOR_RED, "No tienes el rango suficiente para comprar un Raindance.");
            }
            else if(GetPlayerMoney(playerid) >= 500000)
            {
                // Compra exitosa
                CarSpawner(playerid, 563); // ID del Raindance
                ELOY9N_GivePlayerMoney(playerid, -500000);
                SendClientMessage(playerid, COLOR_GREEN, "Has comprado un Raindance.");
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero para comprar un Raindance.");
            }
        }
        if(listitem == 1) // Comprar Maverick
        {
            if(PlayerInfo[playerid][RANGO_PLAYER] < 3)
            {
                SendClientMessage(playerid, COLOR_RED, "No tienes el rango suficiente para comprar un Maverick.");
            }
            else if(GetPlayerMoney(playerid) >= 200000)
            {
                // Compra exitosa
                CarSpawner(playerid, 487); // ID del Maverick
                ELOY9N_GivePlayerMoney(playerid, -200000);
                SendClientMessage(playerid, COLOR_GREEN, "Has comprado un Maverick.");
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero para comprar un Maverick.");
            }
        }
        if(listitem == 2) // Comprar Seasparrow
        {
            if(PlayerInfo[playerid][RANGO_PLAYER] < 12)
            {
                SendClientMessage(playerid, COLOR_RED, "No tienes el rango suficiente para comprar un Seasparrow.");
            }
            else if(GetPlayerMoney(playerid) >= 900000)
            {
                // Compra exitosa
                CarSpawner(playerid, 447); // ID del Seasparrow
                ELOY9N_GivePlayerMoney(playerid, -900000);
                SendClientMessage(playerid, COLOR_GREEN, "Has comprado un Seasparrow.");
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero para comprar un Seasparrow.");
            }
        }
        if(listitem == 3) // Comprar Cargobob
        {
            if(PlayerInfo[playerid][RANGO_PLAYER] < 4) // Reemplaza TU_RANGO_REQUERIDO con el rango necesario
            {
                SendClientMessage(playerid, COLOR_RED, "No tienes el rango suficiente para comprar un Cargobob.");
            }
            else if(GetPlayerMoney(playerid) >= 250000)
            {
                // Compra exitosa
                CarSpawner(playerid, 548); // ID del Cargobob
                ELOY9N_GivePlayerMoney(playerid, -250000);
                SendClientMessage(playerid, COLOR_GREEN, "Has comprado un Cargobob.");
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero para comprar un Cargobob.");
            }
        }
    }
    return 1;
}

if(dialogid == DUniformes)
{
if(response)
{
if(listitem == 0)  //MP5
{
	if(PlayerInfo[playerid][RANGO_PLAYER] < 8)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para tomar este uniforme.");
	}
	
	else 
	{
	SetPlayerSkin(playerid,285);
	}
}
if(listitem == 1)  //MP5
{
	if(PlayerInfo[playerid][RANGO_PLAYER] < 12)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para tomar este uniforme, solo personas capacitadas y aptas pueden tomar el uniforme de soldado.");
	}	
	else 
	{
	SetPlayerSkin(playerid,287);
	}
}
return 1;
}
}
//-----------------------------------------------------------------------------------
if(dialogid == Larmas)
{
if(response)
{
if(listitem == 0)  //RPG
{
if(GetPlayerMoney(playerid) > 149999)
{
ELOY9N_GivePlayerWeapon(playerid, 36, 20);
ELOY9N_GivePlayerMoney(playerid, -150000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 1)  //C4
{
if(GetPlayerMoney(playerid) > 199999)
{
ELOY9N_GivePlayerWeapon(playerid, 39, 5);
ELOY9N_GivePlayerMoney(playerid, -200000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 2)  //DETONADOR
{
if(GetPlayerMoney(playerid) > 19999)
{
ELOY9N_GivePlayerWeapon(playerid, 40, 1);
ELOY9N_GivePlayerMoney(playerid, -20000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 3)  //Coctel
{
if(GetPlayerMoney(playerid) > 99999)
{
ELOY9N_GivePlayerWeapon(playerid, 18, 60);
ELOY9N_GivePlayerMoney(playerid, -100000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
}
return 1;
}
if(dialogid == DProductos)
{
if(response)
{
if(listitem == 0)  //RPG
{
if(GetPlayerMoney(playerid) > 349999)
{
ELOY9N_GivePlayerWeapon(playerid, 36, 20);
ELOY9N_GivePlayerMoney(playerid, -350000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 1)  //C4
{
if(GetPlayerMoney(playerid) > 199999)
{
ELOY9N_GivePlayerWeapon(playerid, 39, 5);
ELOY9N_GivePlayerMoney(playerid, -200000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 2)  //kit
{
if(GetPlayerMoney(playerid) > 19999)
{
SetPlayerHealth(playerid, 100);
ELOY9N_GivePlayerMoney(playerid, -20000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 3)  //Adrena
{
if(GetPlayerMoney(playerid) > 99999)
{
//ELOY9N_GivePlayerWeapon(playerid, 18, 60);
SetPlayerArmour(playerid,100);
ELOY9N_GivePlayerMoney(playerid, -100000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
}
return 1;
}




if(dialogid == DArmas)
{
if(response)
{
if(listitem == 0)  //DK
{
if(GetPlayerMoney(playerid) > 9999)
{
ELOY9N_GivePlayerWeapon(playerid, 24, 150);
ELOY9N_GivePlayerMoney(playerid, -10000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 1)  //Escopeta
{
if(GetPlayerMoney(playerid) > 14999)
{
ELOY9N_GivePlayerWeapon(playerid, 25, 250);
ELOY9N_GivePlayerMoney(playerid, -15000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 2)  //MP5
	{
		if(GetPlayerMoney(playerid) > 19999)
		{
		ELOY9N_GivePlayerWeapon(playerid, 29, 150);
		ELOY9N_GivePlayerMoney(playerid, -20000);
		}
		else
		{
		SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
		}
		
	}
if(listitem == 3)  //M4
{

	if(GetPlayerMoney(playerid) > 14999)
	{
	ELOY9N_GivePlayerWeapon(playerid, 31, 300);
	ELOY9N_GivePlayerMoney(playerid, -15000);
	}
	else
	{
	SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
	}

}
if(listitem == 4)   //Rifle
{
	if(GetPlayerMoney(playerid) > 36999)
	{
	ELOY9N_GivePlayerWeapon(playerid, 33, 100);
	ELOY9N_GivePlayerMoney(playerid, -37000);
	}
	else
	{
	SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
	}
}
if(listitem == 5)   //Sniper
{

	if(GetPlayerMoney(playerid) > 39999)
	{
	ELOY9N_GivePlayerWeapon(playerid, 34, 5);
	ELOY9N_GivePlayerMoney(playerid, -40000);
	}
	else
	{
	SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
	}
}
if(listitem == 6)  //Granadas
{

	if(GetPlayerMoney(playerid) > 84999)
	{
	ELOY9N_GivePlayerWeapon(playerid, 30, 300);
	ELOY9N_GivePlayerMoney(playerid, -85000);
	}
	else
	{
	SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
	}

}

if(listitem == 7)  //UZIS
{

	if(GetPlayerMoney(playerid) > 64999)
	{
	ELOY9N_GivePlayerWeapon(playerid, 28, 330);
	ELOY9N_GivePlayerMoney(playerid, -65000);
	}
	else
	{
	SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
	}

}
if(listitem == 8)  //RECORTADAS
{

	if(GetPlayerMoney(playerid) > 29999)
	{
	ELOY9N_GivePlayerWeapon(playerid, 26, 50);
	ELOY9N_GivePlayerMoney(playerid, -30000);
	}
	else
	{
	SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
	}
		
}
return 1;
}














/////
/////
/////
/*if(dialogid == DAutos)
{
if(response)
{
if(listitem == 0)  //Mesa
{
if(GetPlayerMoney(playerid) > 4999)
{
CarSpawner(playerid,500);
ELOY9N_GivePlayerMoney(playerid, -5000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 1)  //Sabre
{
if(GetPlayerMoney(playerid) > 9999)
{
CarSpawner(playerid,475);
ELOY9N_GivePlayerMoney(playerid, -10000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
if(listitem == 2)  //Blistac
{
		if(PlayerInfo[playerid][RANGO_PLAYER] < 2)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para comprar este articulo.");
	}
	else 
	{
if(GetPlayerMoney(playerid) > 19999)
{
CarSpawner(playerid,496);
ELOY9N_GivePlayerMoney(playerid, -20000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
	}
}
if(listitem == 3)  //Securicar
{
		if(PlayerInfo[playerid][RANGO_PLAYER] < 2)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para comprar este articulo.");
	}
else 
{
if(GetPlayerMoney(playerid) > 49999)
{
CarSpawner(playerid,428);
ELOY9N_GivePlayerMoney(playerid, -50000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
}
if(listitem == 4)   //470
{
		if(PlayerInfo[playerid][RANGO_PLAYER] < 5)
	{
		SendClientMessage(playerid,green, "* No tienes el rango suficiente para comprar este articulo.");
	}
	else {
if(GetPlayerMoney(playerid) > 59999)

{
CarSpawner(playerid,470);
ELOY9N_GivePlayerMoney(playerid, -60000);
}
else
{
SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero");
}
}
}
}
return 1;
}*/
/*if (dialogid == DAutos)
{
    if (response)
    {
        if (listitem == 0) // Mesa
        {
            if (GetPlayerMoney(playerid) > 4999)
            {
                CarSpawner(playerid, 500);
                ELOY9N_GivePlayerMoney(playerid, -5000);
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero.");
            }
        }
        else if (listitem == 1) // Sabre
        {
            if (GetPlayerMoney(playerid) > 9999)
            {
                CarSpawner(playerid, 475);
                ELOY9N_GivePlayerMoney(playerid, -10000);
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero.");
            }
        }
        else if (listitem == 2) // Blistac
        {
            if (PlayerInfo[playerid][RANGO_PLAYER] < 2)
            {
                SendClientMessage(playerid, COLOR_GREEN, "* No tienes el rango suficiente para comprar este artículo.");
            }
            else
            {
                if (GetPlayerMoney(playerid) > 19999)
                {
                    CarSpawner(playerid, 496);
                    ELOY9N_GivePlayerMoney(playerid, -20000);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero.");
                }
            }
        }
        else if (listitem == 3) // Securicar
        {
            if (PlayerInfo[playerid][RANGO_PLAYER] < 2)
            {
                SendClientMessage(playerid, COLOR_GREEN, "* No tienes el rango suficiente para comprar este artículo.");
            }
            else
            {
                if (GetPlayerMoney(playerid) > 49999)
                {
                    CarSpawner(playerid, 428);
                    ELOY9N_GivePlayerMoney(playerid, -50000);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero.");
                }
            }
        }
        else if (listitem == 4) // Patriot
        {
            if (PlayerInfo[playerid][RANGO_PLAYER] < 5)
            {
                SendClientMessage(playerid, COLOR_GREEN, "* No tienes el rango suficiente para comprar este artículo.");
            }
            else
            {
                if (GetPlayerMoney(playerid) > 59999)
                {
                    CarSpawner(playerid, 470);
                    ELOY9N_GivePlayerMoney(playerid, -60000);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, "No tienes suficiente dinero.");
                }
            }
        }
    }

    return 1;
}*/
	/*	if(dialogid == DAutos)
          {
                if(response)
                {
                        if(listitem == 0)
                        {
						CarSpawner(playerid,522);
						SendClientMessage(playerid,green,"Apareciste tu NRG con exito. - War Blood");
						return 1;
						}
	  					/////////////////////////////////
	  					if(listitem == 1)
                        {
						CarSpawner(playerid,411);
						SendClientMessage(playerid,green,"Apareciste tu Infernus con exito. - War Blood");
						return 1;
	  					}
						if(listitem == 2)
                        {
						CarSpawner(playerid,487);
						SendClientMessage(playerid,green,"Apareciste tu Maverick con exito. - War Blood");
						return 1;
	  					}
						if(listitem == 3)
                        {
						CarSpawner(playerid,539);
						SendClientMessage(playerid,green,"Apareciste tu Vortex con exito. - War Blood");								
	  					return 1;
					}
			}
		}
*/

if(dialogid == DArmasSD)
{
if(response)
{
if(listitem == 0)  //DK
{
ELOY9N_GivePlayerWeapon(playerid, 24, 150);
}
if(listitem == 1)  //EDC
{
ELOY9N_GivePlayerWeapon(playerid, 27, 200);
}
}
return 1;
}
//==============================musicas
/*if(dialogid == MusicaA )
{
if(response)
{
if(listitem == 0)
{



for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://a.tumblr.com/tumblr_nc1by8PpFX1tekv5xo1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);

}
if(listitem == 1)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://www.bollywoodbilli.com/wp-content/uploads/2009/07/Linkin-Park-Numb.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 2)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://a.tumblr.com/tumblr_mc06mtQ9V81qefr98o1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);


}
if(listitem == 3)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://cluGODiversity.net/sounds/David_Guetta_feat_Kid_CuDi_-_Memories.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 4)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://mp3.qqkjkl.com/mp3/16/30690028.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);
}

if(listitem == 5)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://a.tumblr.com/tumblr_m2q775tCra1qf283wo1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 6)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://tegos.kz/new/mp3_full/Miley_Cyrus_-_Wrecking_Ball.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);
}


if(listitem == 7)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://a.tumblr.com/tumblr_mj1n5gsWx61rf4x8zo1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 8)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://dltapeshmusic.com/avatarane/music/92/Mehr/15/Pitbull%20feat.%20Ke$ha%20-%20Timber/Pitbull%20feat.%20Ke$ha%20-%20Timber%5B1%5D.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 9)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://a.tumblr.com/tumblr_mdmewuGdIQ1qzzktto1_r1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 10)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://sharebeast.com/mp3embed-xdcwhznhj97y.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener",Nombre);
return SendClientMessageToAll(red, string2);
}




}
return 1;
}*/

//======================
if(dialogid == DIALOG_requisitos)
{
if(response)
{
if(listitem == 0)
{
ShowPlayerDialog(playerid, 32374, DIALOG_STYLE_MSGBOX, "{0000FF}Humanos", "*Pueden comprar armas\n*Pueden comprar autos\n*Tienen chaleco\n", "OK", "Salir");
}
if(listitem == 1)
{
ShowPlayerDialog(playerid, DIALOG_Zombies, DIALOG_STYLE_MSGBOX, "{FF0000}Zombies", "*Pueden morder\n*Pueden correr rapido\n*Ganan mas dinero\n", "OK", "Salir");
}
}
}
return 1;
}

//--------------------------- 2 pag de comandos ---------------------------

if(dialogid == DComando)
{
if(response == 1)
{
new string[1024];
//strcat(string, "/Dardinero - Para darle dinero a otro jugador.\n");
strcat(string, "/nombre - Cambiar tu nombre.\n");
strcat(string, "/cambiarclave - Cambiar la contraseña de tu cuenta.\n");
strcat(string, "/stats - Para ver tus stats.\n");
//strcat(string, "/Armas - Para comprar armas.\n");
//strcat(string, "/Items - Para abrir el menu de items que puedes comprar.\n");
//strcat(string, "/ir - Para teletransportarte a un jugador.\n");
//strcat(string, "/bloquear - Para impedir que se teletransporten hacia ti.\n");
//strcat(string, "/desbloquear - Para permitir que se teletransporten hacia ti.\n");
//strcat(string, "/laseron - Para activar el laser de las armas.\n");
//strcat(string, "/lasercol [color] - Para cambiar color del laser (blue|green|red|marron|red|pink)\n");
//strcat(string, "/laseroff - Para desactivar el laser de tu arma.\n");
//strcat(string, "/desbug - Para desbuguearte.\n");
//strcat(string, "/afk - Para entrar en modo AFK.\n");
//strcat(string, "/salirafk - Para salir del modo AFK.\n");
//strcat(string, "/afklist - Para ver la lista de jugadores en AFK.\n");
//strcat(string, "/admins - Para ver la lista de admins conectados..\n");
//strcat(string, "/Listavip - Para ver la lista de VIPs.");
ShowPlayerDialog(playerid, DComando2, DIALOG_STYLE_MSGBOX, "{FF0000}War Blood {FFFFFF}| Comandos", string, "OK", "");
}
}
//---------------------------
/*if(dialogid == DComando)
{
if(response == 1)
{
ShowPlayerDialog(playerid, DComando2, DIALOG_STYLE_MSGBOX, "{FF0000}War Blood {FFFFFF}| Comandos", "/Autos - Para ver la lista de autos que puedes comprar.\n/Dardinero - Para darle dinero a otro jugador.\n/pm id mensaje - Para mandar un mensaje privado a otro jugador.", "OK", "");
}
}*/

//-------------autostuning
if(dialogid == AutosTuning)
    {
        if(response)
        {
            if(listitem == 0)
            {
            if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X21,Float:Y21,Float:Z21,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X21,Y21,Z21); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(560,X21,Y21,Z21,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); 	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);
			AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
		    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
		    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"Estas en un vehiculo!");
		    }
		    if(listitem == 1)
		    {
		    if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        	LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); 	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
	    	AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
	    	AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,1);
	   		SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = LVehicleIDt;
			}
			}
			if(listitem == 2)
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
        	LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); 	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
	    	AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,2);
	   		SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = LVehicleIDt;
			}
			}
			if(listitem == 3)
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(559,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
	    	AddVehicleComponent(carid,1065);    AddVehicleComponent(carid,1067);    AddVehicleComponent(carid,1162); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073);	ChangeVehiclePaintjob(carid,1);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			if(listitem == 4)
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(565,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
		    AddVehicleComponent(carid,1046); AddVehicleComponent(carid,1049); AddVehicleComponent(carid,1053); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			if(listitem == 5)
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
	    	AddVehicleComponent(carid,1088); AddVehicleComponent(carid,1092); AddVehicleComponent(carid,1139); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
	 	   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			if(listitem == 6)
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(561,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
	    	AddVehicleComponent(carid,1055); AddVehicleComponent(carid,1058); AddVehicleComponent(carid,1064); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			if(listitem == 7)
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
		    AddVehicleComponent(carid,1034); AddVehicleComponent(carid,1038); AddVehicleComponent(carid,1147); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,1);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			if(listitem == 8)
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(567,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
		    AddVehicleComponent(carid,1102); AddVehicleComponent(carid,1129); AddVehicleComponent(carid,1133); AddVehicleComponent(carid,1186); AddVehicleComponent(carid,1188); ChangeVehiclePaintjob(carid,1); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1085); AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1086);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			if(listitem == 9)
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
	   		AddVehicleComponent(carid,1092); AddVehicleComponent(carid,1166); AddVehicleComponent(carid,1165); AddVehicleComponent(carid,1090);
		    AddVehicleComponent(carid,1094); AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1163);//SPOILER
		    AddVehicleComponent(carid,1091); ChangeVehiclePaintjob(carid,2);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			if(listitem == 10)
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(557,X,Y,Z,Angle,1,1,-1);	PutPlayerInVehicle(playerid,carid,0);
			AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1081);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			if(listitem == 11)
			{
			if(IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid,red,"Apareciste un vehiculo");
			} else  {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(535,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
			ChangeVehiclePaintjob(carid,1); AddVehicleComponent(carid,1109); AddVehicleComponent(carid,1115); AddVehicleComponent(carid,1117); AddVehicleComponent(carid,1073); AddVehicleComponent(carid,1010);
		    AddVehicleComponent(carid,1087); AddVehicleComponent(carid,1114); AddVehicleComponent(carid,1081); AddVehicleComponent(carid,1119); AddVehicleComponent(carid,1121);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}

			}
			if(listitem == 12)
			{
			if(IsPlayerInAnyVehicle(playerid)) SendClientMessage(playerid,red,"Apareciste un vehiculo");
			else {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,carid;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        carid = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,carid,0);
	  		AddVehicleComponent(carid,1034); AddVehicleComponent(carid,1038); AddVehicleComponent(carid,1147);
			AddVehicleComponent(carid,1010); AddVehicleComponent(carid,1073); ChangeVehiclePaintjob(carid,0);
		   	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			PlayerInfo[playerid][pCar] = carid;
			}
			}
		}
		return 1;
	}
//-------------------
	
	if(dialogid == 9048)
{
	if(response == 1)
 {
    if (PlayerInfo[playerid][LoggedIn] == 1) return SendClientMessage(playerid,red,"Servidor Usted ya está conectado");
    if (!udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid,red,"Servidor La cuenta no existe, por favor, utilice '/register [contraseña]'.");
    if (strlen(inputtext)==0) return ShowPlayerDialog(playerid, 9048, DIALOG_STYLE_INPUT, "{FFFFFF}Panel De Logueo", "{FFFFFF}Tu cuenta esta registrada en nuestra base de datos, porfavor ingresa tu contraseña:", "Login", "Cancelar");
    if (udb_CheckLogin(PlayerName2(playerid),inputtext))
	{
	   	format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(playerid)) );
   		GetPlayerIp(playerid,tmp3,100);
	   	dini_Set(file,"ip",tmp3);
		LoginPlayer(playerid);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		HideMenuLogin(playerid);
		if(PlayerInfo[playerid][Level] > 0) {
			format(string2,sizeof(string2),"* Logueado correctamente *", PlayerInfo[playerid][Level] );
			return SendClientMessage(playerid,red,string2);
       	} else return SendClientMessage(playerid,red,"* Logueado correctamente *");
	}
	else {
		PlayerInfo[playerid][FailLogin]++;
		printf("LOGIN: %s has failed to login, Wrong password (%s) Attempt (%d)", PlayerName2(playerid), inputtext, PlayerInfo[playerid][FailLogin] );
		if(PlayerInfo[playerid][FailLogin] == MAX_FAIL_LOGINS)
		{
	 		format(string2, sizeof(string2), "%s Has sido expulsado (Logins incorrectos)", PlayerName2(playerid) );
			SendClientMessageToAll(grey, string2);
			print(string2);
			Kick(playerid);
		}
		return ShowPlayerDialog(playerid, 9048, DIALOG_STYLE_INPUT, "{FFFFFF}Panel De Logueo", "{FF0000}Servidor Contraseña incorrecta.\n{FFFFFF}Tu cuenta esta registrada en nuestra base de datos, porfavor ingresa tu contraseña:", "Login", "Cancelar");
	}
		}
		if(response == 0)
			{}
}
if(dialogid == 9049)
{
	if(response == 1)
		{
    if (PlayerInfo[playerid][LoggedIn] == 1) return SendClientMessage(playerid,red,"Servidor Usted ya está registrado y conectado.");
    if (udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid,red,"Servidor Esta cuenta ya existe, por favor, utilice '/ login [contraseña]'.");
    if (strlen(inputtext) == 0) return ShowPlayerDialog(playerid, 9049, DIALOG_STYLE_INPUT, "{FF0000}Panel De Registro", "{FFFFFF}Necesitas registrar tu cuenta en nuestra base de datos para ingresar.\nEscribe la contraseña que deseas usar para tu cuenta:", "Registrar", "Cancelar");
    if (strlen(inputtext) < 4 || strlen(inputtext) > 20) return ShowPlayerDialog(playerid, 9049, DIALOG_STYLE_INPUT, "{FF0000}Panel De Registro", "{FF0000}La contraseña debe ser superior a 3 carácteres\n{FFFFFF}Escribe la contraseña que deseas usar para tu cuenta:", "Registrar", "Cancelar");
    if (udb_Create(PlayerName2(playerid),inputtext))
	{
    	new name[MAX_PLAYER_NAME];
    	new strdate[20], year,month,day;	getdate(year, month, day);
		GetPlayerName(playerid,name,sizeof(name)); format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(name));
     	GetPlayerIp(playerid,tmp3,100);	dini_Set(file,"ip",tmp3);
//    	dini_Set(file,"password",params);
	    dUserSetINT(PlayerName2(playerid)).("registered",1);
   		format(strdate, sizeof(strdate), "%d/%d/%d",day,month,year);
		dini_Set(file,"RegisteredDate",strdate);
		dUserSetINT(PlayerName2(playerid)).("loggedin",1);
		dUserSetINT(PlayerName2(playerid)).("banned",0);
		dUserSetINT(PlayerName2(playerid)).("level",0);
	    dUserSetINT(PlayerName2(playerid)).("LastOn",0);
    	dUserSetINT(PlayerName2(playerid)).("money",0);
    	dUserSetINT(PlayerName2(playerid)).("PUNTOS_PLAYER_2",0);
        dUserSetINT(PlayerName2(playerid)).("CONQUISTAS_PLAYER",0);
    	dUserSetINT(PlayerName2(playerid)).("RANGO_PLAYER",0);
		dUserSetINT(PlayerName2(playerid)).("LEERACTIVADO_PLAYER",0);
		dUserSetINT(PlayerName2(playerid)).("KILLS_PLAYER",0);

		dUserSetINT(PlayerName2(playerid)).("EXTASIS_PLAYER_2",0);
		dUserSetINT(PlayerName2(playerid)).("LSD_PLAYER_2",0);
		dUserSetINT(PlayerName2(playerid)).("FENTANILO_PLAYER_2",0);
		dUserSetINT(PlayerName2(playerid)).("GHB_PLAYER_2",0);
		dUserSetINT(PlayerName2(playerid)).("ALUCINOGENO_PLAYER",0);
		dUserSetINT(PlayerName2(playerid)).("HEROINA_PLAYER",0);
		dUserSetINT(PlayerName2(playerid)).("INHALANTES_PLAYER",0);
		dUserSetINT(PlayerName2(playerid)).("KETAMINA_PLAYER",0);
		dUserSetINT(PlayerName2(playerid)).("KHAT_PLAYER",0);
		dUserSetINT(PlayerName2(playerid)).("BONUS_PLAYER",0);
		dUserSetINT(PlayerName2(playerid)).("KRATOM_PLAYER",0);

		dUserSetINT(PlayerName2(playerid)).("MISION1_PLAYER",0);
		dUserSetINT(PlayerName2(playerid)).("MISION2_PLAYER",0);
    	dUserSetINT(PlayerName2(playerid)).("CLAN_TIENE",0);
    	dUserSetINT(PlayerName2(playerid)).("CLAN_TIENELIDER",0);
    	dUserSetINT(PlayerName2(playerid)).("CLAN_TIENEREP",0);
    	dUserSetINT(PlayerName2(playerid)).("EXTERMINADOR_TIENE",0);
    	dUserSetINT(PlayerName2(playerid)).("VIP_TIENE",0);
		dUserSetINT(PlayerName2(playerid)).("VIP_EXPIRATION",0);
    	//dUserSetINT(PlayerName2(playerid)).("Banka",0);
    	dUserSetINT(PlayerName2(playerid)).("kills",0);
	   	dUserSetINT(PlayerName2(playerid)).("deaths",0);
	   	dUserSetINT(PlayerName2(playerid)).("hours",0);
	   	dUserSetINT(PlayerName2(playerid)).("minutos",0);
	   	dUserSetINT(PlayerName2(playerid)).("seconds",0);
	   //	dUserSetINT(PlayerName2(playerid)).("banco",0);
	    PlayerInfo[playerid][LoggedIn] = 1;
	    PlayerInfo[playerid][Registered] = 1;
	    SendClientMessage(playerid, red, "Gracias por tu registro , disfruta de War Blood.");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		SavePlayer(playerid);
		return 1;
	}
    return 1;
    	}
		if(response == 0)
			{}
}
	
	/*if(dialogid == AutosRC)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	        if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(441,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0);
		    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"Estas en un vehiculo!");
		    }
		    if(listitem == 1)
	        {
	        if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(465,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0);
		    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"Estas en un vehiculo!");
		    }
		    if(listitem == 2)
	        {
	        if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(501,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0);
		    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"Estas en un vehiculo!");
		    }
		    if(listitem == 3)
	        {
	        if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(564,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0);
		    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"Estas en un vehiculo!");
		    }
		    if(listitem == 4)
	        {
	        if(!IsPlayerInAnyVehicle(playerid)) {
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;	GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	        LVehicleIDt = CreateVehicle(594,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0);
		    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
	   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
			return PlayerInfo[playerid][pCar] = LVehicleIDt;
			} else return SendClientMessage(playerid,red,"Estas en un vehiculo!");
		    }
		    }
		return 1;
	}*/
	if(dialogid == UNBAN)
	{
		if(response) {
		new iName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, iName, MAX_PLAYER_NAME);
		format(iytring,sizeof(iytring),"%s ha Unbaned(desbaneado) la '%s' Ip",iName,inputtext); SaveToFile("UnbanLog",iytring);
	 	format(str,sizeof(iytring),"unbanip %s",inputtext);
	 	SendRconCommand(str);
	 	SendRconCommand("reloadbans");
	 	SendClientMessageToAll(green,iytring);
	 	CMDMessageToPac0(playerid,"UNBAN");
	 	SendClientMessage(playerid,marron,"|- Comando Enviado! -|");
	 	}
		return 1;
  	}
  	
  	//------------------------------------ Duda
	if(dialogid == Dialog_Duda)
{
if(response == 0)
{
return 1;
}
else
{
if(strlen(inputtext))
{
new string[400];
new stringDuda[150+120];
new Nombre[MAX_PLAYER_NAME];
GetPlayerName(playerid, Nombre, sizeof(Nombre));

format(string, sizeof(string), ">[DUDA]<: %s [%d]: %s |Respondele por /pm|", Nombre,playerid,inputtext);

MessageToAdmins(Azul,stringDuda);

//printf("[Duda]: %s para Responderle usa /responder", string);

SendClientMessage(playerid, red, "Gracias por enviar tu Duda, Un Administrador te ayudara espera un Momento.");

DudaEnviada[playerid] = 1;
SetTimerEx("DudaEnviadaReset", 120000, false, "i", playerid);
return 1;
}
else
{
ShowPlayerDialog(playerid,Dialog_Duda,DIALOG_STYLE_INPUT,"Duda","Usted no intruducio su Duda! Por Favor escriba su Duda en el siguiente cuadro:","Enviar","Cancelar");
}
}
return 1;
}
if(dialogid == 4200 )
{
if(response)
{
if(listitem == 0)
{



for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://mediadownload.ynet.co.il/upl/525/586.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);

}
if(listitem == 1)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://dl.dropboxusercontent.com/s/rjob48onc0s1xr6/Linkin%20Park%20-%20Numb.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 2)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://a.tumblr.com/tumblr_mc06mtQ9V81qefr98o1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);


}
if(listitem == 3)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://cluGODiversity.net/sounds/David_Guetta_feat_Kid_CuDi_-_Memories.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 4)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://dl.dropboxusercontent.com/s/xszpmej740ln71y/Eminem%20-%20Love%20The%20Way%20You%20Lie%20ft.%20Rihanna.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}

if(listitem == 5)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://a.tumblr.com/tumblr_m2q775tCra1qf283wo1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 6)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i, "http://dl.dropboxusercontent.com/s/yqalvtnlq87sofs/Good%20Charlotte%20-%20We%20Belive.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}


if(listitem == 7)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://a.tumblr.com/tumblr_mj1n5gsWx61rf4x8zo1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 8)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://dl.dropboxusercontent.com/s/m1121mcz3owzd2y/R3hab%20%26%20VINAI%20-%20How%20We%20Party%20%28Official%20Music%20Video%29.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 9)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://a.tumblr.com/tumblr_mdmewuGdIQ1qzzktto1_r1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 10)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"https://dl.dropboxusercontent.com/s/752lppb1jtp2kvu/David%20Guetta%20-%20Shot%20Me%20Down%20ft.%20Skylar%20Grey.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}

if(listitem == 11)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://cfs.tistory.com/attach/6629/1249663742.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}

if(listitem == 12)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://a.tumblr.com/tumblr_mpay9mLXuc1s4sfago1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}

if(listitem == 13)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://a.tumblr.com/tumblr_meesj20fq91rhngoxo1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}

if(listitem == 14)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://a.tumblr.com/tumblr_lxxubwVtIq1qd64dmo1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}

if(listitem == 15)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://a.tumblr.com/tumblr_lx54mjZWbu1qjuatio1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}

if(listitem == 16)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://a.tumblr.com/tumblr_ngsqcdCjGg1tekv5xo1.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 17)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://k003.kiwi6.com/hotlink/x404r1w2l5/Madeon_-_Finale.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 18)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"http://k003.kiwi6.com/hotlink/nf4d7fip8m/Ylvis_-_The_Fox.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 19)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"https://dl.dropboxusercontent.com/s/zdoprmw4yp90u0q/Meg%20%26%20Dia%20-%20Monster%20%28DotEXE%20Dubstep%20Remix%29.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}
if(listitem == 20)
{

for(new i=0; i<MAX_PLAYERS; i++) PlayAudioStreamForPlayer(i,"https://dl.dropboxusercontent.com/s/yps7m8im7we1ht3/Zomboy%20-%20City%202%20City.mp3");
new Nombre[MAX_PLAYERS];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
format(string2,sizeof(string2),"{FFFF00}El Administrador {FFFFFF}%s {FFFF00}Ha Colocado Una Cancion,Si Quieres Detener La Musica Usa {FFFFFF}/Stop",Nombre);
return SendClientMessageToAll(red, string2);
}


}
return 1;
}
//return 0;
if(dialogid == NMusica2)
{
if(response)
{
PlayAudioStreamForPlayer(playerid, inputtext);
}
return 1;
}
//--------
if(dialogid == NMusica)
{
if(response)
{
new Nombre[MAX_PLAYERS];
new String[128];
GetPlayerName(playerid, Nombre, sizeof(Nombre));
CMDMessageToPac0(playerid,"CANCION");
//Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener
format(String, sizeof(String),"{FFFF00}El Administrador {FFFFFF}'%s'{FFFF00}Colocara La Musica {FFFFFF}|%s|.",Nombre, inputtext);
SendClientMessageToAll(0x00FF00FF,String);
format(String, sizeof(String),"{FFFF00}Si Quieres Detener La Musica Usa {FFFFFF}/Mdetener");
SendClientMessageToAll(0x00FF00FF,String);
ShowPlayerDialog(playerid,Musica,DIALOG_STYLE_INPUT,"-Musica- Colocar el link","Ahora tienes que colocar el link de la cancion en el siguiente recuadro","Poner","Cancelar");
}
return 1;
}
if(dialogid == Musica)
{
if(response)
{
ReproducirCancionParaTodos(inputtext);
}
return 1;
}
    return 1;
}



#if defined ENABLE_SPEC




public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	new x = 0;
	while(x!=MAX_PLAYERS) {
	    if( IsPlayerConnected(x) &&	GetPlayerState(x) == PLAYER_STATE_SPECTATING &&
			PlayerInfo[x][SpecID] == playerid && PlayerInfo[x][SpecType] == ADMIN_SPEC_TYPE_PLAYER )
   		{
   		    SetPlayerInterior(x,newinteriorid);
		}
		x++;
	}
}
//==============================================================================
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger) {
	for(new x=0; x<MAX_PLAYERS; x++) {
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid) {
	        TogglePlayerSpectating(x, 1);
	        PlayerSpectateVehicle(x, vehicleid);
	        PlayerInfo[x][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
		}
	}
	return 1;
}
#endif
//==============================================================================
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{

	//format(string2, sizeof(string2), "Teclas presionadas = %d", newkeys);
	//SendClientMessage(playerid, 0xFFFFFF, string2);

	if(newkeys & KEY_FIRE){
	if(gTeam[playerid] == TEAM_ZOMBIES)
	{
	new Float:x2; new Float:y2; new Float:z2;
	GetPlayerPos(playerid,x2,y2,z2);
	for(new issuerid=0;issuerid<MAX_PLAYERS;issuerid++)
	{
	if(IsPlayerInRangeOfPoint(issuerid,2, x2, y2, z2) && gTeam[issuerid] == NO_TEAM || IsPlayerInRangeOfPoint(issuerid,2, x2, y2, z2) && gTeam[issuerid] == TEAM_EXTERMINADOR || IsPlayerInRangeOfPoint(issuerid,2, x2, y2, z2) && gTeam[issuerid] == TEAM_CENTINELAS)         //  click derecho infeccion
	 		{
    		if(InfeccionEnprogreso[issuerid]==0 && !IsPlayerInAnyVehicle(issuerid))
				{
				new Float:Health;
				GetPlayerHealth(issuerid,Health);					
				SetPlayerHealth(issuerid,Health-10);
	 			Infectar(issuerid,playerid);				
	 			}
        	}
	 	}
    }
    }

	/*if (HOLDING(KEY_HANDBRAKE))
	{

	if(gTeam[playerid] == TEAM_ZOMBIES)
	{
	for(new i = 0; i < MAX_PLAYERS; i++)
			    {
			        if(gTeam[i] == NO_TEAM || gTeam[i] == TEAM_EXTERMINADOR || gTeam[i] == TEAM_CENTINELAS)
			        {

						    new Float: POSJ[3];
						    GetPlayerPos(i,POSJ[0],POSJ[1],POSJ[2]);
						    if(IsPlayerInRangeOfPoint(playerid,2.0,POSJ[0],POSJ[1],POSJ[2]))
						    {
								new Float:Health;
								GetPlayerHealth(i,Health);
								SetPlayerHealth(i,Health-10);
  								ApplyAnimation(playerid, "CHOPPA", "CHOPPA_fwd", 4.0, 0, 0, 0, 0, 0, 1);    //animacion de mordida
  								ApplyAnimation(i, "ped", "DAM_armL_frmFT", 2.6, 0, 1, 1, 0, 0, 1);    //animacion de mordido
  								PlayerPlaySound(playerid,1136,0.0,0.0,0.0);     //sonido de mordida
  								PlayerPlaySound(i,1136,0.0,0.0,0.0);      //sonido de dordido
							}
						}
					}
					}

					}*/


	//////////////////////////////////////////
	if(PRESSED(KEY_JUMP))
 	{
 	    if(gTeam[playerid] == TEAM_ZOMBIES)
 	    {
  			if(CLASEZ[playerid] == 3)  //jumper
  			{
  			  //  if(gettime() - 6 < Abilitys[playerid][HighJumpZombie]) return GameTextForPlayer(playerid,"~w~ Recuperando",1000,5);
  			    //{
					new Float:x,Float:y,Float:z;
					GetPlayerVelocity(playerid,Float:x,Float:y,Float:z);
   					SetPlayerVelocity(playerid,Float:x,Float:y*0.5,Float:z+1*12); // Z velocidad frente y altura y x iz
					Abilitys[playerid][HighJumpZombie] = gettime();
				//}
			}
		}
	}
	/////////////////////////////////////////
	if(PRESSED(KEY_WALK))
 	{
 	    if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_EXTERMINADOR || gTeam[playerid] == TEAM_CENTINELAS)
 	    {
  			if(CLASEH[playerid] == 1)  //medico
  			{
  			    new victimid = GetClosestPlayer(playerid);
	       		if(IsPlayerConnected(victimid))
				{
     				
							if(GetDistanceBetweenPlayers(playerid,victimid) < 10.0)
							{
		    					if(InfeccionEnprogreso[victimid] == 1)
								{
                                    new Nombre[MAX_PLAYERS];
									GetPlayerName(playerid, Nombre, sizeof(Nombre));
									format(string2,sizeof(string2),"%s Ha Curado a un infectado!",Nombre);
									SendClientMessageToAll(green, string2);
							//		TextDrawShowForPlayer(victimid, Textdraw0);
							//		TextDrawHideForPlayer(victimid, Textdraw2);
									InfeccionEnprogreso[victimid]=0;
									
									SetPlayerHealth(victimid,100.0);
									KillTimer(VidaTimer[victimid]);
                        			for(new i=0; i<19; i++) TextDrawHideForPlayer(victimid,HealthBar[i]);
									//GivePlayerXP(playerid,20);
								}
								else return SendClientMessage(playerid, red, "Ningun Infectado Cerca!");
							}
						}


			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_EXTERMINADOR || gTeam[playerid] == TEAM_CENTINELAS)
	    {
	        if(CLASEH[playerid] == 4)
	        {
			    new Float:x,Float:y,Float:z,Float:Angle;
			    GetPlayerPos(playerid,Float:x,Float:y,Float:z);
				GetPlayerFacingAngle(playerid,Float:Angle);

				new targetid = GetClosestPlayer(playerid);
					if(gTeam[targetid] == TEAM_ZOMBIES)
					{
                    	if (CuraSc[playerid] >= 1)
							{
							if(GetDistanceBetweenPlayers(playerid,targetid) <= 6.0)
							{
							
								GetClosestPlayer(targetid);
								GetPlayerFacingAngle(targetid,Float:Angle);
								GetPlayerVelocity(targetid,Float:x,Float:y,Float:z);
								//GivePlayerXP(playerid, 500);
                                new Nombre[MAX_PLAYERS];
									GetPlayerName(playerid, Nombre, sizeof(Nombre));
									new Nombre2[MAX_PLAYERS];
									GetPlayerName(targetid, Nombre2, sizeof(Nombre2));
								new string[128], string3[128], revivedstring[128];
								HumanSetup(targetid);
								PlayerInfo[playerid][Kills]+=200;

								//SetPlayerPos(targetid,Float:x,Float:y,Float:z);
								//SetPlayerFacingAngle(targetid,Float:Angle);

								CuraSc[playerid] -= 1;

								format(string,sizeof(string)," Has revivido a %s",Nombre2);
								SendClientMessage(playerid,green,string);

								format(string3,sizeof(string3)," Fuiste revivido por  %s",Nombre);
								SendClientMessage(targetid,green,string3);

								format(revivedstring,sizeof(revivedstring), "%s ha sido revivido por %s",Nombre2,Nombre);
								SendClientMessageToAll(red, revivedstring);
							
							}
							else return SendClientMessage(playerid, red, "Se te acabaron los antidotos!");
						}
					}
				}
			}
		}

	/////////////////////////////////////////
		if(PRESSED(KEY_WALK))
	{
		if(gTeam[playerid] == TEAM_ZOMBIES)
	    {
			if(CLASEZ[playerid] == 4)  //boomer
			{

				    new Float:x,Float:y,Float:z;
			        GetPlayerPos(playerid,Float:x,Float:y,Float:z);
			        SetPlayerHealth(playerid,0.0);
			        CreateExplosion(Float:x,Float:y,Float:z,0,6.0);
			        for(new i = 0; i < MAX_PLAYERS; i++)
					{
			            GetClosestPlayer(i);
			            if(gTeam[i] == NO_TEAM || gTeam[i] == TEAM_EXTERMINADOR || gTeam[i] == TEAM_CENTINELAS)
						{
				                    if(IsPlayerInRangeOfPoint(i,7.0,Float:x,Float:y,Float:z))
									{
										if(InfeccionEnprogreso[i] == 0)
										{
          										
                                                InfeccionEnprogreso[i]=1;
                                                VidaTimer[i]=SetTimerEx("VidaBajando", 1000,0,"d",i);
												TextDrawShowForPlayer(i,HealthBar[0]);
												SetPlayerDrunkLevel (i, 200);
                        						//SendClientMessage(playerid,COLOR_RED,"Inefectado con el virus T.");
                        						//GameTextForPlayer(i, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~r~Infectado", 10000, 6);
                                                GameTextForPlayer(i, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~r~Infectado", 3000, 5);
												//InfectPlayerStandard(i);
											}
										}
				                    }
								}
			                }
			            }
			        }





	
	if(PRESSED(KEY_WALK))
	{
	    if(gTeam[playerid] == TEAM_ZOMBIES)
	    {
			if(CLASEZ[playerid] == 1)  //stomper
			{
              //  if(gettime() - 6 < Abilitys[playerid][StomperPushing]) return GameTextForPlayer(playerid,"~w~ Recuperandome.",1000,5);
			 //   {
			        new Float:x,Float:y,Float:z,Float:Angle;
			        GetPlayerPos(playerid,Float:x,Float:y,Float:z);
			        GetPlayerFacingAngle(playerid,Float:Angle);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
					if(gTeam[i] == NO_TEAM || gTeam[i] == TEAM_EXTERMINADOR || gTeam[i] == TEAM_CENTINELAS)
	    				{
                        	    if(GetDistanceBetweenPlayers(playerid,i) < 6.0)
                        	    {
                        	        new Float:Health;
									
							    	GetClosestPlayer(i);
									GetPlayerFacingAngle(i,Float:Angle);
									GetPlayerVelocity(i,Float:x,Float:y,Float:z);
									SetPlayerVelocity(i,Float:x+0.3,Float:y+0.3,Float:z+0.2);
									SetPlayerFacingAngle(i,Float:Angle);
									GetPlayerHealth(i,Health);
									SetPlayerHealth(i,Health-25);
									//GivePlayerXP(playerid,20);
									Abilitys[playerid][StomperPushing] = gettime();
								}
							}
					}
				//	}
			}
		}
	}
	
	return 1;
}

	/*forward CerrarBase();
	public CerrarBase()
	{
		MoveObject(puertadebaseuno,1303.02, -2054.10, 58.20,1);
		MoveObject(puertadebasedos,1303.00, -2059.58, 58.20,1);
		AbriendoBase=0;
		KillTimer(BaseTimer);
		return 1;
	}
	
	forward CerrarBase2();
	public CerrarBase2()
	{
		MoveObject(puertadebasetres,2720.30371, -2405.40723, 14.16761,1);
		//MoveObject(puertadebasedos,1303.00, -2059.58, 58.20,1);
		AbriendoBase=0;
		KillTimer(BaseTimer);
		return 1;
	}
	
	forward CerrarBase3();
	public CerrarBase3()
	{
		MoveObject(puertadebasecuatro,216.03259, 1875.29700, 13.82780,1);
		MoveObject(puertadebasecinco,211.93752, 1875.32996, 13.83057,1);
		AbriendoBase=0;
		KillTimer(BaseTimer);
		return 1;
	}
	
	forward CerrarBase4();
	public CerrarBase4()
	{
		MoveObject(puertadebaseseis,1611.90771, -1858.46082, 12.18859,1);
		AbriendoBase=0;
		KillTimer(BaseTimer);
		return 1;
	}*/
	
	//-------------------------------zombie npc
	
/*	public ZombiesUpdate()
{
    RotModel += 20;
    if(RotModel > 180) RotModel = -180;
    TextDrawSetPreviewRot(PreviewModel, 0.0, 0.0, RotModel, 1.0);
    TextDrawSetPreviewModel(PreviewModel, SkinsNPC[random(sizeof(SkinsNPC))][0]);
	for(new I = 0; I < MAX_PLAYERS; I++)
	{
     	if(OnRequest[I] == 0) TextDrawShowForPlayer(I, PreviewModel);
	    //if(Player[I][Logado] == false) //(GetPlayerTeam(Player[I]) == 1) //posible bug valor original: true
	    if(gTeam[I] == NO_TEAM) //(GetPlayerTeam(Player[I]) == 1) //posible bug valor original: true
	    {
 			new Float:X, Float:Y, Float:Z;
 			UpdatePlayerStatus(I);
	   		for(new N = 0; N < MAX_ZOMBIES; N++)
	   		{
  				FCNPC_GetPosition(Zombie[N][zID], Zombie[N][zX], Zombie[N][zY], Zombie[N][zZ]);
  				new Float:zDistance = GetDistanceToPoint(I, Zombie[N][zX], Zombie[N][zY], Zombie[N][zZ]);
  				GetPlayerPos(I, X, Y, Z);
  				new zombie_range = (PlayerInfo[I][pVisivel] + PlayerInfo[I][pBarulho]) * 7;
  				if(zombie_range < 10) zombie_range = 10;
  				//if(gTeam[playerid] == NO_TEAM);
  				if(zDistance > 1.5 && zDistance <= zombie_range && IsSpawnedZombie(N))
  				{
  				    //new playerid;  //agregado
  				    //if(Player[I][PlaySound] == 0) Player[I][PlaySound] = 1, PlayAudioStreamForPlayer(I, "http://sound.tssabr.org/sounds/Zombie.mp3");
  				    //if(gTeam[playerid] == NO_TEAM)  // agregada condicion
					if(Zombie[N][Fallowing] == -1)
  			    	{
      					FCNPC_GoTo(Zombie[N][zID], X, Y, Z, MOVE_TYPE_RUN, 1.0, true);
      					Zombie[N][Fallowing] = I;
					}
					else if(Zombie[N][Fallowing] != -1)
					{
				    	if(Zombie[N][Fallowing] == I) FCNPC_GoTo(Zombie[N][zID], X, Y, Z, MOVE_TYPE_RUN, 50.0, true);
					}
					else Zombie[N][Fallowing] = -1;
					//
					new Float:fX, Float:fY, Float:fZ;
  			    	fX = Zombie[N][zX], fY = Zombie[N][zY];
  			    	GetXYInFrontOfZombie(Zombie[N][zID], fX, fY, 5.0);
  			    	MapAndreas_FindZ_For2DCoord(fX, fY, fZ);
                    if(Z - 2.0 > Zombie[N][zZ] && Zombie[N][Fallowing] == I)
					{
					    if(zDistance >= 10.0)
						{
							MapAndreas_FindZ_For2DCoord(Zombie[N][zX], Zombie[N][zY], Z);
							Z += 1.0;
							FCNPC_GoTo(Zombie[N][zID], X, Y, Z, MOVE_TYPE_RUN, 1.0, true);
						}
						if(Z - 1.0 > Zombie[N][zZ] && zDistance < 10.0) FCNPC_Stop(Zombie[N][zID]);
					}
					if(fZ - 3.0 > Zombie[N][zZ]) FCNPC_Stop(Zombie[N][zID]);
                    //
				}
				if(zDistance <= 1.5 && Zombie[N][Fallowing] == I) { Zombie[N][Attacking] = I; FCNPC_AimAt(Zombie[N][zID], X, Y, Z, 0); FCNPC_MeleeAttack(Zombie[N][zID], 100); }
				else if(Zombie[N][Fallowing] == I) { Zombie[N][Attacking] = -1; FCNPC_StopAim(Zombie[N][zID]); FCNPC_StopAttack(Zombie[N][zID]); }
                if(zDistance > 150 && Zombie[N][pID] == I)  PlayerInfo[I][tSpawnZ] = 30;
				if(zDistance > 250 && Zombie[N][pID] == I) ReconnecZombie(N);
				//if(zDistance > 50 && Zombie[N][Fallowing] == I) Player[I][PlaySound] = 0; StopAudioStreamForPlayer(I);   //posible bug de audio
			}
		}
	}
    return 1;
}

public MilitarsUpdate()
{
    new Float:pX, Float:pY, Float:pZ;
d
		{
		    for(new I = 0; I < MAX_MILITARES; I++)
			{
	    		if(IsPlayerInRangeOfPoint(P, 13.0, MilitarPositions[I][0], MilitarPositions[I][1], MilitarPositions[I][2]) && !IsPlayerNPC(P) && GetPlayerSkin(P) != 287 && !FCNPC_IsDead(Militar[I][ID]))
		    	{
		    	    GetPlayerPos(P, pX, pY, pZ);
		    	    Militar[I][Aim] = P;
		    	    FCNPC_AimAt(Militar[I][ID], pX, pY, pZ, 1);
                    CreateDamageToPlayer(P, 15.0, 31);
				}
				else if(Militar[I][Aim] == P) FCNPC_StopAim(Militar[I][ID]), Militar[I][Aim] = -1;
			}
		}
	}
	TZombieRequest--;
	if(TZombieRequest == 0)
	{
		FCNPC_Spawn(ZombieRequest, SkinsNPC[random(sizeof(SkinsNPC))][0], -2808.1440,1160.9403,20.3125);
		FCNPC_SetAngle(ZombieRequest, 158.0304);
	}
    return 1;
}*/

/*UpdatePlayerStatus(playerid)
{*/
	/*
	IDLE_STANCE = Player parado (de pé)
	RUN_PLAYER = Ambas corridas
	JUMP_GLIDE = Pulo (no ar)
	JUMP_LAND = Pulo e continuar andando
	WEAPON_CROUCH = Agachado
	GUNCROUCHFWD = Andando agachado / parou e continua
	*/
	/*new Lib[32];
	new Name[32];
	new pSpd = GetPlayerSpeed(playerid);
	new playerState = GetPlayerState(playerid);
	GetAnimationName(GetPlayerAnimationIndex(playerid), Lib, 32, Name, 32);
	if(strcmp("IDLE_STANCE", Name, true) == 0 && playerState == PLAYER_STATE_ONFOOT) PlayerInfo[playerid][pVisivel] = 2, PlayerInfo[playerid][pBarulho] = 0;
	else if(strcmp("RUN_PLAYER", Name, true) == 0 || strcmp("JUMP_LAND", Name, true) == 0)
	{
	    if(pSpd > 10 && pSpd <= 17) PlayerInfo[playerid][pVisivel] = 2, PlayerInfo[playerid][pBarulho] = 2;
		else if(pSpd > 17) PlayerInfo[playerid][pVisivel] = 3, PlayerInfo[playerid][pBarulho] = 3;
		else PlayerInfo[playerid][pVisivel] = 2, PlayerInfo[playerid][pBarulho] = 1;
	}
	else if(strcmp("JUMP_GLIDE", Name, true) == 0) PlayerInfo[playerid][pVisivel] = 3, PlayerInfo[playerid][pBarulho] = 3;
	else if(strcmp("WEAPON_CROUCH", Name, true) == 0 || strcmp("GUNCROUCHFWD", Name, true) == 0) PlayerInfo[playerid][pVisivel] = 1, PlayerInfo[playerid][pBarulho] = 0;
	else
	{
		if(pSpd > 5) PlayerInfo[playerid][pVisivel] = 2, PlayerInfo[playerid][pBarulho] = 2;
		if(pSpd > 15) PlayerInfo[playerid][pVisivel] = 3, PlayerInfo[playerid][pBarulho] = 3;
	}
	if(playerState == PLAYER_STATE_DRIVER) PlayerInfo[playerid][pVisivel] = 3, PlayerInfo[playerid][pBarulho] = 3;
	if(playerState == PLAYER_STATE_PASSENGER) PlayerInfo[playerid][pVisivel] = 3, PlayerInfo[playerid][pBarulho] = 3;
	if(PlayerInfo[playerid][pBarulho] == 0)
	{
		//TextDrawHideForPlayer(playerid, pSomIndicador[0]);
		//TextDrawHideForPlayer(playerid, pSomIndicador[1]);
		//TextDrawHideForPlayer(playerid, pSomIndicador[2]);
	}
	if(PlayerInfo[playerid][pBarulho] == 1)
	{
		//TextDrawShowForPlayer(playerid, pSomIndicador[0]);
		//TextDrawHideForPlayer(playerid, pSomIndicador[1]);
		//TextDrawHideForPlayer(playerid, pSomIndicador[2]);
	}
	if(PlayerInfo[playerid][pBarulho] == 2)
	{
		//TextDrawShowForPlayer(playerid, pSomIndicador[0]);
		//TextDrawShowForPlayer(playerid, pSomIndicador[1]);
		//TextDrawHideForPlayer(playerid, pSomIndicador[2]);
	}
	if(PlayerInfo[playerid][pBarulho] >= 3)
	{
		//TextDrawShowForPlayer(playerid, pSomIndicador[0]);
		//TextDrawShowForPlayer(playerid, pSomIndicador[1]);
		//TextDrawShowForPlayer(playerid, pSomIndicador[2]);
	}
	if(PlayerInfo[playerid][pVisivel] == 0)
	{
		//TextDrawHideForPlayer(playerid, pZoiIndicador[0]);
	//	TextDrawHideForPlayer(playerid, pZoiIndicador[1]);
	//	TextDrawHideForPlayer(playerid, pZoiIndicador[2]);
	}
	if(PlayerInfo[playerid][pVisivel] == 1)
	{
	//	TextDrawShowForPlayer(playerid, pZoiIndicador[0]);
	//	TextDrawHideForPlayer(playerid, pZoiIndicador[1]);
	//	TextDrawHideForPlayer(playerid, pZoiIndicador[2]);
	}
	if(PlayerInfo[playerid][pVisivel] == 2)
	{
	//	TextDrawShowForPlayer(playerid, pZoiIndicador[0]);
	//	TextDrawShowForPlayer(playerid, pZoiIndicador[1]);
	//	TextDrawHideForPlayer(playerid, pZoiIndicador[2]);
	}
	if(PlayerInfo[playerid][pVisivel] >= 3)
	{
	//	TextDrawShowForPlayer(playerid, pZoiIndicador[0]);
	//	TextDrawShowForPlayer(playerid, pZoiIndicador[1]);
	//	TextDrawShowForPlayer(playerid, pZoiIndicador[2]);
	}
}*/
//==============================================================================
public OnPlayerStateChange(playerid, newstate, oldstate) {
//----------------tuning
    if(newstate == PLAYER_STATE_DRIVER) {
	    pvehicleid[playerid] = GetPlayerVehicleID(playerid);
	    pmodelid[playerid] = GetVehicleModel(pvehicleid[playerid]);
	}
	else {
	    pvehicleid[playerid] = 0;
	    pmodelid[playerid] = 0;
	}
//---------------
	switch(newstate) {
		case PLAYER_STATE_ONFOOT: {
			switch(oldstate) {
				case PLAYER_STATE_DRIVER: OnPlayerExitVehicle(playerid,255);
				case PLAYER_STATE_PASSENGER: OnPlayerExitVehicle(playerid,255);
			}
		}
	}
	
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
	if(gTeam[playerid] == TEAM_ZOMBIES)
	    {
     	//new LVehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(LVehicleID);
	    
	    
		RemovePlayerFromVehicle(playerid);
		SendClientMessage(playerid,red,"Los zombies no pueden manejar vehiculos.");
		}
	}
	
	/*if(newstate == PLAYER_STATE_DRIVER)
	{
	
	        for (new i = 0; i<13; i++)
	        {
	                GetPlayerWeaponData(playerid, i, PlayerWeapon[playerid][i], PlayerAmmo[playerid][i]);
	        }
	        ELOY9N_ResetPlayerWeapons(playerid);
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
	
	        for (new i = 0; i<13; i++)
	        {
	                GetPlayerWeaponData(playerid, i, PlayerWeapon[playerid][i], PlayerAmmo[playerid][i]);
	        }
	        ELOY9N_ResetPlayerWeapons(playerid);
	}*/
	
	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT)
	{
	
		if(gTeam[playerid] == TEAM_ZOMBIES) return 1;
	
	        for(new i=0;i<13;i++)
	        {
	                ELOY9N_GivePlayerWeapon(playerid,PlayerWeapon[playerid][i],PlayerAmmo[playerid][i]);
	        }
	}
	
	if(oldstate == PLAYER_STATE_PASSENGER && newstate == PLAYER_STATE_ONFOOT)
	{
	
		if(gTeam[playerid] == TEAM_ZOMBIES) return 1;
		
	        for(new i=0;i<13;i++)
	        {
	                ELOY9N_GivePlayerWeapon(playerid,PlayerWeapon[playerid][i],PlayerAmmo[playerid][i]);
	        }
	}
	return 1;
}


//==============================================================================
public OnPlayerExitVehicle(playerid, vehicleid)
{
	//if(PlayerInfo[playerid][DoorsLocked] == 1) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),playerid,false,false);

	#if defined ENABLE_SPEC
	for(new x=0; x<MAX_PLAYERS; x++) {
    	if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid && PlayerInfo[x][SpecType] == ADMIN_SPEC_TYPE_VEHICLE) {
        	TogglePlayerSpectating(x, 1);
	        PlayerSpectatePlayer(x, playerid);
    	    PlayerInfo[x][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
		}
	}
	#endif
	return 1;
}
//==============================================================================
#if defined ENABLE_SPEC

stock StartSpectate(playerid, specplayerid)
{
	for(new x=0; x<MAX_PLAYERS; x++) {
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid) {
	       AdvanceSpectate(x);
		}
	}
	SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));
	TogglePlayerSpectating(playerid, 1);
	
	if(IsPlayerInAnyVehicle(specplayerid)) {
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specplayerid));
		PlayerInfo[playerid][SpecID] = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else {
		PlayerSpectatePlayer(playerid, specplayerid);
		PlayerInfo[playerid][SpecID] = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
	}
//	new Float:hp, Float:ar;
//	GetPlayerName(specplayerid,string2,sizeof(string2));
//	GetPlayerHealth(specplayerid, hp);	GetPlayerArmour(specplayerid, ar);
	//format(string2,sizeof(string2),"~n~~n~~n~~n~~n~~n~~n~~n~~w~%s - id:%d~n~< sprint - jump >~n~hp:%0.1f ar:%0.1f $%d", string2,specplayerid,hp,ar,GetPlayerMoney(specplayerid) );
//	GameTextPlayer(playerid,string2,25000,3);
	return 1;
}

stock StopSpectate(playerid)
{
	TogglePlayerSpectating(playerid, 0);
	PlayerInfo[playerid][SpecID] = INVALID_PLAYER_ID;
	PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_NONE;
	//GameTextPlayer(playerid,"~n~~n~~n~~w~Spectate mode ended",1000,3);
	new rand = random(sizeof(RandomSpawnsHumano));
	SetPlayerPos(playerid, RandomSpawnsHumano[rand][0], RandomSpawnsHumano[rand][1], RandomSpawnsHumano[rand][2]);	
	return 1;
}
stock AdvanceSpectate(playerid)
{
    if(ConnectedPlayers() == 2) { StopSpectate(playerid); return 1; }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    for(new x=PlayerInfo[playerid][SpecID]+1; x<=MAX_PLAYERS; x++)
		{
	    	if(x == MAX_PLAYERS) x = 0;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}

stock ReverseSpectate(playerid)
{
    if(ConnectedPlayers() == 2) { StopSpectate(playerid); return 1; }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    for(new x=PlayerInfo[playerid][SpecID]-1; x>=0; x--)
		{
	    	if(x == 0) x = MAX_PLAYERS;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}
//---------------------------------------------

/*InitFly(playerid)
{
	OnFly[playerid] = false;
	return;
}

bool:StartFly(playerid)
{
	if(OnFly[playerid])
 	return false;
    OnFly[playerid] = true;
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	SetPlayerPos(playerid,x,y,z+5.0);
	ApplyAnimation(playerid,"PARACHUTE","PARA_steerR",6.1,1,1,1,1,0,1);
	Fly(playerid);
	GameTextForPlayer(playerid,"~y~Modo Vuelo~n~~r~Clic Izq ~w~- Subes~n~~r~Clic Derecho ~w~- Bajas~n~ ~r~Espacio ~w~- Rapido~n~~r~Alt Izq ~w~- Lento",10000,3);
	return true;
}

public Fly(playerid) {
	if(!IsPlayerConnected(playerid)) return 1; new k, ud,lr; GetPlayerKeys(playerid,k,ud,lr);
	new Float:v_x,Float:v_y,Float:v_z, Float:x,Float:y,Float:z; if(ud < 0) { GetPlayerCameraFrontVector(playerid,x,y,z); v_x = x+0.1; v_y = y+0.1; }
	if(k & 128) v_z = -0.2; else if(k & KEY_FIRE) v_z = 0.2; if(k & KEY_WALK) { v_x /=5.0; v_y /=5.0; v_z /=5.0; }
	if(k & KEY_SPRINT) { v_x *=4.0; v_y *=4.0; v_z *=4.0; }
	if(v_z == 0.0) v_z = 0.025; SetPlayerVelocity(playerid,v_x,v_y,v_z);
	if(v_x == 0 && v_y == 0) { if(GetPlayerAnimationIndex(playerid) == 959) ApplyAnimation(playerid,"PARACHUTE","PARA_steerR",6.1,1,1,1,1,0,1); } else { GetPlayerCameraFrontVector(playerid,v_x,v_y,v_z); GetPlayerCameraPos(playerid,x,y,z); SetPlayerLookAt(playerid,v_x*500.0+x,v_y*500.0+y); if(GetPlayerAnimationIndex(playerid) != 959) ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_Accel",6.1,1,1,1,1,0,1); }
	if(OnFly[playerid]) SetTimerEx("Fly",80,0,"i",playerid); return 1; }
	bool:StopFly(playerid) { if(!OnFly[playerid]) return false; new Float:x,Float:y,Float:z; GetPlayerPos(playerid,x,y,z); SetPlayerPos(playerid,x,y,z); OnFly[playerid] = false; return true; }
	static SetPlayerLookAt(playerid,Float:x,Float:y) { new Float:Px, Float:Py, Float: Pa; GetPlayerPos(playerid, Px, Py, Pa); Pa = floatabs(atan((y-Py)/(x-Px))); if (x <= Px && y >= Py) 		Pa = floatsub(180.0, Pa); else if (x < Px && y < Py) 		Pa = floatadd(Pa, 180.0); else if (x >= Px && y <= Py)	Pa = floatsub(360.0, Pa); Pa = floatsub(Pa, 90.0); if (Pa >= 360.0) Pa = floatsub(Pa, 360.0); SetPlayerFacingAngle(playerid, Pa); return; }
*/
//-------------------------------------------


forward PosAfterSpec(playerid);
public PosAfterSpec(playerid)
{
	SpawnPlayer(playerid);
}

#endif
//==============================================================================
EraseVehicle(vehicleid)
{
    for(new players=0;players<=MAX_PLAYERS;players++)
    {
        new Float:X,Float:Y,Float:Z;
        if (IsPlayerInVehicle(players,vehicleid))
        {
            GetPlayerPos(players,X,Y,Z);
            SetPlayerPos(players,X,Y,Z+2);
            SetVehicleToRespawn(vehicleid);
        }
        SetVehicleParamsForPlayer(vehicleid,players,0,1);
    }
    SetTimerEx("VehRes",3000,0,"d",vehicleid);
    return 1;
}

stock IsPlayerInWater(playerid) {
        new anim = GetPlayerAnimationIndex(playerid);
        if (((anim >=  1538) && (anim <= 1542)) || (anim == 1544) || (anim == 1250) || (anim == 1062)) return 1;
        return 0;
}

stock IsPlayerAiming(playerid) {
   new anim = GetPlayerAnimationIndex(playerid);
   if (((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) ||
   (anim == 1643) || (anim == 1453) || (anim == 220)) return 1;
        return 0;
}

forward CarSpawner(playerid,model);
public CarSpawner(playerid,model)
{
	if(IsPlayerInAnyVehicle(playerid)) SendClientMessage(playerid, red, "Usted ya tiene un coche");
 	else
	{
    	new Float:x, Float:y, Float:z, Float:angle;
	 	GetPlayerPos(playerid, x, y, z);
	 	GetPlayerFacingAngle(playerid, angle);
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
	    new vehicleid=CreateVehicle(model, x, y, z, angle, -1, -1, -1);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
		//ChangeVehicleColor(vehicleid,0,7);
        PlayerInfo[playerid][pCar] = vehicleid;
	}
	return 1;
}

forward CarDeleter(vehicleid);
public CarDeleter(vehicleid)
{
    for(new i=0;i<MAX_PLAYERS;i++) {
        new Float:X,Float:Y,Float:Z;
    	if(IsPlayerInVehicle(i, vehicleid)) {
    	    RemovePlayerFromVehicle(i);
    	    GetPlayerPos(i,X,Y,Z);
        	SetPlayerPos(i,X,Y+3,Z);
	    }
	    SetVehicleParamsForPlayer(vehicleid,i,0,1);
	}
    SetTimerEx("VehRes",1500,0,"i",vehicleid);
}

forward VehRes(vehicleid);
public VehRes(vehicleid)
{
    DestroyVehicle(vehicleid);
}

public OnVehicleSpawn(vehicleid)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
        if(vehicleid==PlayerInfo[i][pCar])
		{
		    CarDeleter(vehicleid);
	        PlayerInfo[i][pCar]=-1;
        }                                                                                                       
	}
	return 1;
}
//-----------zonas

//==============================================================================
forward TuneLCar(VehicleID);
public TuneLCar(VehicleID)
{
	ChangeVehicleColor(VehicleID,0,7);
	AddVehicleComponent(VehicleID, 1010);  AddVehicleComponent(VehicleID, 1087);
}

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
    if(checkpointid == Avirus || checkpointid == Avirus2 || checkpointid == Avirus3 || checkpointid == Avirus4) // Checks if the checkpointid equals to Checkpoint[0]
    {
        if((gTeam[playerid] == NO_TEAM) && !(InfeccionEnprogreso[playerid]==1)) return ShowTDN(playerid, 20000, "tu no necesitas ~n~~r~cura.");
        ShowPlayerDialog(playerid,ANTIVIRUS,DIALOG_STYLE_MSGBOX, "{FF0000}War Blood {FFFFFF}| Antidoto", "¿Quieres usar el Antidoto?", "Curar","Cancelar");
		/*SendClientMessageToAll(green, "¡Un zombie ha sido desinfectado!");
		gTeam[playerid]=255;
		OnRequest[playerid] = 0;
		SetPlayerTeam(playerid, gTeam[playerid]);
		SetPlayerColor(playerid, 0x218C07FF);
		SetPlayerSkin(playerid, skinsh[random(213)]);
		//Skins[playerid]=285;
		TextDrawShowForPlayer(playerid, Textdraw0);
		TextDrawHideForPlayer(playerid, Textdraw2);
		InfeccionEnprogreso[playerid]=0;
		DeletePlayer3DTextLabel(playerid,PlayerText3D:label);
		SetPlayerHealth(playerid,100.0);
		KillTimer(VidaTimer[playerid]);
		TextDrawHideForPlayer(playerid, VistaZombie0);
		TextDrawHideForPlayer(playerid, VistaZombie1);
		TextDrawHideForPlayer(playerid, VistaZombie2);
		TextDrawHideForPlayer(playerid, VistaZombie3);
		TextDrawHideForPlayer(playerid, VistaZombie4);
		TextDrawHideForPlayer(playerid, TextoComandosZombies);
		TextDrawShowForPlayer(playerid, TextoComandosHumanos);
		for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);*/
    }
  
    return 1;
}

	
public OnPlayerPickUpPickup(playerid, pickupid)
{

if(pickupid == Nemesis)
	{
if(gTeam[playerid] == TEAM_ZOMBIES)
{
if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{
		ShowPlayerDialog(playerid,DIALOG_TRANSFORMACION,DIALOG_STYLE_LIST,"{FFF000}Experimento 03H7","Transformacion {FF0000}[N]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
	}
	else{
		SendClientMessage(playerid,COLOR_RED,"[!] Necesitas ser zombie para usar este item");
	}
	}
	
	if(pickupid == Cura)
	{
if(gTeam[playerid] == NO_TEAM)
{
if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{
		ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPH,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Humanos","Virus {FF0000}[Z]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
	}
		
	

if(gTeam[playerid] == TEAM_ZOMBIES)
{
	if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{ 	
		ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPZ,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Zombies","Antidoto {FF0000}[Z]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
}
if(gTeam[playerid] == TEAM_EXTERMINADOR)
{
SendClientMessage(playerid,red,"Los Exterminadores no son bienvenidos aquí.");
return 1;
}
	}
	if(pickupid == CuraSD)
	{
if(PlayerInfo[playerid][CLAN_TIENE] != 1 )
{
	SendClientMessage(playerid,red,"No perteneces al CLAN SD.");
}
if(PlayerInfo[playerid][CLAN_TIENE] == 1 )		
{
if(gTeam[playerid] == NO_TEAM)
{
if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{
		ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPH,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Humanos","Virus {FF0000}[Z]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
	}
		


if(gTeam[playerid] == TEAM_ZOMBIES)
{
	if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{ 	
		ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPZ,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Zombies","Antidoto {FF0000}[Z]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
}

}
	}	
//CuraGOD
	if(pickupid == CuraGOD)
	{
if(PlayerInfo[playerid][CLAN_TIENE] != 4 )
{
	SendClientMessage(playerid,red,"No perteneces al CLAN GOD.");
}
if(PlayerInfo[playerid][CLAN_TIENE] == 4 )		
{
if(gTeam[playerid] == NO_TEAM)
{
if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{
		ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPH,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Humanos","Virus {FF0000}[Z]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
	}
		


if(gTeam[playerid] == TEAM_ZOMBIES)
{
	if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{ 	
		ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPZ,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Zombies","Antidoto {FF0000}[Z]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
}

}
	}
//MID
	if(pickupid == CuraMID)
	{
if(PlayerInfo[playerid][CLAN_TIENE] != 2 )
{
	SendClientMessage(playerid,red,"No perteneces al CLAN MID.");
}
if(PlayerInfo[playerid][CLAN_TIENE] == 2 )		
{
if(gTeam[playerid] == NO_TEAM)
{
if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{
		ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPH,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Humanos","Virus {FF0000}[Z]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
	}
		

if(gTeam[playerid] == TEAM_ZOMBIES)
{
	if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{ 	
		ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPZ,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Zombies","Antidoto {FF0000}[Z]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
}

}
	}	

//////

   if(pickupid == ArmasSWO)
	{

			if(PlayerInfo[playerid][CLAN_TIENE] != 3 )
			{
				SendClientMessage(playerid,red,"No perteneces al CLAN Swart On.");
			}
			if(PlayerInfo[playerid][CLAN_TIENE] == 3 )		
			{
			if(gTeam[playerid] == NO_TEAM)
			{
			if(UsarCMD[playerid] == 1)
				{
					GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
				}
				else
				{
					ShowPlayerDialog(playerid, DIALOG_ARMASCLANES, DIALOG_STYLE_LIST, "{FFF000}Equipo del clan", "{FFFFFF}Desert Eagle\n{FFFFFF}Escopeta\n{FFFFFF}Escopeta Recortada\n{FFFFFF}M4\n{FFFFFF}AK-47\n{FFFFFF}Sniper\n", "Seleccionar", "Salir");

					UsarCMD[playerid] = 1;
					SetTimerEx("Listo", 5000, false, "i", playerid);	
				}
			return 1;
				}			
			}
	}
  if(pickupid == ArmasSD)
	{

			if(PlayerInfo[playerid][CLAN_TIENE] != 1 )
			{
				SendClientMessage(playerid,red,"No perteneces al CLAN Samperos Deluxe.");
			}
			if(PlayerInfo[playerid][CLAN_TIENE] == 1 )		
			{
			if(gTeam[playerid] == NO_TEAM)
			{
			if(UsarCMD[playerid] == 1)
				{
					GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
				}
				else
				{
					ShowPlayerDialog(playerid, DIALOG_ARMASCLANES, DIALOG_STYLE_LIST, "{FFF000}Equipo del clan", "{FFFFFF}Desert Eagle\n{FFFFFF}Escopeta\n{FFFFFF}Escopeta Recortada\n{FFFFFF}M4\n{FFFFFF}AK-47\n{FFFFFF}Sniper\n", "Seleccionar", "Salir");
					UsarCMD[playerid] = 1;
					SetTimerEx("Listo", 5000, false, "i", playerid);	
				}
			return 1;
				}			
			}
	}

	  if(pickupid == ArmasGOD)
	{

			if(PlayerInfo[playerid][CLAN_TIENE] != 4 )
			{
				SendClientMessage(playerid,red,"No perteneces al CLAN GOD.");
			}
			if(PlayerInfo[playerid][CLAN_TIENE] == 4 )		
			{
			if(gTeam[playerid] == NO_TEAM)
			{
			if(UsarCMD[playerid] == 1)
				{
					GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
				}
				else
				{
					ShowPlayerDialog(playerid, DIALOG_ARMASCLANES, DIALOG_STYLE_LIST, "{FFF000}Equipo del clan", "{FFFFFF}Desert Eagle\n{FFFFFF}Escopeta\n{FFFFFF}Escopeta Recortada\n{FFFFFF}M4\n{FFFFFF}AK-47\n{FFFFFF}Sniper\n", "Seleccionar", "Salir");
					UsarCMD[playerid] = 1;
					SetTimerEx("Listo", 5000, false, "i", playerid);	
				}
			return 1;
				}			
			}
	}	
 if(pickupid == VidaHumanoPickup)
	{
			if(GetPlayerTeam(playerid) != NO_TEAM )
			{
				SendClientMessage(playerid,red,"No eres un humano.");
			}
			if(gTeam[playerid] == NO_TEAM)
			{
			if(UsarCMD[playerid] == 1)
				{
					GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
				}
				else
				{
					//ShowPlayerDialog(playerid,DIALOG_ARMASCLANES,DIALOG_STYLE_LIST,"{FFF000}Equipo del clan","{FFFFFF}Desert Eagle (munición) {FF0000}150\n{FFFFFF}Escopeta (munición) {FF0000}40\n{FFFFFF}M4 (munición) {FF0000}400\n","Seleccionar","Salir");
					SetPlayerHealth(playerid,100);
					SendClientMessage(playerid,green,"Sanaste todas tus heridas!.");
					UsarCMD[playerid] = 1;
					SetTimerEx("Listo", 5000, false, "i", playerid);	
				}
			return 1;
				}			
	}		



//
/////WE ARE ONE
	if(pickupid == CuraSWO)
	{
if(PlayerInfo[playerid][CLAN_TIENE] != 3 )
{
	SendClientMessage(playerid,red,"No perteneces al SWO.");
}
if(PlayerInfo[playerid][CLAN_TIENE] == 3 )		
{
if(gTeam[playerid] == NO_TEAM)
{
if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{
		ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPH,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Humanos","Virus {FF0000}[Z]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
	}
		

if(gTeam[playerid] == TEAM_ZOMBIES)
{
	if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{ 	
		ShowPlayerDialog(playerid,DIALOG_ITEMSSHOPZ,DIALOG_STYLE_LIST,"{FFF000}Lista de Items - Zombies","Antidoto {FF0000}[Z]","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
return 1;
}

}
	}

////
if(pickupid == PickupDTienda)
{
	if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_CENTINELAS || gTeam[playerid] == TEAM_EXTERMINADOR)
	{
//	ShowPlayerDialog(playerid, DTienda,DIALOG_STYLE_LIST,"{FFFFFF}Tienda","{FFFFFF}Botiquín {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $15.000 {FF0000}Uso: {FFFFFF}100 HP.\n{FFFFFF}Chaleco {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE AVANZADO {33FF33}Precio: $40.000.\nEscopetas Recortadas {33FFFF}RANGO REQUERIDO: {F3FF33}WARFRAME {33FF33}Precio: $100.000 {FF0000}Cantidad: {FFFFFF}200.","Seleccionar","Salir");
	
	if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{
		ShowPlayerDialog(playerid, DTienda,DIALOG_STYLE_LIST,"{FFFFFF}Tienda","{FFFFFF}Botiquín {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $15.000 {FF0000}Uso: {FFFFFF}100 HP.\n{FFFFFF}Chaleco {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE AVANZADO {33FF33}Precio: $40.000.\nEscopetas Recortadas {33FFFF}RANGO REQUERIDO: {F3FF33}WARFRAME {33FF33}Precio: $100.000 {FF0000}Cantidad: {FFFFFF}200.","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
	return 1;
	}
}

if(pickupid == PickupDAereo)
{
	if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_CENTINELAS || gTeam[playerid] == TEAM_EXTERMINADOR)
	{
//	ShowPlayerDialog(playerid, DTienda,DIALOG_STYLE_LIST,"{FFFFFF}Tienda","{FFFFFF}Botiquín {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $15.000 {FF0000}Uso: {FFFFFF}100 HP.\n{FFFFFF}Chaleco {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE AVANZADO {33FF33}Precio: $40.000.\nEscopetas Recortadas {33FFFF}RANGO REQUERIDO: {F3FF33}WARFRAME {33FF33}Precio: $100.000 {FF0000}Cantidad: {FFFFFF}200.","Seleccionar","Salir");
	
	if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{
		ShowPlayerDialog(playerid, DAereo,DIALOG_STYLE_LIST,"{FFFFFF}Tienda","{FFFFFF}Raindance {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE IV {33FF33}Precio: $500.000.\n{FFFFFF}Maverick {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE I {33FF33}Precio: $200.000.\nSeasparrow  {33FFFF}RANGO REQUERIDO: {F3FF33}WARFRAME {33FF33}Precio: $900.000.\nCargobob {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE II {33FF33}Precio: $250.000.","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
	return 1;
	}
}

if(pickupid == PickupDUniformes)
{
	if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_CENTINELAS || gTeam[playerid] == TEAM_EXTERMINADOR)
	{
//	ShowPlayerDialog(playerid, DTienda,DIALOG_STYLE_LIST,"{FFFFFF}Tienda","{FFFFFF}Botiquín {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE {33FF33}Precio: $15.000 {FF0000}Uso: {FFFFFF}100 HP.\n{FFFFFF}Chaleco {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE AVANZADO {33FF33}Precio: $40.000.\nEscopetas Recortadas {33FFFF}RANGO REQUERIDO: {F3FF33}WARFRAME {33FF33}Precio: $100.000 {FF0000}Cantidad: {FFFFFF}200.","Seleccionar","Salir");
	
	if(UsarCMD[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~r~Espera 5 segundos para volver a usar este item.",3500,4);
	}
	else
	{
		ShowPlayerDialog(playerid, DUniformes,DIALOG_STYLE_LIST,"{FFFFFF}Vestuario","{FFFFFF}Uniforme de - Fuerzas especiales S.W.A.T {33FFFF}RANGO REQUERIDO: {F3FF33}SUPERVIVIENTE EXPERTO.\n{FFFFFF}Uniforme de - Soldado {FF0000}(Solo aptos) {33FFFF}RANGO REQUERIDO: {F3FF33}SOLDADO.","Seleccionar","Salir");
		UsarCMD[playerid] = 1;
		SetTimerEx("Listo", 5000, false, "i", playerid);	
	}
	return 1;
	}
}
	if(pickupid == EXTERMINADOR1 || EXTERMINADOR2)
	{
		if((gTeam[playerid] == NO_TEAM) && !(InfeccionEnprogreso[playerid]==1)) return ShowTDN(playerid, 20000, "tu no necesitas ~n~~r~cura.");
		if(PlayerInfo[playerid][EXTERMINADOR_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer EXTERMINADOR corporatión para poder usar este pickup");
        SendClientMessageToAll(green, "¡Un zombie ha sido desinfectado!");
		gTeam[playerid]=255;
	//	OnRequest[playerid] = 0;
		SetPlayerTeam(playerid, gTeam[playerid]);
		SetPlayerColor(playerid, 0x218C07FF);
		SetPlayerSkin(playerid, skinsh[random(213)]);
		//Skins[playerid]=285;
	//	TextDrawShowForPlayer(playerid, Textdraw0);
	//	TextDrawHideForPlayer(playerid, Textdraw2);
		InfeccionEnprogreso[playerid]=0;
		
		SetPlayerHealth(playerid,100.0);
		KillTimer(VidaTimer[playerid]);
		TextDrawHideForPlayer(playerid, VistaZombie0);
		TextDrawHideForPlayer(playerid, VistaZombie1);
		TextDrawHideForPlayer(playerid, VistaZombie2);
		TextDrawHideForPlayer(playerid, VistaZombie3);
		TextDrawHideForPlayer(playerid, VistaZombie4);
		TextDrawHideForPlayer(playerid, TextoComandosZombies);
		TextDrawShowForPlayer(playerid, TextoComandosHumanos);
		for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
	}

	if(pickupid == infeccionEXTERMINADOR || pickupid == infeccionEXTERMINADOR2)
	{
		if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid, COLOR_RED, "Tu ya estas infectado");
        if(PlayerInfo[playerid][EXTERMINADOR_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer EXTERMINADOR corporatión para poder usar este pickup");

		ELOY9N_ResetPlayerWeapons(playerid);
		InfeccionEnprogreso[playerid]=0;
	
		SetPlayerHealth(playerid,100.0);
		SetPlayerArmour(playerid, 0);
		SendClientMessageToAll(red, "¡Un humano se ha convertido en zombie!");
		gTeam[playerid]=2;
		SetPlayerTeam(playerid, gTeam[playerid]);
		KillTimer(VidaTimer[playerid]);
		SetPlayerColor(playerid, 0x979797AA);
		SetPlayerSkin(playerid, skinsz[random(6)]);
		Skins[playerid]=134;
		SetPlayerHealth(playerid,100.0);
	//	TextDrawHideForPlayer(playerid, Textdraw0);
	//	TextDrawShowForPlayer(playerid, Textdraw2);
		//TextDrawShowForPlayer(playerid, VistaZombie0);
		//TextDrawShowForPlayer(playerid, VistaZombie1);
		//TextDrawShowForPlayer(playerid, VistaZombie2);
		//TextDrawShowForPlayer(playerid, VistaZombie3);
		//TextDrawShowForPlayer(playerid, VistaZombie4);
		TextDrawShowForPlayer(playerid, TextoComandosZombies);
		TextDrawHideForPlayer(playerid, TextoComandosHumanos);
		for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
	}

	if(pickupid == infeccionpickup || pickupid == infeccionpickup2)
	{
		if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid, COLOR_RED, "Tu ya estas infectado");

		ELOY9N_ResetPlayerWeapons(playerid);
		InfeccionEnprogreso[playerid]=0;
	
		SetPlayerHealth(playerid,100.0);
		SetPlayerArmour(playerid, 0);
		SendClientMessageToAll(red, "¡Un humano se ha convertido en zombie!");
		gTeam[playerid]=2;
		SetPlayerTeam(playerid, gTeam[playerid]);
		KillTimer(VidaTimer[playerid]);
		SetPlayerColor(playerid, 0x979797AA);
	if(Skin_Zombie[playerid] == 0)
	{
		SetPlayerSkin(playerid, skinsz[random(6)]);
	}
				else {
			SetPlayerSkin(playerid,Skin_Zombie[playerid]);
		}
		Skins[playerid]=134;
		SetPlayerHealth(playerid,100.0);
	//	TextDrawHideForPlayer(playerid, Textdraw0);
	//	TextDrawShowForPlayer(playerid, Textdraw2);
		//TextDrawShowForPlayer(playerid, VistaZombie0);
		//TextDrawShowForPlayer(playerid, VistaZombie1);
		//TextDrawShowForPlayer(playerid, VistaZombie2);
		//TextDrawShowForPlayer(playerid, VistaZombie3);
		//TextDrawShowForPlayer(playerid, VistaZombie4);
		TextDrawShowForPlayer(playerid, TextoComandosZombies);
		TextDrawHideForPlayer(playerid, TextoComandosHumanos);
		for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
	}
	
	if(pickupid == ArmasVenta || pickupid == ArmasVenta2)
	{
		if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid, COLOR_RED, "No puedes comprar armas");
    	else ShowPlayerDialog(playerid, DArmas,DIALOG_STYLE_LIST,"{0000FF}Armas","Silenciada($1000)\n9mm($1500)\nDesert Eagle($5000)\nEscopeta($3000)\nTec9($4000)\nMP5($4000)\nEscopeta de combate($5000)\nM4($7000)\nAK-47($7000)\nRifle($7000)\nGranadas($5000)\nMolotov($5000)\nLanza Misiles($100,000)","Seleccionar","Salir");
	}
    	if(pickupid == armasEXTERMINADOR || pickupid == armasEXTERMINADOR2)
	{
		if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid, COLOR_RED, "No puedes comprar armas");
        if(PlayerInfo[playerid][EXTERMINADOR_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer EXTERMINADOR corporatión para poder usar este pickup");
    	else ShowPlayerDialog(playerid, Larmas,DIALOG_STYLE_LIST,"{FF0000}Armas","Lanza Cohetes($150000)(20)\nC4($200000)(5)\nDetonador($20000)\nMolotov($100000)(60)","Seleccionar","Salir");
	}
 /*   	if(pickupid == armascentinela)
	{
		if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid, COLOR_RED, "No puedes comprar armas");
        if(gTeam[playerid] == NO_TEAM || gTeam[playerid] == TEAM_ZOMBIES || gTeam[playerid] == TEAM_EXTERMINADOR ) return SendClientMessage(playerid,red,"Necesitas pertenecer a los Centinelas para poder utilizar este pickup.");
    	else ShowPlayerDialog(playerid, Larmas,DIALOG_STYLE_LIST,"{FF0000}Armas","Lanza Cohetes($150000)(20)\nC4($200000)(5)\nDetonador($20000)\nMolotov($100000)(60)","Seleccionar","Salir");
	}    */

    	if(pickupid == TanquePos)
	{
		if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid, COLOR_RED, "No puedes usar este pickup siendo zombie");
        if(PlayerInfo[playerid][EXTERMINADOR_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer EXTERMINADOR corporatión para poder usar este pickup");
    	else ShowPlayerDialog(playerid, DIALOG_TANQUEPOS,DIALOG_STYLE_LIST,"{FF0000}Fuerza Terrestre","RHINO","Seleccionar","Salir");
	}

    	if(pickupid == AutoPos)
	{
		if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid, COLOR_RED, "No puedes usar este pickup siendo zombie");
        if(PlayerInfo[playerid][EXTERMINADOR_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer EXTERMINADOR corporatión para poder usar este pickup");
    	else ShowPlayerDialog(playerid, DIALOG_AUTOPOS,DIALOG_STYLE_LIST,"{FF0000}Transportes","Patriot","Seleccionar","Salir");
	}
        if(pickupid == HeliPos)
	{
		if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid, COLOR_RED, "No puedes usar este pickup siendo zombie");
        if(PlayerInfo[playerid][EXTERMINADOR_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer EXTERMINADOR corporatión para poder usar este pickup");
    	else ShowPlayerDialog(playerid, DIALOG_HELIPOS,DIALOG_STYLE_LIST,"{FF0000}Helicopteros","Police Maverick","Seleccionar","Salir");
	}
        if(pickupid == AvionPos)
	{
		if(gTeam[playerid] == TEAM_ZOMBIES) return SendClientMessage(playerid, COLOR_RED, "No puedes usar este pickup siendo zombie");
        if(PlayerInfo[playerid][EXTERMINADOR_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer EXTERMINADOR corporatión para poder usar este pickup");
    	else ShowPlayerDialog(playerid, DIALOG_AVIONPOS,DIALOG_STYLE_LIST,"{FF0000}Aviones","Hydra","Seleccionar","Salir");
	}          
        if(pickupid == bunkerSDentrada)
	{
        if(PlayerInfo[playerid][CLAN_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer al clan ARC para poder ingresar a este bunker.");
        if(PlayerInfo[playerid][CLAN_TIENE] >1) return SendClientMessage(playerid,red,"Necesitas pertenecer al clan ARC para poder ingresar a este bunker.");
    	else SetPlayerPos(playerid,-1398.4698, 1241.3064, 1040.3536);
        SetPlayerVirtualWorld(playerid,10);
        SetPlayerInterior(playerid,16);
       
	}
        if(pickupid == bunkerwsentrada)
	{
        if(PlayerInfo[playerid][CLAN_TIENE] == 0) return SendClientMessage(playerid,red,"Necesitas pertenecer al clan WS para poder ingresar a este bunker.");
        if(PlayerInfo[playerid][CLAN_TIENE] >3) return SendClientMessage(playerid,red,"Necesitas pertenecer al clan WS para poder ingresar a este bunker.");
        if(PlayerInfo[playerid][CLAN_TIENE] <3) return SendClientMessage(playerid,red,"Necesitas pertenecer al clan WS para poder ingresar a este bunker.");
    	else SetPlayerPos(playerid,-1398.4698, 1241.3064, 1040.3536);
        SetPlayerVirtualWorld(playerid,20);
        SetPlayerInterior(playerid,16);
	}
        if(pickupid == bunkerwssalida)
	{
    gTeam[playerid] = NO_TEAM;
	SetPlayerTeam(playerid, gTeam[playerid]);
	InfeccionEnprogreso[playerid]=0;
	Skins[playerid] = skinsh[random(213)];
	SetPlayerSkin(playerid,Skins[playerid]);
	SetPlayerHealth(playerid,100.0);
    	  ELOY9N_GivePlayerWeapon(playerid, 25, 20);  //escopeta
	  ELOY9N_GivePlayerWeapon(playerid, 29, 114);   //mp5
	  ELOY9N_GivePlayerWeapon(playerid, 24, 75);
	  ELOY9N_GivePlayerWeapon(playerid, 31, 250);  //m4
	SetPlayerColor(playerid, 0x218C07FF);
	  TextDrawHideForPlayer(playerid, VistaZombie0);
	  TextDrawHideForPlayer(playerid, VistaZombie1);
	  TextDrawHideForPlayer(playerid, VistaZombie2);
	  TextDrawHideForPlayer(playerid, VistaZombie3);
	  TextDrawHideForPlayer(playerid, VistaZombie4);
	  KillTimer(VidaTimer[playerid]);
	for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
         SetPlayerPos(playerid,2773.1255, -2457.0239, 13.0808);
        SetPlayerVirtualWorld(playerid,0);
        SetPlayerInterior(playerid,0);
	} 
        if(pickupid == bunkerSDsalida)
	{

            gTeam[playerid] = NO_TEAM;
	SetPlayerTeam(playerid, gTeam[playerid]);
	InfeccionEnprogreso[playerid]=0;
	Skins[playerid] = skinsh[random(213)];
	SetPlayerSkin(playerid,Skins[playerid]);
	SetPlayerHealth(playerid,100.0);
    	  ELOY9N_GivePlayerWeapon(playerid, 25, 20);  //escopeta
	  ELOY9N_GivePlayerWeapon(playerid, 29, 114);   //mp5
	  ELOY9N_GivePlayerWeapon(playerid, 24, 75);
	  ELOY9N_GivePlayerWeapon(playerid, 31, 250);  //m4
	SetPlayerColor(playerid, 0x218C07FF);
	  TextDrawHideForPlayer(playerid, VistaZombie0);
	  TextDrawHideForPlayer(playerid, VistaZombie1);
	  TextDrawHideForPlayer(playerid, VistaZombie2);
	  TextDrawHideForPlayer(playerid, VistaZombie3);
	  TextDrawHideForPlayer(playerid, VistaZombie4);
	  KillTimer(VidaTimer[playerid]);
	for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);    
     SetPlayerPos(playerid,1730.3344, -2223.3088, 23.2507);
        SetPlayerVirtualWorld(playerid,0);
        SetPlayerInterior(playerid,0);
	}               
	else if(gTeam[playerid] == TEAM_ZOMBIES) ELOY9N_ResetPlayerWeapons(playerid);
    //else if(gTeam[playerid] == TEAM_ADMIN) ELOY9N_ResetPlayerWeapons(playerid);
	
	return 1;
	}


//==============================================================================
public OnVehicleMod(playerid, vehicleid, componentid) {

    new vehicleide = GetVehicleModel(vehicleid);
    new modok = islegalcarmod(vehicleide, componentid);
	new name[24];
	GetPlayerName(playerid, name, 24);
    if (!modok) {
    if(warneded[playerid] == 0) {
    format(string2,sizeof(string2),"[invalid_mod - WARNING] %s %d %d %d %d %d", name, playerid, vehicleid, vehicleide, componentid);
    DestroyVehicle(vehicleid);
	warneded[playerid] = 1;
	SaveToFile("InvalidModCrash",string2);
	}
	else
	{
	DestroyVehicle(vehicleid);
	format(string2,sizeof(string2),"%s [%i] ha sido expulsado del servidor. [Razón: Moded Invalid]", name,playerid);
	SendClientMessageToAll(grey,string2);
	SaveToFile("KickLog",string2);
	Kick(playerid);
		}
		return 0;
    }
    return 1;
	}

//==============================================================================
//							Menus
//==============================================================================

#if defined USE_MENUS
public OnPlayerSelectedMenuRow(playerid, row) {
  	new Menu:Current = GetPlayerMenu(playerid);

    if(Current == LMainMenu) {
        switch(row)
		{
 			case 0:
			{
				if(PlayerInfo[playerid][Level] >= 6 && IsPlayerAdmin(playerid)) ShowMenuForPlayer(AdminEnable,playerid);
   				else {
   					SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando..");
	   				TogglePlayerControllable(playerid,true);
   				}
			}
			case 1:
			{
				if(PlayerInfo[playerid][Level] >= 6 && IsPlayerAdmin(playerid)) ShowMenuForPlayer(AdminDisable,playerid);
   				else {
   					SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando..");
	   				TogglePlayerControllable(playerid,true);
   				}
			}
 			case 2: ShowMenuForPlayer(LWeather,playerid);
 			case 3: ShowMenuForPlayer(LTime,playerid);
   			case 4:	ShowMenuForPlayer(LVehicles,playerid);
			case 5:	ShowMenuForPlayer(LCars,playerid);
 			case 6:
            {
				if(PlayerInfo[playerid][Level] >= 2)
				{
        			if(IsPlayerInAnyVehicle(playerid))
					{
						new LVehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(LVehicleID);
					    switch(LModel)
						{
							case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
							{
								SendClientMessage(playerid,red,"You can not tune this vehicle");  TogglePlayerControllable(playerid,true);
								return 1;
							}
						}
					    TogglePlayerControllable(playerid,false);	ShowMenuForPlayer(LTuneMenu,playerid);
			        }
					else { SendClientMessage(playerid,red,"You do not have a vehicle to tune"); TogglePlayerControllable(playerid,true); }
		    	} else { SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando."); TogglePlayerControllable(playerid,true);	}
			}
  			case 7:
	  		{
	  			if(PlayerInfo[playerid][Level] >= 3) ShowMenuForPlayer(XWeapons,playerid);
			  	else SendClientMessage(playerid,red,"Necesitas ser administrador con el nivel que requiere este comando."); TogglePlayerControllable(playerid,true);
			}
			case 8:	 ShowMenuForPlayer(LTele,playerid);
			case 9:
			{
				new Menu:Currentxmenu = GetPlayerMenu(playerid);
	    		HideMenuForPlayer(Currentxmenu,playerid);   TogglePlayerControllable(playerid,true);
		    }
		}
		return 1;
	}//-------------------------------------------------------------------------
	if(Current == AdminEnable) {
		new adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname));
		format(file,sizeof(file),"ladmin/config/Config.ini");
		switch(row){
			case 0: { ServerInfo[AntiSwear] = 1; dini_IntSet(file,"AntiSwear",1); format(string2,sizeof(string2),"STAFF %s habilito antiswear",adminname); SendClientMessageToAll(red,string2);	}
			case 1: { ServerInfo[NameKick] = 1; dini_IntSet(file,"NameKick",1); format(string2,sizeof(string2),"STAFF %s habilito namekick",adminname); SendClientMessageToAll(red,string2);	}
			case 2:	{ ServerInfo[AntiSpam] = 1; dini_IntSet(file,"AntiSpam",1); format(string2,sizeof(string2),"STAFF %s habilito antispam",adminname); SendClientMessageToAll(red,string2);	}
			case 3:	{ ServerInfo[MaxPing] = 1000; dini_IntSet(file,"MaxPing",1000); format(string2,sizeof(string2),"STAFF %s habilito ping kick",adminname); SendClientMessageToAll(red,string2);	}
			case 4:	{ ServerInfo[ReadCmds] = 1; dini_IntSet(file,"ReadCmds",1); format(string2,sizeof(string2),"STAFF %s habilito reading commands",adminname); MessageToAdmins(green,string2);	}
			case 5:	{ ServerInfo[ReadPMs] = 1; dini_IntSet(file,"ReadPMs",1); format(string2,sizeof(string2),"STAFF %s habilito reading pms",adminname); MessageToAdmins(green,string2); }
			case 6:	{ ServerInfo[NoCaps] = 0; dini_IntSet(file,"NoCaps",0); format(string2,sizeof(string2),"STAFF %s has allowed captial letters in chat",adminname); SendClientMessageToAll(red,string2); }
			case 7:	{ ServerInfo[ConnectMessages] = 1; dini_IntSet(file,"ConnectMessages",1); format(string2,sizeof(string2),"STAFF %s habilito connect messages",adminname); SendClientMessageToAll(red,string2); }
			case 8:	{ ServerInfo[AdminCmdMsg] = 1; dini_IntSet(file,"AdminCmdMessages",1); format(string2,sizeof(string2),"STAFF %s habilito admin command messages",adminname); MessageToAdmins(green,string2); }
			case 9:	{ ServerInfo[AutoLogin] = 1; dini_IntSet(file,"AutoLogin",1); format(string2,sizeof(string2),"STAFF %s habilito auto login",adminname); SendClientMessageToAll(red,string2); }
            case 10: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}//------------------------------------------------------------------------
	if(Current == AdminDisable) {
		new adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname));
		format(file,sizeof(file),"ladmin/config/Config.ini");
		switch(row){
			case 0: { ServerInfo[AntiSwear] = 0; dini_IntSet(file,"AntiSwear",0); format(string2,sizeof(string2),"STAFF %s desactivo antiswear",adminname); SendClientMessageToAll(red,string2);	}
			case 1: { ServerInfo[NameKick] = 0; dini_IntSet(file,"NameKick",0); format(string2,sizeof(string2),"STAFF %s desactivo namekick",adminname); SendClientMessageToAll(red,string2);	}
			case 2:	{ ServerInfo[AntiSpam] = 0; dini_IntSet(file,"AntiSpam",0); format(string2,sizeof(string2),"STAFF %s desactivo antispam",adminname); SendClientMessageToAll(red,string2);	}
			case 3:	{ ServerInfo[MaxPing] = 0; dini_IntSet(file,"MaxPing",0); format(string2,sizeof(string2),"STAFF %s desactivo ping kick",adminname); SendClientMessageToAll(red,string2);	}
			case 4:	{ ServerInfo[ReadCmds] = 0; dini_IntSet(file,"ReadCmds",0); format(string2,sizeof(string2),"STAFF %s desactivo reading commands",adminname); MessageToAdmins(green,string2);	}
			case 5:	{ ServerInfo[ReadPMs] = 0; dini_IntSet(file,"ReadPMs",0); format(string2,sizeof(string2),"STAFF %s desactivo reading pms",adminname); MessageToAdmins(green,string2); }
			case 6:	{ ServerInfo[NoCaps] = 1; dini_IntSet(file,"NoCaps",1); format(string2,sizeof(string2),"STAFF %s has prevented captial letters in chat",adminname); SendClientMessageToAll(red,string2); }
			case 7:	{ ServerInfo[ConnectMessages] = 0; dini_IntSet(file,"ConnectMessages",0); format(string2,sizeof(string2),"STAFF %s has disabled connect messages",adminname); SendClientMessageToAll(red,string2); }
			case 8:	{ ServerInfo[AdminCmdMsg] = 0; dini_IntSet(file,"AdminCmdMessages",0); format(string2,sizeof(string2),"STAFF %s desactivo admin command messages",adminname); MessageToAdmins(green,string2); }
			case 9:	{ ServerInfo[AutoLogin] = 0; dini_IntSet(file,"AutoLogin",0); format(string2,sizeof(string2),"STAFF %s desactivo auto login",adminname); SendClientMessageToAll(red,string2); }
            case 10: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}//-------------------------------------------------------------------------
	if(Current==LVehicles){
		switch(row){
			case 0: ChangeMenu(playerid,Current,twodoor);
			case 1: ChangeMenu(playerid,Current,fourdoor);
			case 2: ChangeMenu(playerid,Current,fastcar);
			case 3: ChangeMenu(playerid,Current,Othercars);
			case 4: ChangeMenu(playerid,Current,bikes);
			case 5: ChangeMenu(playerid,Current,boats);
			case 6: ChangeMenu(playerid,Current,planes);
			case 7: ChangeMenu(playerid,Current,helicopters);
			case 8: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return 1;
	}
	if(Current==twodoor){
		new vehid;
		switch(row){
			case 0: vehid = 533;
			case 1: vehid = 439;
			case 2: vehid = 555;
			case 3: vehid = 422;
			case 4: vehid = 554;
			case 5: vehid = 575;
			case 6: vehid = 536;
			case 7: vehid = 535;
			case 8: vehid = 576;
			case 9: vehid = 401;
			case 10: vehid = 526;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==fourdoor){
		new vehid;
		switch(row){
			case 0: vehid = 404;
			case 1: vehid = 566;
			case 2: vehid = 412;
			case 3: vehid = 445;
			case 4: vehid = 507;
			case 5: vehid = 466;
			case 6: vehid = 546;
			case 7: vehid = 511;
			case 8: vehid = 467;
			case 9: vehid = 426;
			case 10: vehid = 405;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==fastcar){
		new vehid;
		switch(row){
			case 0: vehid = 480;
			case 1: vehid = 402;
			case 2: vehid = 415;
			case 3: vehid = 587;
			case 4: vehid = 494;
			case 5: vehid = 411;
			case 6: vehid = 603;
			case 7: vehid = 506;
			case 8: vehid = 451;
			case 9: vehid = 477;
			case 10: vehid = 541;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==Othercars){
		new vehid;
		switch(row){
			case 0: vehid = 556;
			case 1: vehid = 408;
			case 2: vehid = 431;
			case 3: vehid = 437;
			case 4: vehid = 427;
			case 5: vehid = 432;
			case 6: vehid = 601;
			case 7: vehid = 524;
			case 8: vehid = 455;
			case 9: vehid = 424;
			case 10: vehid = 573;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==bikes){
		new vehid;
		switch(row){
			case 0: vehid = 581;
			case 1: vehid = 481;
			case 2: vehid = 462;
			case 3: vehid = 521;
			case 4: vehid = 463;
			case 5: vehid = 522;
			case 6: vehid = 461;
			case 7: vehid = 448;
			case 8: vehid = 471;
			case 9: vehid = 468;
			case 10: vehid = 586;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==boats){
		new vehid;
		switch(row){
			case 0: vehid = 472;
			case 1: vehid = 473;
			case 2: vehid = 493;
			case 3: vehid = 595;
			case 4: vehid = 484;
			case 5: vehid = 430;
			case 6: vehid = 453;
			case 7: vehid = 452;
			case 8: vehid = 446;
			case 9: vehid = 454;
			case 10: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==planes){
		new vehid;
		switch(row){
			case 0: vehid = 592;
			case 1: vehid = 577;
			case 2: vehid = 511;
			case 3: vehid = 512;
			case 4: vehid = 593;
			case 5: vehid = 520;
			case 6: vehid = 553;
			case 7: vehid = 476;
			case 8: vehid = 519;
			case 9: vehid = 460;
			case 10: vehid = 513;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==helicopters){
		new vehid;
		switch(row){
			case 0: vehid = 548;
			case 1: vehid = 425;
			case 2: vehid = 417;
			case 3: vehid = 487;
			case 4: vehid = 488;
			case 5: vehid = 497;
			case 6: vehid = 563;
			case 7: vehid = 447;
			case 8: vehid = 469;
			case 9: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}

	if(Current==XWeapons){
		switch(row){
			case 0: { ELOY9N_GivePlayerWeapon(playerid,24,500); }
			case 1: { ELOY9N_GivePlayerWeapon(playerid,31,500); }
			case 2: { ELOY9N_GivePlayerWeapon(playerid,26,500); }
			case 3: { ELOY9N_GivePlayerWeapon(playerid,27,500); }
			case 4: { ELOY9N_GivePlayerWeapon(playerid,28,500); }
			case 5: { ELOY9N_GivePlayerWeapon(playerid,35,500); }
			case 6: { ELOY9N_GivePlayerWeapon(playerid,38,1000); }
			case 7: { ELOY9N_GivePlayerWeapon(playerid,34,500); }
			case 8: return ChangeMenu(playerid,Current,XWeaponsBig);
        	case 9: return ChangeMenu(playerid,Current,XWeaponsSmall);
        	case 10: return ChangeMenu(playerid,Current,XWeaponsMore);
        	case 11: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

	if(Current==XWeaponsBig){
		switch(row){
			case 0: { ELOY9N_GivePlayerWeapon(playerid,25,500);  }
			case 1: { ELOY9N_GivePlayerWeapon(playerid,30,500); }
			case 2: { ELOY9N_GivePlayerWeapon(playerid,33,500); }
			case 3: { ELOY9N_GivePlayerWeapon(playerid,36,500); }
			case 4: { ELOY9N_GivePlayerWeapon(playerid,37,500); }
			case 5: { ELOY9N_GivePlayerWeapon(playerid,29,500); }
			case 6: { ELOY9N_GivePlayerWeapon(playerid,32,1000); }
			case 7: return ChangeMenu(playerid,Current,XWeapons);
		}
		return TogglePlayerControllable(playerid,true);
	}

	if(Current==XWeaponsSmall){
		switch(row){
			case 0: { ELOY9N_GivePlayerWeapon(playerid,22,500); }//9mm
			case 1: { ELOY9N_GivePlayerWeapon(playerid,23,500); }//s9
			case 2: { ELOY9N_GivePlayerWeapon(playerid,18,500); }// MC
			case 3: { ELOY9N_GivePlayerWeapon(playerid,42,500); }//FE
			case 4: { ELOY9N_GivePlayerWeapon(playerid,41,500); }//spraycan
			case 5: { ELOY9N_GivePlayerWeapon(playerid,16,500); }//grenade
			case 6: { ELOY9N_GivePlayerWeapon(playerid,8,500); }//Katana
			case 7: { ELOY9N_GivePlayerWeapon(playerid,9,1000); }//chainsaw
			case 8: return ChangeMenu(playerid,Current,XWeapons);
		}
		return TogglePlayerControllable(playerid,true);
	}

	if(Current==XWeaponsMore){
		switch(row){
			case 0: DarJetpackOficial(playerid);
			case 1: ELOY9N_GivePlayerWeapon(playerid,4,500);
			case 2: ELOY9N_GivePlayerWeapon(playerid,14,500);
			case 3: ELOY9N_GivePlayerWeapon(playerid,43,500);
			case 4: ELOY9N_GivePlayerWeapon(playerid,7,500);
			case 5: ELOY9N_GivePlayerWeapon(playerid,5,500);
			case 6: ELOY9N_GivePlayerWeapon(playerid,2,1000);
			case 7: MaxAmmo(playerid);
			case 8: return ChangeMenu(playerid,Current,XWeapons);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LTele)
	{
        switch(row)
		{
			case 0: ChangeMenu(playerid,Current,LasVenturasMenu);
			case 1: ChangeMenu(playerid,Current,LosSantosMenu);
			case 2: ChangeMenu(playerid,Current,SanFierroMenu);
			case 3: ChangeMenu(playerid,Current,DesertMenu);
			case 4: ChangeMenu(playerid,Current,FlintMenu);
			case 5: ChangeMenu(playerid,Current,MountChiliadMenu);
			case 6: ChangeMenu(playerid,Current,InteriorsMenu);
			case 7: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return 1;
	}

    if(Current == LasVenturasMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,2037.0,1343.0,12.0); SetPlayerInterior(playerid,0); }// strip
			case 1: { SetPlayerPos(playerid,2163.0,1121.0,23); SetPlayerInterior(playerid,0); }// come a lot
			case 2: { SetPlayerPos(playerid,1688.0,1615.0,12.0); SetPlayerInterior(playerid,0); }// lv airport
			case 3: { SetPlayerPos(playerid,2503.0,2764.0,10.0); SetPlayerInterior(playerid,0); }// military fuel
			case 4: { SetPlayerPos(playerid,1418.0,2733.0,10.0); SetPlayerInterior(playerid,0); }// golf lv
			case 5: { SetPlayerPos(playerid,1377.0,2196.0,9.0); SetPlayerInterior(playerid,0); }// pitch match
			case 6: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LosSantosMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,2495.0,-1688.0,13.0); SetPlayerInterior(playerid,0); }// ganton
			case 1: { SetPlayerPos(playerid,1979.0,-2241.0,13.0); SetPlayerInterior(playerid,0); }// ls airport
			case 2: { SetPlayerPos(playerid,2744.0,-2435.0,15.0); SetPlayerInterior(playerid,0); }// docks
			case 3: { SetPlayerPos(playerid,1481.0,-1656.0,14.0); SetPlayerInterior(playerid,0); }// square
			case 4: { SetPlayerPos(playerid,1150.0,-2037.0,69.0); SetPlayerInterior(playerid,0); }// veradant bluffs
			case 5: { SetPlayerPos(playerid,425.0,-1815.0,6.0); SetPlayerInterior(playerid,0); }// santa beach
			case 6: { SetPlayerPos(playerid,1240.0,-744.0,95.0); SetPlayerInterior(playerid,0); }// mullholland
			case 7: { SetPlayerPos(playerid,679.0,-1070.0,49.0); SetPlayerInterior(playerid,0); }// richman
			case 8: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == SanFierroMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,-1990.0,137.0,27.0); SetPlayerInterior(playerid,0); } // sf station
			case 1: { SetPlayerPos(playerid,-1528.0,-206.0,14.0); SetPlayerInterior(playerid,0); }// sf airport
			case 2: { SetPlayerPos(playerid,-2709.0,198.0,4.0); SetPlayerInterior(playerid,0); }// ocean flats
			case 3: { SetPlayerPos(playerid,-2738.0,-295.0,6.0); SetPlayerInterior(playerid,0); }// avispa country club
			case 4: { SetPlayerPos(playerid,-1457.0,465.0,7.0); SetPlayerInterior(playerid,0); }// easter basic docks
			case 5: { SetPlayerPos(playerid,-1853.0,1404.0,7.0); SetPlayerInterior(playerid,0); }// esplanadae north
			case 6: { SetPlayerPos(playerid,-2620.0,1373.0,7.0); SetPlayerInterior(playerid,0); }// battery point
			case 7: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == DesertMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,416.0,2516.0,16.0); SetPlayerInterior(playerid,0); } // plane graveyard
			case 1: { SetPlayerPos(playerid,81.0,1920.0,17.0); SetPlayerInterior(playerid,0); }// area51
			case 2: { SetPlayerPos(playerid,-324.0,1516.0,75.0); SetPlayerInterior(playerid,0); }// big ear
			case 3: { SetPlayerPos(playerid,-640.0,2051.0,60.0); SetPlayerInterior(playerid,0); }// dam
			case 4: { SetPlayerPos(playerid,-766.0,1545.0,27.0); SetPlayerInterior(playerid,0); }// las barrancas
			case 5: { SetPlayerPos(playerid,-1514.0,2597.0,55.0); SetPlayerInterior(playerid,0); }// el qyebrados
			case 6: { SetPlayerPos(playerid,442.0,1427.0,9.0); SetPlayerInterior(playerid,0); }// actane springs
			case 7: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == FlintMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,-849.0,-1940.0,13.0);  SetPlayerInterior(playerid,0); }// lake
			case 1: { SetPlayerPos(playerid,-1107.0,-1619.0,76.0);  SetPlayerInterior(playerid,0); }// leafy hollow
			case 2: { SetPlayerPos(playerid,-1049.0,-1199.0,128.0);  SetPlayerInterior(playerid,0); }// the farm
			case 3: { SetPlayerPos(playerid,-1655.0,-2219.0,32.0);  SetPlayerInterior(playerid,0); }// shady cabin
			case 4: { SetPlayerPos(playerid,-375.0,-1441.0,25.0); SetPlayerInterior(playerid,0); }// flint range
			case 5: { SetPlayerPos(playerid,-367.0,-1049.0,59.0); SetPlayerInterior(playerid,0); }// beacon hill
			case 6: { SetPlayerPos(playerid,-494.0,-555.0,25.0); SetPlayerInterior(playerid,0); }// fallen tree
			case 7: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == MountChiliadMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,-2308.0,-1657.0,483.0);  SetPlayerInterior(playerid,0); }// chiliad jump
			case 1: { SetPlayerPos(playerid,-2331.0,-2180.0,35.0); SetPlayerInterior(playerid,0); }// bottom chiliad
			case 2: { SetPlayerPos(playerid,-2431.0,-1620.0,526.0);  SetPlayerInterior(playerid,0); }// highest point
			case 3: { SetPlayerPos(playerid,-2136.0,-1775.0,208.0);  SetPlayerInterior(playerid,0); }// chiliad path
			case 4: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == InteriorsMenu)
	{
        switch(row)
		{
			case 0: {	SetPlayerPos(playerid,386.5259, 173.6381, 1008.3828);	SetPlayerInterior(playerid,3); }
			case 1: {	SetPlayerPos(playerid,288.4723, 170.0647, 1007.1794);	SetPlayerInterior(playerid,3); }
			case 2: {	SetPlayerPos(playerid,372.5565, -131.3607, 1001.4922);	SetPlayerInterior(playerid,5); }
			case 3: {	SetPlayerPos(playerid,-1129.8909, 1057.5424, 1346.4141);	SetPlayerInterior(playerid,10); }
			case 4: {	SetPlayerPos(playerid,2233.9363, 1711.8038, 1011.6312);	SetPlayerInterior(playerid,1); }
			case 5: {	SetPlayerPos(playerid,2536.5322, -1294.8425, 1044.125);	SetPlayerInterior(playerid,2); }
			case 6: {	SetPlayerPos(playerid,1267.8407, -776.9587, 1091.9063);	SetPlayerInterior(playerid,5); }
  			case 7: {	SetPlayerPos(playerid,-1421.5618, -663.8262, 1059.5569);	SetPlayerInterior(playerid,4); }
   			case 8: {	SetPlayerPos(playerid,-1401.067, 1265.3706, 1039.8672);	SetPlayerInterior(playerid,16); }
   			case 9: {	SetPlayerPos(playerid,285.8361, -39.0166, 1001.5156);	SetPlayerInterior(playerid,1); }
    		case 10: {	SetPlayerPos(playerid,1727.2853, -1642.9451, 20.2254);	SetPlayerInterior(playerid,18); }
			case 11: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LWeather)
	{
		new adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname));
        switch(row)
		{
			case 0:	{	SetWeather(5);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);	CMDMessageToPac0(playerid,"SETWEATHER"); format(string2,sizeof(string2),"STAFF %s has changed the weather",adminname); SendClientMessageToAll(red,string2); }
   			case 1:	{	SetWeather(19); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"SETWEATHER");	format(string2,sizeof(string2),"STAFF %s has changed the weather",adminname); SendClientMessageToAll(red,string2); }
			case 2:	{	SetWeather(8);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"SETWEATHER");	format(string2,sizeof(string2),"STAFF %s has changed the weather",adminname); SendClientMessageToAll(red,string2); }
			case 3:	{	SetWeather(20);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"SETWEATHER");	format(string2,sizeof(string2),"STAFF %s has changed the weather",adminname); SendClientMessageToAll(red,string2); }
			case 4:	{	SetWeather(9);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"SETWEATHER");	format(string2,sizeof(string2),"STAFF %s has changed the weather",adminname); SendClientMessageToAll(red,string2); }
			case 5:	{	SetWeather(16); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"SETWEATHER");	format(string2,sizeof(string2),"STAFF %s has changed the weather",adminname); SendClientMessageToAll(red,string2); }
			case 6:	{	SetWeather(45); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"SETWEATHER");	format(string2,sizeof(string2),"STAFF %s has changed the weather",adminname); SendClientMessageToAll(red,string2); }
			case 7:	{	SetWeather(44); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"SETWEATHER");	format(string2,sizeof(string2),"STAFF %s has changed the weather",adminname); SendClientMessageToAll(red,string2); }
			case 8:	{	SetWeather(22); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"SETWEATHER");	format(string2,sizeof(string2),"STAFF %s has changed the weather",adminname); SendClientMessageToAll(red,string2); }
			case 9:	{	SetWeather(11); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"SETWEATHER");	format(string2,sizeof(string2),"STAFF %s has changed the weather",adminname); SendClientMessageToAll(red,string2); }
			case 10: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LTuneMenu)
	{
        switch(row)
		{
			case 0:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
   			case 1:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1087); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added"); }
			case 2:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1081); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 3: {	AddVehicleComponent(GetPlayerVehicleID(playerid),1078); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 4:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1098); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 5:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1074); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 6:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1082); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 7:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1085); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 8:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1025); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 9:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1077); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 10: return ChangeMenu(playerid,Current,PaintMenu);
			case 11: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == PaintMenu)
	{
        switch(row)
		{
			case 0:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),0); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Changed To Paint Job 1"); }
			case 1:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Changed To Paint Job 2"); }
			case 2:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Changed To Paint Job 3"); }
			case 3:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Changed To Paint Job 4"); }
			case 4:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),4); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Changed To Paint Job 5"); }
			case 5:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),0,0); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Colour Changed To Black"); }
			case 6:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),1,1); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Colour Changed To White"); }
			case 7:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),79,158); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Colour Changed To Black"); }
			case 8:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),146,183); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Colour Changed To Black"); }
			case 9: return ChangeMenu(playerid,Current,LTuneMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LTime)
	{
		new adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname));
        switch(row)
		{
			case 0:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetWorldTime(7);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);	CMDMessageToPac0(playerid,"LTIME MENU");	format(string2,sizeof(string2),"STAFF %s has changed the time",adminname); SendClientMessageToAll(red,string2); }
   			case 1:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetWorldTime(12); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"LTIME MENU");	format(string2,sizeof(string2),"STAFF %s has changed the time",adminname); SendClientMessageToAll(red,string2); }
			case 2:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetWorldTime(16);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"LTIME MENU");	format(string2,sizeof(string2),"STAFF %s has changed the time",adminname); SendClientMessageToAll(red,string2); }
			case 3:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetWorldTime(20);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"LTIME MENU");	format(string2,sizeof(string2),"STAFF %s has changed the time",adminname); SendClientMessageToAll(red,string2); }
			case 4:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetWorldTime(0);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToPac0(playerid,"LTIME MENU");	format(string2,sizeof(string2),"STAFF %s has changed the time",adminname); SendClientMessageToAll(red,string2); }
			case 5: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LCars)
	{
		new vehid;
        switch(row) {
			case 0: vehid = 451;//Turismo
			case 1: vehid = 568;//Bandito
			case 2: vehid = 539;//Vortex
			case 3: vehid = 522;//nrg
			case 4: vehid = 601;//s.w.a.t
			case 5: vehid = 425; //hunter
			case 6: vehid = 493;//jetmax
			case 7: vehid = 432;//rhino
			case 8: vehid = 444; //mt
			case 9: vehid = 447; //sea sparrow
			case 10: return ChangeMenu(playerid,Current,LCars2);
			case 11: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return SelectCar(playerid,vehid,Current);
	}

    if(Current == LCars2)
	{
		new vehid;
        switch(row) {
			case 0: vehid = 406;// dumper
			case 1: vehid = 564; //rc tank
			case 2: vehid = 441;//RC Bandit
			case 3: vehid = 464;// rc baron
			case 4: vehid = 501; //rc goblin
			case 5: vehid = 465; //rc raider
			case 6: vehid = 594; // rc cam
			case 7: vehid = 449; //tram
			case 8: return ChangeMenu(playerid,Current,LCars);
		}
		return SelectCar(playerid,vehid,Current);
	}

	return 1;
}

//==============================================================================

public OnPlayerExitedMenu(playerid)
{
    new Menu:Current = GetPlayerMenu(playerid);
    HideMenuForPlayer(Current,playerid);
    return TogglePlayerControllable(playerid,true);
}






//==============================================================================

ChangeMenu(playerid,Menu:oldmenu,Menu:newmenu)
{
	if(IsValidMenu(oldmenu)) {
		HideMenuForPlayer(oldmenu,playerid);
		ShowMenuForPlayer(newmenu,playerid);
	}
	return 1;
}

CloseMenu(playerid,Menu:oldmenu)
{
	HideMenuForPlayer(oldmenu,playerid);
	TogglePlayerControllable(playerid,1);
	return 1;
}
SelectCar(playerid,vehid,Menu:menu)
{
	CloseMenu(playerid,menu);
	SetCameraBehindPlayer(playerid);
	CarSpawner(playerid,vehid);
	return 1;
}
#endif

//==================== [ Jail & Freeze ]========================================

forward Jail1(player1);
public Jail1(player1)
{
	TogglePlayerControllable(player1,false);
	new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+10,y,z+10);SetPlayerCameraLookAt(player1,x,y,z);
	SetTimerEx("Jail2",1000,0,"d",player1);
}

forward Jail2(player1);
public Jail2(player1)
{
	new Float:x, Float:y, Float:z; GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+7,y,z+5); SetPlayerCameraLookAt(player1,x,y,z);
	if(GetPlayerState(player1) == PLAYER_STATE_ONFOOT) SetPlayerSpecialAction(player1,SPECIAL_ACTION_HANDSUP);
	GameTextPlayer(player1,"~r~Busted By Admins",3000,3);
	SetTimerEx("Jail3",1000,0,"d",player1);
}

forward Jail3(player1);
public Jail3(player1)
{
	new Float:x, Float:y, Float:z; GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+3,y,z); SetPlayerCameraLookAt(player1,x,y,z);
}

forward JailPlayer(player1);
public JailPlayer(player1)
{
	TogglePlayerControllable(player1,true);
	SetPlayerPos(player1,197.6661,173.8179,1003.0234);
	SetPlayerInterior(player1,3);
	SetCameraBehindPlayer(player1);
	JailTimer[player1] = SetTimerEx("JailRelease",PlayerInfo[player1][JailTime],0,"d",player1);
	PlayerInfo[player1][Jailed] = 1;
}

forward JailRelease(player1);
public JailRelease(player1)
{
	KillTimer( JailTimer[player1] );
	PlayerInfo[player1][JailTime] = 0;  PlayerInfo[player1][Jailed] = 0;
	SetPlayerInterior(player1,0); SetPlayerPos(player1, 0.0, 0.0, 0.0); SpawnPlayer(player1);
	PlayerPlaySound(player1,1057,0.0,0.0,0.0);
	GameTextPlayer(player1,"~g~Released ~n~From Jail",3000,3);
}

//------------------------------------------------------------------------------
forward UnFreezeMe(player1);
public UnFreezeMe(player1)
{
	KillTimer( FreezeTimer[player1] );
	TogglePlayerControllable(player1,true);   PlayerInfo[player1][Frozen] = 0;
	PlayerPlaySound(player1,1057,0.0,0.0,0.0);	
}

//==============================================================================
forward RepairCar(playerid);
public RepairCar(playerid)
{
	if(IsPlayerInAnyVehicle(playerid)) SetVehiclePos(GetPlayerVehicleID(playerid),Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]+0.5);
	SetVehicleZAngle(GetPlayerVehicleID(playerid), Pos[playerid][3]);
	SetCameraBehindPlayer(playerid);
}

//============================ [ Timers ]=======================================
forward TimerServer();
public TimerServer()
{

	/////---------------anti moneyhack
    
    //new string[128];
        for(new playerid = 0; playerid < MAX_PLAYERS; playerid++)
	{
    if(GetPlayerMoney(playerid) > pMoney[playerid])
	{
        new money = pMoney[playerid];
		ELOY9N_SetPlayerMoney(playerid, money);
        //format(string2,sizeof(string2),"%s ha sido expulsado del servidor. (Razon: MoneyHack)", PlayerName2(playerid));
					//SendClientMessageToAll(grey,string2);
					//SaveToFile("KickLog",string2);
					//Kick(playerid);
					return TimerServer();
    }
    }
	//-----------------------------------

  //  new Float:Armadura;
	for(new playerid = 0; playerid < MAX_PLAYERS; playerid++)
	{
	if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid) && ConectadoOk(playerid))
		{
		
			if(gTeam[playerid] == TEAM_ZOMBIES && CLASEZ[playerid] == 0)
    		{
				ELOY9N_ResetPlayerWeapons(playerid);
				//GetPlayerArmour(playerid,Armadura);
				//if(Armadura>1) SetPlayerArmour(playerid,0);
			}
	     	if(GetPlayerWeapon(playerid) == 44 || GetPlayerWeapon(playerid) == 45)
	      	{
	      		if(WarnWeaponsGoogles[playerid] >= 2)
	      		{
					format(string2,sizeof(string2),"%s ha sido expulsado del servidor. (Razon: Vision Nocturna/Vision Termica)", PlayerName2(playerid));
					SendClientMessageToAll(grey,string2);
					SaveToFile("KickLog",string2);
					Kick(playerid);
					return TimerServer();
                }
                else
                {
					WarnWeaponsGoogles[playerid]++;
                    ELOY9N_ResetPlayerWeapons(playerid);
     			}
    		}
     	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK && JetpackLegal[playerid] == 0)
   		{
			format(string2,sizeof(string2),"%s ha sido expulsado del servidor. (Razon: Jetpack Hack)", PlayerName2(playerid));
			SendClientMessageToAll(grey,string2);
			SaveToFile("KickLog",string2);
			Kick(playerid);
			return TimerServer();
   		}
     	if(ServerInfo[MaxPing] != 0)
		{
			if(GetPlayerPing(playerid) > ServerInfo[MaxPing])
				{
					format(string2,sizeof(string2),"%s ha sido expulsado del servidor. (Razon: Alto Ping (%d) |  Maximo Permitido (%d) )", PlayerName2(playerid), GetPlayerPing(playerid), ServerInfo[MaxPing] );
					SendClientMessageToAll(grey,string2);
					SaveToFile("KickLog",string2);
					Kick(playerid);
					return TimerServer();
				}
				else if(GetPlayerPing(playerid) < 1 && ServerInfo[AntiBot] == 1)
			   	{
					new ip[20];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string2,sizeof(string2),"BOT: %s id:%d ip: %s ping: %d",PlayerName2(playerid),playerid,ip,GetPlayerPing(playerid));
					SaveToFile("BotKickLog",string2);
				    SaveToFile("KickLog",string2);
					format(string2,sizeof(string2),"[Servidor] Possible bot has been detected (Kicked %s ID:%d Ping: %d Ip: %s)", PlayerName2(playerid), playerid,GetPlayerPing(playerid),ip);
		  			MessageToAdmins(green,string2);
					Kick(playerid);
					return TimerServer();
			    }
			}
	 	}
	}
	return 1;
}
//==============================================================================
/*forward GodUpdate();
public GodUpdate()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][God] == 1)
		{
			SetPlayerHealth(i,10000);
		}
		if(IsPlayerConnected(i) && PlayerInfo[i][GodCar] == 1 && IsPlayerInAnyVehicle(i))
		{
			RepairVehicle(GetPlayerVehicleID(i));
			SetVehicleHealth(GetPlayerVehicleID(i),10000);
		}
	}
}*/
//==========================[ Server Info  ]====================================

forward ConnectedPlayers();
public ConnectedPlayers()
{
	new Connected;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) Connected++;
	return Connected;
}

forward JailedPlayers();
public JailedPlayers()
{
	new JailedCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Jailed] == 1) JailedCount++;
	return JailedCount;
}

forward FrozenPlayers();
public FrozenPlayers()
{
	new FrozenCount; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Frozen] == 1) FrozenCount++;
	return FrozenCount;
}

forward MutedPlayers();
public MutedPlayers()
{
	new Count; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Muted] == 1) Count++;
	return Count;
}

forward InVehCount();
public InVehCount()
{
	new InVeh; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) InVeh++;
	return InVeh;
}

forward OnBikeCount();
public OnBikeCount()
{
	new BikeCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) {
		new LModel = GetVehicleModel(GetPlayerVehicleID(i));
		switch(LModel)
		{
			case 448,461,462,463,468,471,509,510,521,522,523,581,586:  BikeCount++;
		}
	}
	return BikeCount;
}

forward InCarCount();
public InCarCount()
{
	new PInCarCount;
	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) {
			new LModel = GetVehicleModel(GetPlayerVehicleID(i));
			switch(LModel)
			{
				case 448,461,462,463,468,471,509,510,521,522,523,581,586: {}
				default: PInCarCount++;
			}
		}
	}
	return PInCarCount;
}

forward AdminCount();
public AdminCount()
{
	new LAdminCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Level] >= 1)	LAdminCount++;
	return LAdminCount;
}

forward RconAdminCount();
public RconAdminCount()
{
	new rAdminCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerAdmin(i)) rAdminCount++;
	return rAdminCount;
}

//==========================[ Remote Console ]==================================

forward PrintWarning(const string[]);
public PrintWarning(const string[])
{
    print("\n\n>		WARNING:\n");
    format(str, sizeof(str), " The  %s  folder is missing from scriptfiles", string);
    print(str);
    print("\n Please Create This Folder And Reload the Filterscript\n\n");
}

//============================[ Bot Check ]=====================================
forward BotCheck(playerid);
public BotCheck(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(GetPlayerPing(playerid) < 1)
		{
			new ip[20];  GetPlayerIp(playerid,ip,sizeof(ip));
			format(string2,sizeof(string2),"BOT: %s id:%d ip: %s ping: %d",PlayerName2(playerid),playerid,ip,GetPlayerPing(playerid));
			SaveToFile("BotKickLog",string2);
		    SaveToFile("KickLog",string2);
			format(string2,sizeof(string2),"[Servidor] Possible bot has been detected (Kicked %s ID:%d Ping: %d Ip: %s)", PlayerName2(playerid), playerid,GetPlayerPing(playerid),ip);
  			MessageToAdmins(green,string2);
			Kick(playerid);
		}
	}
}

//==============================================================================
forward PutAtPos(playerid);
public PutAtPos(playerid)
{
	if (dUserINT(PlayerName2(playerid)).("x")!=0) {
     	SetPlayerPos(playerid, float(dUserINT(PlayerName2(playerid)).("x")), float(dUserINT(PlayerName2(playerid)).("y")), float(dUserINT(PlayerName2(playerid)).("z")) );
 		SetPlayerInterior(playerid,	(dUserINT(PlayerName2(playerid)).("interior"))	);
	}
}

forward PutAtDisconectPos(playerid);
public PutAtDisconectPos(playerid)
{
	if (dUserINT(PlayerName2(playerid)).("x1")!=0) {
    	SetPlayerPos(playerid, float(dUserINT(PlayerName2(playerid)).("x1")), float(dUserINT(PlayerName2(playerid)).("y1")), float(dUserINT(PlayerName2(playerid)).("z1")) );
		SetPlayerInterior(playerid,	(dUserINT(PlayerName2(playerid)).("interior1"))	);
	}
}

TotalGameTime(playerid, &h=0, &m=0, &s=0)
{
    PlayerInfo[playerid][TotalTime] = ( (gettime() - PlayerInfo[playerid][ConnectTime]) + (PlayerInfo[playerid][hours]*60*60) + (PlayerInfo[playerid][mins]*60) + (PlayerInfo[playerid][secs]) );

    h = floatround(PlayerInfo[playerid][TotalTime] / 3600, floatround_floor);
    m = floatround(PlayerInfo[playerid][TotalTime] / 60,   floatround_floor) % 60;
    s = floatround(PlayerInfo[playerid][TotalTime] % 60,   floatround_floor);

    return PlayerInfo[playerid][TotalTime];
}

MaxAmmo(playerid)
{
	new slot, weap, ammo;
	for (slot = 0; slot < 14; slot++)
	{
    	GetPlayerWeaponData(playerid, slot, weap, ammo);
		if(IsValidWeapon(weap))
		{
		   	ELOY9N_GivePlayerWeapon(playerid, weap, 99999);
		}
	}
	return 1;
}

stock PlayerName2(playerid) {
  new name[MAX_PLAYER_NAME];
  GetPlayerName(playerid, name, sizeof(name));
  return name;
}

stock pName(playerid)
{
  new name[MAX_PLAYER_NAME];
  GetPlayerName(playerid, name, sizeof(name));
  return name;
}

stock TimeStamp()
{
	new time = GetTickCount() / 1000;
	return time;
}

stock PlayerSoundForAll(SoundID)
{
	for(new i = 0; i < MAX_PLAYERS; i++) PlayerPlaySound(i, SoundID, 0.0, 0.0, 0.0);
}

stock IsValidWeapon(weaponid)
{
    if (weaponid > 0 && weaponid < 19 || weaponid > 21 && weaponid < 47) return 1;
    return 0;
}

/*stock IsValidSkin(SkinID)
{
	(SkinID >= 299) return true;
	else return false;
}*/
//ZONAS
stock GetTeamZoneColor(clanid)
{
    switch(clanid)
    {
        case CLAN_SD: return 0x00FF97AA;
        case CLAN_SWO: return 0xFF0000AA;
		case CLAN_GOD: return 0x80008096;
        case CLAN_SIN_CLAN: return 0x33FF33AA; 
        case CLAN_SIN_CONQUISTAR: return 0x9B9B9BAA;	
    }
    return -1;
}


///
stock IsNumeric(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}
stock GetPlayerHighestScores(array[][rankingEnum], left, right)
{
    new
        tempLeft = left,
        tempRight = right,
        pivot = array[(left + right) / 2][player_Score],
        tempVar
    ;
    while(tempLeft <= tempRight)
    {
        while(array[tempLeft][player_Score] > pivot) tempLeft++;
        while(array[tempRight][player_Score] < pivot) tempRight--;

        if(tempLeft <= tempRight)
        {
            tempVar = array[tempLeft][player_Score], array[tempLeft][player_Score] = array[tempRight][player_Score], array[tempRight][player_Score] = tempVar;
            tempVar = array[tempLeft][player_ID], array[tempLeft][player_ID] = array[tempRight][player_ID], array[tempRight][player_ID] = tempVar;
            tempLeft++, tempRight--;
        }
    }
    if(left < tempRight) GetPlayerHighestScores(array, left, tempRight);
    if(tempLeft < right) GetPlayerHighestScores(array, tempLeft, right);

}

stock ReturnPlayerID(PlayerName[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(strfind(pName(i),PlayerName,true)!=-1) return i;
		}
	}
	return INVALID_PLAYER_ID;
}

GetVehicleModelIDFromName(vname[])
{
	for(new i = 0; i < 211; i++)
	{
		if ( strfind(VehicleNames[i], vname, true) != -1 )
			return i + 400;
	}
	return -1;
}

stock GetWeaponIDFromName(WeaponName[])
{
	if(strfind("molotov",WeaponName,true)!=-1) return 18;
	for(new i = 0; i <= 46; i++)
	{
		switch(i)
		{
			case 0,19,20,21,44,45: continue;
			default:
			{
				new name[32]; GetWeaponName(i,name,32);
				if(strfind(name,WeaponName,true) != -1) return i;
			}
		}
	}
	return -1;
}

stock DisableWord(const badword[], text[])
{
   	for(new i=0; i<256; i++)
   	{
		if (strfind(text[i], badword, true) == 0)
		{
			for(new a=0; a<256; a++)
			{
				if (a >= i && a < i+strlen(badword)) text[a]='*';
			}
		}
	}
}

//==============================================================================
forward MessageToAdmins(color,const string[]);
public MessageToAdmins(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 1) SendClientMessage(i, color, string);
	}
	return 1;
}
forward MessageToPac0(color,const string[]);
public MessageToPac0(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 8) SendClientMessage(i, color, string);
	}
	return 1;
}
forward MessageToHumans(color,const string[]);
public MessageToHumans(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if(gTeam[i] == NO_TEAM) SendClientMessage(i, color, string);
	}
	return 1;
}
forward MessageToEXTERMINADOR(color,const string[]);
public MessageToEXTERMINADOR(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if(gTeam[i] == TEAM_EXTERMINADOR) SendClientMessage(i, color, string);
	}
	return 1;
}
forward MessageToCentinelas(color,const string[]);
public MessageToCentinelas(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if(gTeam[i] == TEAM_CENTINELAS) SendClientMessage(i, color, string);
	}
	return 1;
}
forward MessageToZombies(color,const string[]);
public MessageToZombies(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if(gTeam[i] == TEAM_ZOMBIES) SendClientMessage(i, color, string);
	}
	return 1;
}

forward MessageForVip(color,const string[]);
public MessageForVip(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if ((PlayerInfo[i][Level] >= 1) || (PlayerInfo[i][pVip] >= 1)) SendClientMessage(i, color, string2);
	}
	return 1;
}

stock CMDMessageToAdmins(playerid,command[])
{
	if(ServerInfo[AdminCmdMsg] == 0) return 1;
	GetPlayerName(playerid,string2,sizeof(string2));
	format(string2,sizeof(string2),"{FF0000}Registro: | {FFFF00}%s {FF0000}| {FFFFFF}uso el comando {C2A2DA}%s",string2,command);
	return MessageToAdmins(COLOR_WHITE,string2);
}
stock CMDMessageToPac0(playerid,command[])
{
	if(ServerInfo[AdminCmdMsg] == 0) return 1;
	GetPlayerName(playerid,string2,sizeof(string2));
	format(string2,sizeof(string2),"{FF0000}Registro: | {FFFF00}%s {FF0000}| {FFFFFF}uso el comando {C2A2DA}%s",string2,command);
	return MessageToPac0(COLOR_WHITE,string2);
}
stock CMDMessageToVip(playerid,command[])
{
	if(ServerInfo[AdminCmdMsg] == 0) return 1;
 	GetPlayerName(playerid,string2,sizeof(string2));
	format(string2,sizeof(string2),"El Usuario Vip %s [ID: %i] ha Usado el Comando %s",string2,playerid,command);
	return MessageToAdmins(red,string2);
}


	public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
	{
	 new Lib[32];
	new Name[32];
	GetAnimationName(GetPlayerAnimationIndex(playerid), Lib, 32, Name, 32);
	if(amount > 15 && strcmp("FALL_FALL", Name, true) == 0)
	{
//	    TextDrawSetString(deathRazón[playerid], ConverterTexto("~l~Você bateu com tudo no chão."));
		//Player[playerid][Quebrado] = 1;
		//Player[playerid][TQuebrado] = 1;
		//SetPlayerAttachedObject(playerid, 1, 18706, 10, 0.0,0.0,0.0, 0.000000, 0.000000, 0.0,0.0, 0.0, -0.100000);
		//SendClientMessage(playerid, COR_INFO, "[ FRATURA ] Você fraturou sua perna ao cair desta altura, você estará mancando até poder se tratar!");
	}
/*	for(new I = 0; I < MAX_MILITARES; I++)
	{
	    if(Militar[I][Aim] == playerid) return 1;
	}
	new Float:HP;
	if(IsPlayerNPC(issuerid))
	{
	    TextDrawShowForPlayer(playerid, FWhite);
  		SetTimerEx("ShowRedScreen", 100, false, "i", playerid);
        GetPlayerHealth(playerid,HP);
		SetPlayerHealth(playerid,HP-25);
		//Player[playerid][pContaminado] -= 100;
	}*/
		//----------------------fin Damage npc

	
	if(gTeam[issuerid] == NO_TEAM && gTeam[playerid] == TEAM_ZOMBIES || gTeam[issuerid] == TEAM_EXTERMINADOR && gTeam[playerid] == TEAM_ZOMBIES || gTeam[issuerid] == TEAM_CENTINELAS && gTeam[playerid] == TEAM_ZOMBIES)
	{
    	if(CLASEH[issuerid] == 3)
    	{
    			if(weaponid == 8)
	            {
				new Float:Health;
				GetPlayerHealth(playerid,Health);
				SetPlayerHealth(playerid,Health-100);
	}
	}
	}
	
	if(gTeam[issuerid] == TEAM_ZOMBIES  && gTeam[playerid] == NO_TEAM || gTeam[issuerid] == TEAM_ZOMBIES && gTeam[playerid] == TEAM_EXTERMINADOR || gTeam[issuerid] == TEAM_ZOMBIES && gTeam[playerid] == TEAM_CENTINELAS)
//	if(gTeam[issuerid] == TEAM_ZOMBIES  && gTeam[playerid] == TEAM_EXTERMINADOR)
	{
	
	new Float:Health;
	GetPlayerHealth(playerid,Health);
	SetPlayerHealth(playerid,Health-25);
	}
    return 1;
	}
	


	forward Infectar(playerid,issuerid);
	public Infectar(playerid,issuerid)
	{
		if (IsPlayerNPC(playerid))
		{
			// SendClientMessage(issuerid, COLOR_RED, "No puedes infectar zombies.");
		}
		else
		{
			if (!IsPlayerNPC(playerid))
			{
				if(ContadorMordidas[issuerid] < 130) // Verifica si issuerid ha hecho menos de 10 mordidas
				{
					GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~r~Infectado", 3000, 5);
					GameTextForPlayer(issuerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~r~Lo infectaste", 3000, 6);
					ApplyAnimation(issuerid, "CHOPPA", "CHOPPA_fwd", 4.0, 0, 0, 0, 0, 0, 1); // animación de mordida
					ApplyAnimation(playerid, "ped", "DAM_armL_frmFT", 2.6, 0, 1, 1, 0, 0, 1); // animación de mordido

					if(PlayerInfo[issuerid][VIP_TIENE] == 4 || PlayerInfo[issuerid][VIP_TIENE] == 5)
					{
					SetPlayerScore(issuerid, (GetPlayerScore(issuerid)) + 2);
					PlayerInfo[issuerid][Kills] += 2;
					ELOY9N_GivePlayerMoney(issuerid, 1600);
					GameTextForPlayer(issuerid, "~r~+2 XP ~n~~w~+$1600", 6000, 4);
					}

					else
					{
					SetPlayerScore(issuerid, (GetPlayerScore(issuerid)) + 1);
					PlayerInfo[issuerid][Kills] += 1;
					ELOY9N_GivePlayerMoney(issuerid, 800);
					GameTextForPlayer(issuerid, "~r~+1 XP ~n~~w~+$800", 6000, 4);
					}					

					PlayerPlaySound(issuerid, 1136, 0.0, 0.0, 0.0);
					PlayerPlaySound(playerid, 1136, 0.0, 0.0, 0.0);
	
					ContadorMordidas[issuerid]++;
				}
				else
				{
					GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~r~Infectado", 3000, 5);
					//GameTextForPlayer(issuerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~r~Estas lleno", 3000, 6);
				}
			}
		}
		return 1;
	}
	
	forward VidaBajando(playerid);
	public VidaBajando(playerid)
	{
	new Float:Health;
	GetPlayerHealth(playerid,Health);
	SetPlayerHealth(playerid,Health-1);
	if(Health >= 95)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[1]);
		TextDrawShowForPlayer(playerid,HealthBar[2]);
	}
	else if(Health >= 90 && Health < 95)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[1]);
		TextDrawShowForPlayer(playerid,HealthBar[3]);
	}
	else if(Health >= 85 && Health < 90)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[1]);
		TextDrawShowForPlayer(playerid,HealthBar[4]);
	}
	else if(Health >= 80 && Health < 85)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[1]);
		TextDrawShowForPlayer(playerid,HealthBar[5]);
	}
	else if(Health >= 75 && Health < 80)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[1]);
		TextDrawShowForPlayer(playerid,HealthBar[6]);
	}
	else if(Health >= 70 && Health < 75)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[7]);
		TextDrawShowForPlayer(playerid,HealthBar[8]);
	}
	else if(Health >= 65 && Health < 70)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[7]);
		TextDrawShowForPlayer(playerid,HealthBar[9]);
	}
	else if(Health >= 60 && Health < 65)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[7]);
		TextDrawShowForPlayer(playerid,HealthBar[10]);
	}
	else if(Health >= 55 && Health < 60)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[7]);
		TextDrawShowForPlayer(playerid,HealthBar[11]);
	}
	else if(Health >= 50 && Health < 55)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[7]);
		TextDrawShowForPlayer(playerid,HealthBar[12]);
	}
	else if(Health >= 45 && Health < 50)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[13]);
		TextDrawShowForPlayer(playerid,HealthBar[14]);
	}
	else if(Health >= 40 && Health < 45)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[13]);
		TextDrawShowForPlayer(playerid,HealthBar[15]);
	}
	else if(Health >= 35 && Health < 40)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[13]);
		TextDrawShowForPlayer(playerid,HealthBar[16]);
	}
	else if(Health >= 30 && Health < 35)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[13]);
		TextDrawShowForPlayer(playerid,HealthBar[17]);
	}
	else if(Health >= 25 && Health < 30)
	{
		for(new i=1; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
		TextDrawShowForPlayer(playerid,HealthBar[13]);
		TextDrawShowForPlayer(playerid,HealthBar[18]);
	}
	else
	{
		for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
	}
	return VidaTimer[playerid]=SetTimerEx("VidaBajando", 1000,0,"d",playerid);
	}
	forward CompletaInfeccion(playerid);
	public CompletaInfeccion(playerid)
	{
	if(InfeccionEnprogreso[playerid]==1){
	ELOY9N_ResetPlayerWeapons(playerid);
	InfeccionEnprogreso[playerid]=0;

	SendClientMessageToAll(red, "¡Un humano se ha convertido en zombie!");
	gTeam[playerid]=2;
	SetPlayerTeam(playerid, gTeam[playerid]);
	SetPlayerColor(playerid, 0x979797AA);
	Skins[playerid]=134;
//	TextDrawHideForPlayer(playerid, Textdraw0);
//	TextDrawShowForPlayer(playerid, Textdraw2);
//	TextDrawShowForPlayer(playerid, VistaZombie0);
	//TextDrawShowForPlayer(playerid, VistaZombie1);
//	TextDrawShowForPlayer(playerid, VistaZombie2);
//	TextDrawShowForPlayer(playerid, VistaZombie3);
//	TextDrawShowForPlayer(playerid, VistaZombie4);
	TextDrawShowForPlayer(playerid, TextoComandosZombies);
	TextDrawHideForPlayer(playerid, TextoComandosHumanos);
	for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
	KillTimer(VidaTimer[playerid]);
	}
	return 1;
	}
	
//==============================================================================
SavePlayer(playerid)
{
   	dUserSetINT(PlayerName2(playerid)).("money",GetPlayerMoney(playerid));
   	dUserSetINT(PlayerName2(playerid)).("kills",PlayerInfo[playerid][Kills]);
   	dUserSetINT(PlayerName2(playerid)).("deaths",PlayerInfo[playerid][Deaths]);
   	dUserSetINT(PlayerName2(playerid)).("RANGO_PLAYER",PlayerInfo[playerid][RANGO_PLAYER]);
	dUserSetINT(PlayerName2(playerid)).("LEERACTIVADO_PLAYER",PlayerInfo[playerid][LEERACTIVADO_PLAYER]);
	dUserSetINT(PlayerName2(playerid)).("KILLS_PLAYER",PlayerInfo[playerid][KILLS_PLAYER]);

		dUserSetINT(PlayerName2(playerid)).("EXTASIS_PLAYER_2",PlayerInfo[playerid][EXTASIS_PLAYER_2]);
		dUserSetINT(PlayerName2(playerid)).("LSD_PLAYER_2",PlayerInfo[playerid][LSD_PLAYER_2]);
		dUserSetINT(PlayerName2(playerid)).("FENTANILO_PLAYER_2",PlayerInfo[playerid][FENTANILO_PLAYER_2]);
		dUserSetINT(PlayerName2(playerid)).("GHB_PLAYER_2",PlayerInfo[playerid][GHB_PLAYER_2]);
		dUserSetINT(PlayerName2(playerid)).("ALUCINOGENO_PLAYER",PlayerInfo[playerid][ALUCINOGENO_PLAYER]);
		dUserSetINT(PlayerName2(playerid)).("HEROINA_PLAYER",PlayerInfo[playerid][HEROINA_PLAYER]);
		dUserSetINT(PlayerName2(playerid)).("INHALANTES_PLAYER",PlayerInfo[playerid][INHALANTES_PLAYER]);
		dUserSetINT(PlayerName2(playerid)).("KETAMINA_PLAYER",PlayerInfo[playerid][KETAMINA_PLAYER]);
		dUserSetINT(PlayerName2(playerid)).("KHAT_PLAYER",PlayerInfo[playerid][KHAT_PLAYER]);
		dUserSetINT(PlayerName2(playerid)).("BONUS_PLAYER",PlayerInfo[playerid][BONUS_PLAYER]);
		dUserSetINT(PlayerName2(playerid)).("KRATOM_PLAYER",PlayerInfo[playerid][KRATOM_PLAYER]);

	dUserSetINT(PlayerName2(playerid)).("MISION1_PLAYER",PlayerInfo[playerid][MISION1_PLAYER]);
	dUserSetINT(PlayerName2(playerid)).("MISION2_PLAYER",PlayerInfo[playerid][MISION2_PLAYER]);
   	dUserSetINT(PlayerName2(playerid)).("PUNTOS_PLAYER_2",PlayerInfo[playerid][PUNTOS_PLAYER_2]);
    dUserSetINT(PlayerName2(playerid)).("CONQUISTAS_PLAYER",PlayerInfo[playerid][CONQUISTAS_PLAYER]);
   	dUserSetINT(PlayerName2(playerid)).("CLAN_TIENE",PlayerInfo[playerid][CLAN_TIENE]);
   	dUserSetINT(PlayerName2(playerid)).("CLAN_TIENELIDER",PlayerInfo[playerid][CLAN_TIENELIDER]);
   	dUserSetINT(PlayerName2(playerid)).("CLAN_TIENEREP",PlayerInfo[playerid][CLAN_TIENEREP]);
   	dUserSetINT(PlayerName2(playerid)).("EXTERMINADOR_TIENE",PlayerInfo[playerid][EXTERMINADOR_TIENE]);
   	dUserSetINT(PlayerName2(playerid)).("VIP_TIENE",PlayerInfo[playerid][VIP_TIENE]);
	dUserSetINT(PlayerName2(playerid)).("VIP_EXPIRATION",PlayerInfo[playerid][VIP_EXPIRATION]);	

	new h, m, s;
    TotalGameTime(playerid, h, m, s);

	dUserSetINT(PlayerName2(playerid)).("hours", h);
	dUserSetINT(PlayerName2(playerid)).("minutos", m);
	dUserSetINT(PlayerName2(playerid)).("seconds", s);

   	new Float:x,Float:y,Float:z, interior;
   	GetPlayerPos(playerid,x,y,z);	interior = GetPlayerInterior(playerid);
    dUserSetINT(PlayerName2(playerid)).("x1",floatround(x));
	dUserSetINT(PlayerName2(playerid)).("y1",floatround(y));
	dUserSetINT(PlayerName2(playerid)).("z1",floatround(z));
    dUserSetINT(PlayerName2(playerid)).("interior1",interior);

	new weap1, ammo1, weap2, ammo2, weap3, ammo3, weap4, ammo4, weap5, ammo5, weap6, ammo6;
	GetPlayerWeaponData(playerid,2,weap1,ammo1);// hand gun
	GetPlayerWeaponData(playerid,3,weap2,ammo2);//shotgun
	GetPlayerWeaponData(playerid,4,weap3,ammo3);// SMG
	GetPlayerWeaponData(playerid,5,weap4,ammo4);// AK47 / M4
	GetPlayerWeaponData(playerid,6,weap5,ammo5);// rifle
	GetPlayerWeaponData(playerid,7,weap6,ammo6);// rocket launcher
   	dUserSetINT(PlayerName2(playerid)).("weap1",weap1); dUserSetINT(PlayerName2(playerid)).("weap1ammo",ammo1);
  	dUserSetINT(PlayerName2(playerid)).("weap2",weap2);	dUserSetINT(PlayerName2(playerid)).("weap2ammo",ammo2);
  	dUserSetINT(PlayerName2(playerid)).("weap3",weap3);	dUserSetINT(PlayerName2(playerid)).("weap3ammo",ammo3);
	dUserSetINT(PlayerName2(playerid)).("weap4",weap4); dUserSetINT(PlayerName2(playerid)).("weap4ammo",ammo4);
  	dUserSetINT(PlayerName2(playerid)).("weap5",weap5);	dUserSetINT(PlayerName2(playerid)).("weap5ammo",ammo5);
	dUserSetINT(PlayerName2(playerid)).("weap6",weap6); dUserSetINT(PlayerName2(playerid)).("weap6ammo",ammo6);

	new	Float:health;	GetPlayerHealth(playerid, Float:health);
	new	Float:armour;	GetPlayerArmour(playerid, Float:armour);
	new year,month,day;	getdate(year, month, day);
	new strdate[20];	format(strdate, sizeof(strdate), "%d.%d.%d",day,month,year);
	format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(playerid)) );

	dUserSetINT(PlayerName2(playerid)).("health",floatround(health));
    dUserSetINT(PlayerName2(playerid)).("armour",floatround(armour));
	dini_Set(file,"LastOn",strdate);

	dUserSetINT(PlayerName2(playerid)).("loggedin",0);
	dUserSetINT(PlayerName2(playerid)).("TimesOnServer",(dUserINT(PlayerName2(playerid)).("TimesOnServer"))+1);
}

//==============================================================================
#if defined USE_MENUS
DestroyAllMenus()
{
	DestroyMenu(LVehicles); DestroyMenu(twodoor); DestroyMenu(fourdoor); DestroyMenu(fastcar); DestroyMenu(Othercars);
	DestroyMenu(bikes); DestroyMenu(boats); DestroyMenu(planes); DestroyMenu(helicopters ); DestroyMenu(LTime);
	DestroyMenu(XWeapons); DestroyMenu(XWeaponsBig); DestroyMenu(XWeaponsSmall); DestroyMenu(XWeaponsMore);
	DestroyMenu(LWeather); DestroyMenu(LTuneMenu); DestroyMenu(PaintMenu); DestroyMenu(LCars); DestroyMenu(LCars2);
	DestroyMenu(LTele); DestroyMenu(LasVenturasMenu); DestroyMenu(LosSantosMenu); DestroyMenu(SanFierroMenu);
	DestroyMenu(LMainMenu); DestroyMenu(DesertMenu); DestroyMenu(FlintMenu); DestroyMenu(MountChiliadMenu); DestroyMenu(InteriorsMenu);
	DestroyMenu(AdminEnable); DestroyMenu(AdminDisable);
}
#endif

//==============================================================================
#if defined DISPLAY_CONFIG
stock ConfigInConsole()
{
	print(" ________ CONFIGURACIÓN ___________\n");
	print(" __________ CHAT / MENSAJES ______");
	if(ServerInfo[AntiSwear] == 0) print("  Anti Swear:              Disabled "); else print("  Anti Swear:             Enabled ");
	if(ServerInfo[AntiSpam] == 0)  print("  Anti Spam:               Disabled "); else print("  Anti Spam:              Enabled ");
	if(ServerInfo[ReadCmds] == 0)  print("  Read Cmds:               Disabled "); else print("  Read Cmds:              Enabled ");
	if(ServerInfo[ReadPMs] == 0)   print("  Read PMs:                Disabled "); else print("  Read PMs:               Enabled ");
	if(ServerInfo[ConnectMessages] == 0) print("  Connect Messages:        Disabled "); else print("  Connect Messages:       Enabled ");
  	if(ServerInfo[AdminCmdMsg] == 0) print("  Admin Cmd Messages:     Disabled ");  else print("  Admin Cmd Messages:     Enabled ");
	if(ServerInfo[ReadPMs] == 0)   print("  Anti capital letters:    Disabled \n"); else print("  Anti capital letters:   Enabled \n");
	print(" __________ SKINS ________________");
	if(ServerInfo[AdminOnlySkins] == 0) print("  AdminOnlySkins:         Disabled "); else print("  AdminOnlySkins:         Enabled ");
	printf("  Admin Skin 1 is:         %d", ServerInfo[AdminSkin] );
	printf("  Admin Skin 2 is:         %d\n", ServerInfo[AdminSkin2] );
	print(" ________ PROTECCIÓN DEL SERVIDOR ______");
	if(ServerInfo[AntiBot] == 0) print("  Anti Bot:                Disabled "); else print("  Anti Bot:                Enabled ");
	if(ServerInfo[NameKick] == 0) print("  Bad Name Kick:           Disabled\n"); else print("  Bad Name Kick:           Enabled\n");
	print(" __________ CONTROL DE PING _________");
	if(ServerInfo[MaxPing] == 0) print("  Ping Control:            Disabled"); else print("  Ping Control:            Enabled");
	printf("  Max Ping:                %d\n", ServerInfo[MaxPing] );
	print(" __________ JUGADORES ______________");
	if(ServerInfo[GiveWeap] == 0) print("  Save/Give Weaps:         Disabled"); else print("  Save/Give Weaps:         Enabled");
	if(ServerInfo[GiveMoney] == 0) print("  Save/Give Money:         Disabled\n"); else print("  Save/Give Money:         Enabled\n");
	print(" __________ OTROS ________________");
	printf("  Max Admin Level:         %d", ServerInfo[MaxAdminLevel] );
	if(ServerInfo[Locked] == 0) print("  Server Locked:           No"); else print("  Server Locked:           Yes");
	if(ServerInfo[AutoLogin] == 0) print("  Auto Login:             Disabled\n"); else print("  Auto Login:              Enabled\n");
}
#endif

////MISIONES
stock Player_GetMissionProgress(playerid)
{
    return PlayerInfo[playerid][MISION1_PLAYER];
}
stock Player_GetMissionProgress2(playerid)
{
    return PlayerInfo[playerid][MISION2_PLAYER];
}
//=====================[ Configuration ] =======================================
stock VariablesServer()
{
format(file,sizeof(file),"ladmin/config/VariablesConfig.ini");

	if(!dini_Exists(file))
	{
		dini_Create(file);
		print("\n >CONFIGURACIONES VARIABLES CREADAS");
	}

if(!dini_Isset(file,"SD_MASACRE"))  dini_IntSet(file, "SD_MASACRE", 0);	
if(!dini_Isset(file,"SINCLAN_MASACRE"))  dini_IntSet(file, "SINCLAN_MASACRE", 0);
if(!dini_Isset(file,"SWO_MASACRE"))  dini_IntSet(file, "SWO_MASACRE", 0);	
if(!dini_Isset(file,"MID_MASACRE"))  dini_IntSet(file, "MID_MASACRE", 0);	
if(!dini_Isset(file,"SD_CONQUISTAS"))  dini_IntSet(file, "SD_CONQUISTAS", 0);	
if(!dini_Isset(file,"GOD_CONQUISTAS"))  dini_IntSet(file, "GOD_CONQUISTAS", 0);	
if(!dini_Isset(file,"GOD_MASACRE"))  dini_IntSet(file, "GOD_MASACRE", 0);	
if(!dini_Isset(file,"SWO_CONQUISTAS"))  dini_IntSet(file, "SWO_CONQUISTAS", 0);	


	if(dini_Exists(file))
	{
		VariablesInfo[SD_MASACRE] = dini_Int(file,"SD_MASACRE");
		VariablesInfo[SD_CONQUISTAS] = dini_Int(file,"SD_CONQUISTAS");
		VariablesInfo[GOD_MASACRE] = dini_Int(file,"GOD_MASACRE");
		VariablesInfo[GOD_CONQUISTAS] = dini_Int(file,"GOD_CONQUISTAS");
		VariablesInfo[SWO_MASACRE] = dini_Int(file,"SWO_MASACRE");
		VariablesInfo[SWO_CONQUISTAS] = dini_Int(file,"SWO_CONQUISTAS");
		VariablesInfo[SINCLAN_MASACRE] = dini_Int(file,"SINCLAN_MASACRE");
		VariablesInfo[MID_MASACRE] = dini_Int(file,"MID_MASACRE");
		print("\n CONFIGURACIÓNES VARIABLES CARGADAS");
	}
	return 1;
}
stock UpdateConfig()
{
	new string[100], File:file2; format(file,sizeof(file),"ladmin/config/Config.ini");
	
	ForbiddenWordCount = 0;
	BadNameCount = 0;
	BadPartNameCount = 0;
    for(new i; i != MAX_VEHICLES; i++) if(!EsVehiculoOcupado(i)) SetVehicleToRespawn(i);
	
	if(!dini_Exists("ladmin/config/TempBans.txt")) {dini_Create("ladmin/config/TempBans.txt");}
 	if(!dini_Exists("ladmin/config/SHD.txt")) {dini_Create("ladmin/config/SHD.txt");}
 	if(!dini_Exists("ladmin/config/RangeBan.txt")) {dini_Create("ladmin/config/RangeBan.txt");}
	if(!dini_Exists("ladmin/config/aka.txt")) {dini_Create("ladmin/config/aka.txt");}
	
	if(!dini_Exists(file))
	{
		dini_Create(file);
		print("\n >Configuration File Successfully Created");
	}

	if(!dini_Isset(file,"MaxPing")) dini_IntSet(file,"MaxPing",1200);
	if(!dini_Isset(file,"ReadPms")) dini_IntSet(file,"ReadPMs",1);
	if(!dini_Isset(file,"ReadCmds")) dini_IntSet(file,"ReadCmds",1);
	if(!dini_Isset(file,"MaxAdminLevel")) dini_IntSet(file,"MaxAdminLevel",8);
	if(!dini_Isset(file,"AdminOnlySkins")) dini_IntSet(file,"AdminOnlySkins",0);
	if(!dini_Isset(file,"AdminSkin")) dini_IntSet(file,"AdminSkin",217);
	if(!dini_Isset(file,"AdminSkin2")) dini_IntSet(file,"AdminSkin2",214);
	if(!dini_Isset(file,"AntiBot")) dini_IntSet(file,"AntiBot",1);
	if(!dini_Isset(file,"AntiSpam")) dini_IntSet(file,"AntiSpam",1);
	if(!dini_Isset(file,"AntiSwear")) dini_IntSet(file,"AntiSwear",1);
	if(!dini_Isset(file,"NameKick")) dini_IntSet(file,"NameKick",1);
 	if(!dini_Isset(file,"PartNameKick")) dini_IntSet(file,"PartNameKick",1);
	if(!dini_Isset(file,"NoCaps")) dini_IntSet(file,"NoCaps",0);
	if(!dini_Isset(file,"Locked")) dini_IntSet(file,"Locked",0);
	if(!dini_Isset(file,"SaveWeap")) dini_IntSet(file,"SaveWeap",1);
	if(!dini_Isset(file,"SaveMoney")) dini_IntSet(file,"SaveMoney",1);
	if(!dini_Isset(file,"ConnectMessages")) dini_IntSet(file,"ConnectMessages",1);
	if(!dini_Isset(file,"AdminCmdMessages")) dini_IntSet(file,"AdminCmdMessages",1);
	if(!dini_Isset(file,"AutoLogin")) dini_IntSet(file,"AutoLogin",1);
	if(!dini_Isset(file,"MaxMuteWarnings")) dini_IntSet(file,"MaxMuteWarnings",4);
	if(!dini_Isset(file,"MustLogin")) dini_IntSet(file,"MustLogin",0);
	if(!dini_Isset(file,"MustRegister")) dini_IntSet(file,"MustRegister",0);

	if(dini_Exists(file))
	{
		ServerInfo[MaxPing] = dini_Int(file,"MaxPing");
		ServerInfo[ReadPMs] = dini_Int(file,"ReadPMs");
		ServerInfo[ReadCmds] = dini_Int(file,"ReadCmds");
		ServerInfo[MaxAdminLevel] = dini_Int(file,"MaxAdminLevel");
		ServerInfo[AdminOnlySkins] = dini_Int(file,"AdminOnlySkins");
		ServerInfo[AdminSkin] = dini_Int(file,"AdminSkin");
		ServerInfo[AdminSkin2] = dini_Int(file,"AdminSkin2");
		ServerInfo[AntiBot] = dini_Int(file,"AntiBot");
		ServerInfo[AntiSpam] = dini_Int(file,"AntiSpam");
		ServerInfo[AntiSwear] = dini_Int(file,"AntiSwear");
		ServerInfo[NameKick] = dini_Int(file,"NameKick");
		ServerInfo[PartNameKick] = dini_Int(file,"PartNameKick");
		ServerInfo[NoCaps] = dini_Int(file,"NoCaps");
		ServerInfo[Locked] = dini_Int(file,"Locked");
		ServerInfo[GiveWeap] = dini_Int(file,"SaveWeap");
		ServerInfo[GiveMoney] = dini_Int(file,"SaveMoney");
		ServerInfo[ConnectMessages] = dini_Int(file,"ConnectMessages");
		ServerInfo[AdminCmdMsg] = dini_Int(file,"AdminCmdMessages");
		ServerInfo[AutoLogin] = dini_Int(file,"AutoLogin");
		ServerInfo[MaxMuteWarnings] = dini_Int(file,"MaxMuteWarnings");
		ServerInfo[MustLogin] = dini_Int(file,"MustLogin");
		ServerInfo[MustRegister] = dini_Int(file,"MustRegister");
		print("\n CONFIGURACIÓNES LOADED");
	}

	//forbidden names
	if((file2 = fopen("ladmin/config/ForbiddenNames.cfg",io_read)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            BadNames[BadNameCount] = string;
            BadNameCount++;
		}
		fclose(file2);	printf(" -%d Forbidden Names Loaded", BadNameCount);
	}


	//forbidden part of names
	if((file2 = fopen("ladmin/config/ForbiddenPartNames.cfg",io_read)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            BadPartNames[BadPartNameCount] = string;
            BadPartNameCount++;
		}
		fclose(file2);	printf(" -%d Forbidden Tags Loaded", BadPartNameCount);
	}

	//forbidden words
	if((file2 = fopen("ladmin/config/ForbiddenWords.cfg",io_read)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            ForbiddenWords[ForbiddenWordCount] = string;
            ForbiddenWordCount++;
		}
		fclose(file2);	printf(" -%d Forbidden Words Loaded", ForbiddenWordCount);
	}
	return 1;
	}
//------------------------------------------------------------------------------

public MessageToPlayerVIP(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i) == 1)
	if(PlayerInfo[i][VIP_TIENE] >= 1)
	SendClientMessage(i, color, string2);
	}
	return 1;
}
public MessageToPlayerCLANSD(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i) == 1)
	if(PlayerInfo[i][CLAN_TIENE] == 1)
	SendClientMessage(i, color, string2);
	}
	return 1;
}
public MessageToPlayerCLANMID(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i) == 1)
	if(PlayerInfo[i][CLAN_TIENE] == 2)
	SendClientMessage(i, color, string2);
	}
	return 1;
}
public MessageToPlayerCLANSWO(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i) == 1)
	if(PlayerInfo[i][CLAN_TIENE] == 3)
	SendClientMessage(i, color, string2);
	}
	return 1;
}
public MessageToPlayerCLANGOD(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i) == 1)
	if(PlayerInfo[i][CLAN_TIENE] == 4)
	SendClientMessage(i, color, string2);
	}
	return 1;
}
public MessageToPlayerCLANOG(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	if(IsPlayerConnected(i) == 1)
	if(PlayerInfo[i][CLAN_TIENE] == 5)
	SendClientMessage(i, color, string2);
	}
	return 1;
}
//===============================================================================
public OnRconLoginAttempt(ip[], password[], success)
{
	if(!success)
	{
		if(!dini_Exists("ladmin/config/BadRconLogins.txt"))
			dini_Create("ladmin/config/BadRconLogins.txt");

		new attempts=dini_Int("ladmin/config/BadRconLogins.txt",ip);
		attempts++;
		if(attempts>=MAX_RCON_ATTEMPS)
		{
			new cmd[32];
			format(cmd,sizeof(cmd),"banip %s",ip);
			SendRconCommand(cmd);
		}
		dini_IntSet("ladmin/config/BadRconLogins.txt",ip,attempts);
	}
//====================================
// CORRECT RCON
//====================================
	#if EnableTwoRcon == true
	else
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
  			if(IsPlayerConnected(i))
  			{
  			    new pIP[16];
				GetPlayerIp(i, pIP, 16);
				if(!strcmp(pIP,ip,true))
				{
					format(string2,sizeof(string2),"Este Servidor Usa Un Sistema De 2 Contraseñas RCON. \n\nPara Acceder Al RCON, Tienes Que Insertar La Segunda RCON.");
					ShowPlayerDialog(i, DIALOG_TYPE_RCON2, DIALOG_STYLE_INPUT,"Ladmin - RCON!",string2, "Aceptar", "Salir");
				}
			}
		}
	}
	#endif
}
//=====================[ SAVING DATA ] =========================================
forward SaveToFile(filename[],text[]);
public SaveToFile(filename[],text[])
{
	#if defined SAVE_LOGS
	new File:LAdminfile, filepath[256], year,month,day, hour,minute,second;
	getdate(year,month,day); gettime(hour,minute,second);
	
	format(filepath,sizeof(filepath),"ladmin/logs/%s.txt",filename);
	LAdminfile = fopen(filepath,io_append);
	format(string2,sizeof(string2),"[%d.%d.%d %d:%d:%d] %s\r\n",day,month,year,hour,minute,second,text);
	fwrite(LAdminfile,string2);
	fclose(LAdminfile);
	#endif
	
	return 1;
}

stock SaveToSerial(Serial[])
{
	new File:LAdminfile, filepath[256];
	format(filepath,sizeof(filepath),"ladmin/config/SHD.txt",Serial);
	LAdminfile = fopen(filepath,io_append);
	format(string2,sizeof(string2),"%s\r\n",Serial);
	fwrite(LAdminfile,string2);
	fclose(LAdminfile);
	return 1;
}
stock SaveToRBan(IpBan[])
{
	new File:LAdminfile, filepath[256];
	format(filepath,sizeof(filepath),"ladmin/config/RangeBan.txt",IpBan);
	LAdminfile = fopen(filepath,io_append);
	format(string2,sizeof(string2),"%s\r\n",IpBan);
	fwrite(LAdminfile,string2);
	fclose(LAdminfile);
	return 1;
}


//====================================================================================

stock EsVehiculoOcupado(vehicleid)
{
for(new i=0; i<GetMaxPlayers(); i++) if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER) return 1;
return 0;
}

stock RangeBan(playerid)
{
new pos, oldpos,tmp[128], ip[15], ip2[15];

GetPlayerIp(playerid, ip, sizeof(ip));

pos = strfind(ip, ".", true);
pos++;

for(new i = 0; i < pos; i++)
{
ip2[i] = ip[pos-pos+i];
}

pos--;

ip[pos] = ' ';

oldpos = pos;
oldpos++;

pos = strfind(ip, ".", true);
pos++;

for(new i = oldpos; i < pos; i++)
{
ip2[i] = ip[pos-pos+i];
}

format(ip2, sizeof(ip2), "%s*.*", ip2);
format(tmp, sizeof(tmp), "banip %s", ip2);
SendRconCommand(tmp);
SaveToRBan(ip2);
Kick(playerid);
return ip2;
}

//------------------------------------------------
/*stock SetPlayerVip(playerid)
{
if(PlayerInfo[playerid][LoggedIn] == 1)
{
new SuScore;
SuScore=GetPlayerScore(playerid);

if(10000 < SuScore >= 99999999)
{
if(PlayerInfo[playerid][pVip] < 5)
{
GameTextPlayer(playerid,"Ascendido a Extremo", 2000, 3);
dUserSetINT(PlayerName2(playerid)).("AccountType",(5));
PlayerInfo[playerid][pVip] = 5;
SendClientMessage(playerid,-1,"{00FF49}Tu Cuenta Vip Actual Es: Cuenta Vip Extremo");
}
return 1;
}
else if(5000 < SuScore >= 9999999 )
{
if(PlayerInfo[playerid][pVip] < 4)
{
GameTextPlayer(playerid,"Ascendido a Platinum", 2000, 3);
dUserSetINT(PlayerName2(playerid)).("AccountType",(4));
PlayerInfo[playerid][pVip] = 4;
SendClientMessage(playerid,-1,"{00FF49}Tu Cuenta Vip Actual Es: Cuenta Vip Premium");
}
return 1;
}
else if(2500 < SuScore >= 200000 )
{
if(PlayerInfo[playerid][pVip] < 3)
{
GameTextPlayer(playerid,"Ascendido a Gold", 2000, 3);
dUserSetINT(PlayerName2(playerid)).("AccountType",(3));
PlayerInfo[playerid][pVip] = 3;
SendClientMessage(playerid,-1,"{00FF49}Tu Cuenta Vip Actual Es: Cuenta Vip Gold");
}
return 1;
}
else if(1000 < SuScore >= 150000 )
{
if(PlayerInfo[playerid][pVip] < 2)
{
GameTextPlayer(playerid,"Ascendido a Silver", 2000, 3);
dUserSetINT(PlayerName2(playerid)).("AccountType",(2));
PlayerInfo[playerid][pVip] = 2;
SendClientMessage(playerid,-1,"{00FF49}Tu Cuenta Vip Actual Es: Cuenta Vip Silver");
}
return 1;
}
else if(SuScore >= 100000 )
{
if(PlayerInfo[playerid][pVip] < 1)
{
GameTextPlayer(playerid,"Ascendido a Bronce", 2000, 3);
dUserSetINT(PlayerName2(playerid)).("AccountType",(1));
PlayerInfo[playerid][pVip] = 1;
SendClientMessage(playerid,-1,"{00FF49}Tu Cuenta Vip Actual Es: Cuenta Vip Bronce");
}
return 1;
}
}
return 1;
}*/
//------------------------------------------------

stock IsValidName(string[])
{
    for(new i = 0, j = strlen(string); i < j; i++)
    {
        switch(string[i])
        {
            case '0' .. '9': continue;
            case 'a' .. 'z': continue;
            case 'A' .. 'Z': continue;
            case '_': continue;
            case '$': continue;
            case '.': continue;
            case '=': continue;
            case '(': continue;
            case ')': continue;
            case '[': continue;
            case ']': continue;
            default: return 0;
        }
    }
    return 1;
}
stock IsValidAnnounce(string[])
{
    for(new i = 0, j = strlen(string); i < j; i++)
    {
        switch(string[i])
        {
            case '0' .. '9': continue;
            case 'a' .. 'z': continue;
            case 'A' .. 'Z': continue;
            case '_': continue;
            case '-': continue;
            case '$': continue;
            case '.': continue;
            case '>': continue;
            case '<': continue;
            case '=': continue;
            case '(': continue;
            case ')': continue;
            case '[': continue;
            case ']': continue;
            case '/': continue;
            case '?': continue;
            case '!': continue;
            case ' ': continue;
            case ':': continue;
            case ';': continue;
			case 'á': continue;
			case 'Á': continue;
			case 'é': continue;
			case 'É': continue;
			case 'í': continue;
			case 'Í': continue;
			case 'ó': continue;
			case 'Ó': continue;
			case 'ú': continue;
			case 'Ú': continue;
			case 'ñ': continue;
			case 'Ñ': continue;
            default: return 0;
        }
    }
    return 1;
}
stock Desbug(string[])
{
		new szFixed[1024], iPos, iLen;
		for (iLen = strlen(string); iPos < iLen; iPos ++)
		{
			switch (string[iPos])
			{
				case 'á':	szFixed[iPos] = 152;
				case 'Á':	szFixed[iPos] = 129;
				case 'é':	szFixed[iPos] = 158;
				case 'É':	szFixed[iPos] = 135;
				case 'í':	szFixed[iPos] = 162;
				case 'Í':	szFixed[iPos] = 139;
				case 'ó':	szFixed[iPos] = 166;
				case 'Ó':	szFixed[iPos] = 143;
				case 'ú':	szFixed[iPos] = 170;
				case 'Ú':	szFixed[iPos] = 147;
				case 'ñ':	szFixed[iPos] = 174;
				case 'Ñ':	szFixed[iPos] = 173;
				default:	szFixed[iPos] = string[iPos];
			}
		}
		return szFixed;
}
stock GameTextAll(texto[], time, style)
{
	GameTextForAll(Desbug(texto),time,style);
	return 1;
}
stock GameTextPlayer(playerid,texto[], time, style)
{
	GameTextForPlayer(playerid,Desbug(texto),time,style);
	return 1;
}
stock EstaEnCuadrado(playerid, Float:xmin, Float:ymin, Float:xmax, Float:ymax)
{
new Float:x, Float:y, Float:z;
GetPlayerPos(playerid, x, y, z);

if(x > xmin && x < xmax && y > ymin && y < ymax) return 1;
return 0;
}
stock GetNumberOfPlayersOnThisIP(test_ip[])
{
	new against_ip[32+1];
	new x = 0;
	new ip_count = 0;
	for(x=0; x<MAX_PLAYERS; x++) {
		if(IsPlayerConnected(x)) {
		    GetPlayerIp(x,against_ip,32);
		    if(!strcmp(against_ip,test_ip)) ip_count++;
		}
	}
	return ip_count;
}

/*stock IsPlayerFlooding(playerid)
{
	if(GetTickCount() - iPlayerChatTime[playerid] < 3000)
	    return 1;

	return 0;
}*/

	stock crashear(playerid)
	{
	ApplyAnimation(playerid,"Fuck", "M_smkasdf_loop_", 4.0, 1, 0, 0, 0, 0);
	ApplyAnimation(playerid,"Crashea", "M_sasfloop_", 4.0, 1, 0, 0, 0, 0);
	ApplyAnimation(playerid,"PorFavor", "sdgsdf_", 4.0, 1, 0, 0, 0, 0);
	GameTextForPlayer(playerid, "¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 1000, 0);
 	GameTextForPlayer(playerid, "¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 2000, 1);
  	GameTextForPlayer(playerid, "¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 3000, 2);
  	GameTextForPlayer(playerid, "¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 4000, 3);
  	GameTextForPlayer(playerid, "¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 5000, 4);
  	GameTextForPlayer(playerid, "¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 6000, 5);
  	GameTextForPlayer(playerid, "¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 7000, 6);
	ApplyAnimation(playerid,"locrasheax", "M_smkleafds_", 4.0, 1, 0, 0, 0, 0);
	}
	
	stock DetectarSpam(SPAM[])
	{
	
    new SSPAM;
    new CUENTAP,CUENTAN,CUENTADP,CUENTAGB;
	for(SSPAM = 0; SSPAM < strlen(SPAM); SSPAM ++)
	{
	    if(SPAM[SSPAM] == '.') CUENTAP ++;
	    if(SPAM[SSPAM] == '0' || SPAM[SSPAM] == '1' || SPAM[SSPAM] == '2' || SPAM[SSPAM] == '3' || SPAM[SSPAM] == '4' || SPAM[SSPAM] == '5' || SPAM[SSPAM] == '6' || SPAM[SSPAM] == '7' || SPAM[SSPAM] == '8' || SPAM[SSPAM] == '9') CUENTAN ++; //Cuenta los Numeros
	    if(SPAM[SSPAM] == ':') CUENTADP ++;
	    if(SPAM[SSPAM] == '_') CUENTAGB ++;
	}
 	if(CUENTAP >= 2 && CUENTAN >= 5) return 1;
 	if(CUENTAGB >= 2 && CUENTAN >= 5) return 1;
 	if(CUENTADP >= 1 && CUENTAN >= 4) return 1;
 	if(CUENTAN >= 8) return 1;
 	if(strfind(SPAM, "Amanecer Zombie", true) != -1 || strfind(SPAM, "AmanecerZombie", true) != -1 || strfind(SPAM, "Infeccion Zombie", true) != -1 || strfind(SPAM, "InfeccionZombie", true) != -1 || strfind(SPAM, ".es", true) != -1 || strfind(SPAM, ".tk", true) != -1) return 1;
 	return 0;
	}
	
		stock NickSpam(SPAM[])
	{

    new SSPAM;
    new CUENTAP,CUENTAN,CUENTAGB;
	for(SSPAM = 0; SSPAM < strlen(SPAM); SSPAM ++)
	{
	    if(SPAM[SSPAM] == '.') CUENTAP ++;
	    if(SPAM[SSPAM] == '0' || SPAM[SSPAM] == '1' || SPAM[SSPAM] == '2' || SPAM[SSPAM] == '3' || SPAM[SSPAM] == '4' || SPAM[SSPAM] == '5' || SPAM[SSPAM] == '6' || SPAM[SSPAM] == '7' || SPAM[SSPAM] == '8' || SPAM[SSPAM] == '9') CUENTAN ++; //Cuenta los Numeros
	    if(SPAM[SSPAM] == '_') CUENTAGB ++;
	}
 	if(CUENTAP >= 3 && CUENTAN >= 7) return 1;
 	if(CUENTAGB >= 1 && CUENTAN >= 7) return 1;
 	if((strfind(SPAM, ".com", true) != -1 || strfind(SPAM, ".com.ar", true) != -1 || strfind(SPAM, ".org", true) != -1 || strfind(SPAM, ".net", true) != -1 || strfind(SPAM, ".es", true) != -1 || strfind(SPAM, ".tk", true) != -1) && CUENTAN >= 4 ) return 1;
	return 0;
	}
	
	stock CambiarNickNoob(playerid)
	{
	new nickname=random(15);
	if (nickname==0) {	SetPlayerName(playerid, "Naber");}
	else if (nickname==1) { SetPlayerName(playerid, "Nobato");}
	else if (nickname==2) {	SetPlayerName(playerid, "Noob");}
	else if (nickname==3) {	SetPlayerName(playerid, "asdasd");}
	else if (nickname==4) {	SetPlayerName(playerid, "SuperGay");}
	else if (nickname==5) {	SetPlayerName(playerid, "asdffO");}
	else if (nickname==6) {	SetPlayerName(playerid, "gta_san_andreas");}
	else if (nickname==7) { SetPlayerName(playerid, "Nuevo");}
	else if (nickname==8) {	SetPlayerName(playerid, "Usuario");}
	else if (nickname==9) {	SetPlayerName(playerid, "Bienvenido");}
	else if (nickname==10) {	SetPlayerName(playerid, "PRO_sdfsd");}
	else if (nickname==11) {	SetPlayerName(playerid, "sdfRO");}
	else if (nickname==12) {	SetPlayerName(playerid, "gta_sa.exe");}
	else if (nickname==13) {	SetPlayerName(playerid, "samp.exe");}
	else if (nickname==14) {	SetPlayerName(playerid, "justin");}
	}
	
	stock KickearFree(playerid)
	{
	format(string2,sizeof(string2),"%s ha sido expulsado del servidor. (Razon: Posible FreeScore)", PlayerName2(playerid));
	SendClientMessageToAll(grey,string2);
	SaveToFile("KickLog",string2);
	Kick( playerid );
	}


iswheelmodel(modelid) {
    new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
    for(new wm; wm < sizeof(wheelmodels); wm++) {
        if (modelid == wheelmodels[wm])
            return true;
    }
    return false;
}

IllegalCarNitroIde(carmodel) {
    new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
    for(new iv; iv < sizeof(illegalvehs); iv++) {
        if (carmodel == illegalvehs[iv])
            return true;
    }
    return false;
}
//ZONAS
stock IsPlayerInZone(playerid, zoneid)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);	
    return (x > ZoneInfo[zoneid][zMinX] && x < ZoneInfo[zoneid][zMaxX] && y > ZoneInfo[zoneid][zMinY] && y < ZoneInfo[zoneid][zMaxY]);
}
stock IsZoneBlocked(zoneid)
{
    if (ZoneCaptureTime[zoneid] == 0 || (gettime() - ZoneCaptureTime[zoneid]) >= 999)
    {
        return false; // La zona no está bloqueada
    }
    return true; // La zona está bloqueada
}
stock GetPlayersInZone(zoneid, clanid)
{
    new count;
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i) && PlayerInfo[i][CLAN_TIENE] == clanid && IsPlayerInZone(i, zoneid))
        {
            if(GetPlayerVirtualWorld(i) == 0)
            {       
                if(IsZoneBlocked(zoneid))
                {
                    if(!MessageShown[i][0])
                    {
                        ShowTDN(i, 20000, "Esta zona esta bloqueada temporalmente porque fue recientemente capturada.");
                        MessageShown[i][0] = true; // Marcar mensaje como mostrado
                    }
                }       
                else 
                {   
                    if(GetPlayerState(i) == PLAYER_STATE_ONFOOT)
                    {
                        if(!MessageShown[i][1])
                        {
                            ShowTDN(i, 20000, "Permanece en la zona para capturarla.");
                            MessageShown[i][1] = true; // Marcar mensaje como mostrado
                        }
                    }
                    else
                    {
                        if(!MessageShown[i][1])
                        {
                            ShowTDN(i, 20000, "Para obtener recompensas al capturar esta zona debes bajarte de tu vehiculo.");
                            MessageShown[i][1] = true; // Marcar mensaje como mostrado
                        }
                    }
                }
                count++;
            }
        }
    }
    return count;
}


//ZONAS
stock islegalcarmod(vehicleide, componentid) {
    new modok = false;
    if ( (iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010))) {
        new nosblocker = IllegalCarNitroIde(vehicleide);
        if (!nosblocker)
            modok = true;
    } else {
        for(new lm; lm < sizeof(legalmods); lm++) {
            if (legalmods[lm][0] == vehicleide) {
                for(new J = 1; J < 22; J++) {
                    if (legalmods[lm][J] == componentid)
                        modok = true;
                }
            }
        }
    }
    return modok;
}

	stock ConectadoOk(playerid)
	{
		if(GetTickCount() - TimeConectado[playerid] > 5000)
		    return 1;

		return 0;
	}

	stock ELOY9N_ResetPlayerWeapons(playerid)
	{
	for(new s=0;s<47;s++)
	{
	LegalWeapons[playerid][s]=0;
	}
	ResetPlayerWeapons(playerid);
	return 1;
	}

	stock ELOY9N_GivePlayerWeapon(playerid, weaponid, ammo)
	{
	for(new x=0;x<47;x++)
	{
    	if(weaponid==x)
    	    LegalWeapons[playerid][x]=1;
 	}
 	GivePlayerWeapon(playerid, weaponid, ammo);
	return 1;
	}
	
	stock IsIlegalWeapon(playerid)
	{
	for (new i = 0; i<13; i++)
	{
		GetPlayerWeaponData(playerid, i, weapons2[playerid][i], weapons3[playerid][i]);
		for (new x = 0; x < 47; x++)
		{
			if((weapons2[playerid][i] == x) && (47 > x > 0) && (weapons3[playerid][i] > 1) && (LegalWeapons[playerid][weapons2[playerid][i]]==0)){ return 1; }
	    }
	}
		return 0;
	}
	
	stock DarJetpackOficial(playerid)
	{
	JetpackLegal[playerid] = 1;
	SetPlayerSpecialAction(playerid, 2);
	return 1;
	}
	
	/*stock IsPlayerFloodingCMD(playerid)
	{
		if(GetTickCount() - iPlayerChatTime[playerid] < 1500)
		    return 1;

		return 0;
	}*/
	/*strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
	*/
	stock Check()
{
	new players;
	for(new i, p = GetMaxPlayers(); i < p; i ++)
	{
	    if(!IsPlayerConnected(i) || !EstaEnEvento[i]) continue;
	    players++;
	}
	if(!players) { str = "Ningún jugador entró"; }
	else if(players == 1) { str = "1 jugador entro"; }
	else { format(str, sizeof str, "%d jugadores entraran", players); }
	return str;
}

stock Check2()
{
	new players;
	for(new i, p = GetMaxPlayers(); i < p; i ++)
	{
	    if(!IsPlayerConnected(i) || !EstaEnEvento[i]) continue;
	    players++;
	}
	return players;
}
//------------------------------------------------------
public DudaEnviadaReset(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(DudaEnviada[playerid] == 1)
		{
		DudaEnviada[playerid] = 0;
		GameTextForPlayer(playerid, "~n~_~n~_~n~_~g~~h~Ya Pudes hacernos otra duda si deseas~n~_~y~~h~:)", 7000, 5);
		}
	}
	return 1;
}

/*public FCNPC_OnDeath(npcid, killerid, weaponid)
{
	if(killerid != INVALID_PLAYER_ID) SetPlayerScore(killerid,(GetPlayerScore(killerid))+4);   // senddeath agregado
	//#if defined USE_STATS
	//		PlayerInfo[killerid][Kills] = score;
	  //  	#endif
	  PlayerInfo[killerid][Kills]+=4;
	  ELOY9N_GivePlayerMoney(killerid, 2000);
	  SendDeathMessage(killerid, npcid, weaponid);
	  GameTextForPlayer(killerid,"_~n~_~n~_~n~_~n~_~n~_~n~_~n~~g~->~r~ mataste un zombie ~g~<-_~n~~g~+4 score_~n~~g~+$2000",3000,3);
	//if(IsPlayerAimingTargetBodyPart(killerid, npcid, BODY_PART_HEAD)) Player[killerid][tHeadS]++;
	//UpdateServerButtom();
	return 1;
}*/

//forward GetPTeam(I);
//public GetPTeam(I) { return gTeam[I]; }



//-----------------------------------------forwards npc----------

/*forward UpdateServerButtom();
public UpdateServerButtom()
{
	new TotalZ = MAX_ZOMBIES;
	for(new I = 0; I < MAX_ZOMBIES; I++)
	{
	    if(!IsSpawnedZombie(I) || FCNPC_IsDead(Zombie[I][zID]))
	    {
	        TotalZ--;
		}
	}
	//TextDrawSetString(buttomInfos[0], FormatStringX("~g~~h~~h~~h~Zumbis vivos~w~: %d", TotalZ));
 	new TotalM = MAX_MILITARES;
	for(new I = 0; I < MAX_MILITARES; I++)
	{
	    if(FCNPC_IsDead(Militar[I][ID]))
	    {
	        TotalM--;
		}
	}*/
 	//TextDrawSetString(buttomInfos[1], FormatStringX("~g~~h~~h~~h~Militares vivos~w~: %d", TotalM));
 	/*new TotalA = 0;
 	for(new I = 0; I < MAX_ITENS; I++)
 	{
		if(IsWeaponDrop(I))
		{
		    TotalA += AllDrops[I];
		}
	}*/
	//TextDrawSetString(buttomInfos[2], FormatStringX("~b~~h~~h~~h~Armas em jogo~w~: %d", TotalA));
	/*new TotalPA = 0;
	foreach(Player, I)
	{
	    if(Player[I][ArmaP] > 0 || Player[I][ArmaS] > 0)
	    {
	        TotalPA++;
		}
	}*/
	//TextDrawSetString(buttomInfos[3], FormatStringX("~b~~h~~h~~h~Jogadores c/ arma~w~: %d", TotalPA));
	//TextDrawSetString(buttomInfos[4], FormatStringX("Recorde online~w~: %d", RecordeInGame));
	/*return 1;
}*/

/*public GetZombieBlankSlot()
{
	new slot = -1;
	for(new I = 0; I < MAX_ZOMBIES; I++)
	{
	    if(Zombie[I][pID] == -1)
	    {
	        slot = I;
	        break;
		}
	}
	return slot;
}

stock IsConnectedZombie(zid)
{
	if(Zombie[zid][zID] != -1) return 1;
	return 0;
}

stock IsSpawnedZombie(zid)
{
	if(Zombie[zid][pID] != -1) return 1;
	return 0;
}*/
//--------------------------------------


/*stock IsValidZone(zoneid)
{
	if(zoneid > 0 && zoneid < MAX_NODES)
	    return true;
	else
	    return false;
}*/


//------------------------------------------

/*public SpawnZombieToPlayer(playerid, zid)
{
	if(zid == -1) return 1;
	if(IsConnectedZombie(zid)) DeleteZombie(zid);
	new I = zid;
    new S[32];
    new Float:fX, Float:fY, Float:fZ;
    GetPlayerPos(playerid, fX, fY, fZ);
	format(S, sizeof(S), "[Z]ombie[BoT]%d", I);
    Zombie[I][zID] = FCNPC_Create(S);
    Zombie[I][Attacking] = -1;
	Zombie[I][Fallowing] = -1;
	Zombie[I][pID] = playerid;
	new l = random(4);
	if(l > 2) FCNPC_Spawn(Zombie[I][zID], SkinsNPC[random(sizeof(SkinsNPC))][0], fX + random(100), fY + random(100), fZ);
	else FCNPC_Spawn(Zombie[I][zID], SkinsNPC[random(sizeof(SkinsNPC))][0], fX - random(100), fY - random(100), fZ);
	if(random(5) > 2) FCNPC_SetWeapon(Zombie[I][zID], random(9 - 1) + 1);
 	FCNPC_setearvida(Zombie[I][zID], 99.0);
	//
	new node = random(MAX_NODES);
	while(!IsValidZone(node))
 		node = random(MAX_NODES);
	new vehnodes, pednodes, navinodes;
	FCNPC_GetNodeInfo(node, vehnodes, pednodes, navinodes);
	new point;
	if(random(2) == 1 && pednodes != 0)
		point = random(pednodes) + pednodes;
    else
    	point = random(pednodes);
	FCNPC_SetNodePoint(node, point);
	if(point < vehnodes)
	{
		new Float:x, Float:y, Float:z;
		FCNPC_GetNodePointPosition(node, x, y, z);
		FCNPC_SetPosition(Zombie[I][zID], x, y, z+1);
	}
	FCNPC_GetPosition(Zombie[I][zID], fX, fY, fZ);
	MapAndreas_FindZ_For2DCoord(fX, fY, fZ);
	FCNPC_SetPosition(Zombie[I][zID], fX, fY, fZ + 1.0);
	SetPlayerColor(Zombie[I][zID], COLOR_bred);
	ShowPlayerMarkers(2); // Global, will show whatever distance
	FCNPC_PlayNode(Zombie[I][zID], node, point < pednodes ? NODE_TYPE_PED : NODE_TYPE_PED);
	return 1;
}

public DeleteZombie(zid)
{
    FCNPC_Destroy(Zombie[zid][zID]);
    Zombie[zid][zID] = -1;
    Zombie[zid][pID] = -1;
    return 1;
}

public ReconnecZombie(zid)
{
    FCNPC_Destroy(Zombie[zid][zID]);
    new S[128];
    format(S, sizeof(S), "[Z]ombie[BoT]%d", zid);
    Zombie[zid][zID] = FCNPC_Create(S);
   	Zombie[zid][Attacking] = -1;
	Zombie[zid][Fallowing] = -1;
	Zombie[zid][pID] = -1;
    return 1;
}


public oneSecond()
{
	for(new I = 0; I < MAX_ZOMBIES; I++)
	{
	    if(TempoAnn != 0)
	    {
	        if(TempoAnn == 1)
	        {
	            //TextDrawHideForAll(AnnBackGround);
			//	TextDrawHideForAll(AnnTitleB);
			//	TextDrawHideForAll(AnnPonto);
			//	TextDrawHideForAll(AnnSignal);
			//	TextDrawHideForAll(AnnTextTitle);
			//	TextDrawHideForAll(AnnTextBody);
			//	TextDrawHideForAll(AnnTempo);
				//TextDrawSetString(AnnTextTitle, TitleAnn);
				//TextDrawSetString(AnnTextBody, MessageAnn);
				//TempoAnn = 0;
	        }
	     //   TempoAnn--;
	     //   TextDrawSetString(AnnTempo, FormatStringX("Ocultando em: %d", TempoAnn));
		}
	    if(PlayerInfo[I][LoggedIn] == 1)
	    {
	        //UpdatePlayerTextDraw(I);*/
	        /*if(SaveTimer[I] != 0)
	        {
	            if(SaveTimer[I] == 1) { SalvarDados(I); SaveTimer[I] = 120; }
	            SaveTimer[I]--;
			}*/
	    /*	if(gTeam[I] == NO_TEAM)
	    	{
	        	if(PlayerInfo[I][tSpawnZ] == 1) SpawnZombieToPlayer(I, GetZombieBlankSlot());
	        	if(PlayerInfo[I][tSpawnZ] == 5) SpawnZombieToPlayer(I, GetZombieBlankSlot());
	        	if(PlayerInfo[I][tSpawnZ] == 10) SpawnZombieToPlayer(I, GetZombieBlankSlot());
	        	if(PlayerInfo[I][tSpawnZ] == 15) SpawnZombieToPlayer(I, GetZombieBlankSlot());
	        	PlayerInfo[I][tSpawnZ]--;
			}*/
			/*if(Player[I][TQuebrado] != 0)
			{
			    if(Player[I][TQuebrado] == 3 && Player[I][Quebrado] == 1)
	        	{
	           	 	TogglePlayerControllable(I, false);
	            	TogglePlayerControllable(I, true);
	            	Player[I][TQuebrado] = 1;
				}
                Player[I][TQuebrado]++;
			}*/
			/*if(Player[I][TSangrando] != 0)
			{
				if(Player[I][Sangrando] == 1 && Player[I][TSangrando] == 3)
				{
					Player[I][pVida] -= 0.3;
					SetPlayerHealth(I, Player[I][pVida]);
					Player[I][TSangrando] = 1;
				}
				Player[I][TSangrando]++;
			}*/
			/*Player[I][pFome] -= 0.25;
			Player[I][pSede] -= 0.5;
			if(Player[I][pFome] <= 0)
			{
			    Player[I][pFome] = 0;
			    Player[I][pVida] -= 0.1;
				SetPlayerHealth(I, Player[I][pVida]);
			}*/
			/*if(Player[I][pSede] <= 0)
			{
			    Player[I][pSede] = 0;
			    Player[I][pVida] -= 0.1;
				SetPlayerHealth(I, Player[I][pVida]);
			}*/
			/*if(GetPlayerState(I) == 2)
			{
				new vehid = GetPlayerVehicleID(I);
                Vehicle[vehid][Gasolina] -= 0.07;
                TextDrawSetString(FuelTD[I], FormatStringX("~b~~h~~h~%d ~y~Litros", trunc(Vehicle[vehid][Gasolina])));
                if(Vehicle[vehid][Gasolina] <= 0) Vehicle[vehid][Gasolina] = 0.0;
				if(Vehicle[vehid][Gasolina] < 0.5)
                {
                    new engine, lights, alarm, doors, bonnet, boot, objective;
               		GetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, boot, objective);
  					SetVehicleParamsEx(vehid, 0, lights, alarm, doors, bonnet, boot, objective);
				}
			}*/
			//SetPlayerScore(I, Player[I][pKills]);
		/*}
	}
	return 1;
}*/

forward CreateDamageToPlayer(playerid, Float:amount, weaponid);
public CreateDamageToPlayer(playerid, Float:amount, weaponid)
{
	new Float:HP;
	HP = PlayerInfo[playerid][pVida];
	SetPlayerHealth(playerid, HP - amount);
	if(weaponid >= 22 && weaponid <= 34 && PlayerInfo[playerid][Sangrando] == 0)
	{
	    //Player[playerid][Sangrando] = 1;
		//Player[playerid][TSangrando] = 1;
		//SetPlayerAttachedObject(playerid, 2, 18706, 1, 0.0,0.0,0.0, 0.000000, 0.000000, 0.0,0.0, 0.0, -0.100000);
        //SendClientMessage(playerid, COR_INFO, "[ FERIMENTO ] Você está sangrando, você irá perder sangue caso não se trate!");
	}
	return 1;
}

forward GetPlayerSpeed(playerid);
public GetPlayerSpeed(playerid)
{
    if(IsPlayerInAnyVehicle(playerid)) return 1;
    new Float:speed_x,Float:speed_y,Float:speed_z,Float:final_speed;
	new velocidadelol;
	GetPlayerVelocity(playerid,speed_x,speed_y,speed_z);
	final_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+(speed_z*speed_z))*136.666667; // 136.666667 = kmph  // 85.4166672= mph
	velocidadelol = floatround(final_speed,floatround_round);
	return velocidadelol;
}

/*public toNothing()
{*/
	/*new hora, minuto, segundo;
	gettime(hora, minuto, segundo);
	SetWorldTime(hora);
	if(minuto == 0 && LastC[0] + 3 == hora)
	{
	    LastC[0] = hora;
        LastC[1] = minuto;
        LastC[2] = segundo;
        for(new I = 0; I < MAX_DROPS; I++) CreateDropItem(I);
		for(new I = 0; I < MAX_ITENS; I++)
		{
		    printf("Spawnado %d itens de %s", AllDrops[I], ItemName[I]);
		}
	}
    Ann++;
	if(Ann == 1)
	{
		TextDrawSetString(buttomAnnounce[0], ConverterTexto("~r~~h~~h~~h~Fórum~w~: www.tssabr.org/forum"));
		TextDrawSetString(buttomAnnounce[1], ConverterTexto("Dúvidas, críticas, reports, bugs nos informe através de nosso fórum."));
	}
	if(Ann == 2)
	{
		TextDrawSetString(buttomAnnounce[0], ConverterTexto("~r~~h~~h~~h~Facebook~w~: www.tssabr.org/facebook"));
		TextDrawSetString(buttomAnnounce[1], ConverterTexto("Curta nossa página no Facebook e participe dos eventos do servidor."));
	}
	if(Ann == 3)
	{
		TextDrawSetString(buttomAnnounce[0], ConverterTexto("~r~~h~~h~~h~Wiki~w~: www.tssabr.org/wiki"));
		TextDrawSetString(buttomAnnounce[1], ConverterTexto("O Wiki oferece todas informações sobre o servidor e seus sistemas."));
	}
	if(Ann == 4)
	{
		TextDrawSetString(buttomAnnounce[0], ConverterTexto("~r~~h~~h~~h~YouTube~w~: www.tssabr.org/youtube"));
		TextDrawSetString(buttomAnnounce[1], ConverterTexto("Se inscreva em nosso canal do YouTube e participe de nossos vídeos."));
	}
	if(Ann == 5)
	{
		TextDrawSetString(buttomAnnounce[0], ConverterTexto("~r~~h~~h~~h~Web~w~: www.tssabr.org"));
		TextDrawSetString(buttomAnnounce[1], ConverterTexto("Visite nossa página inicial e tenha todo conteúdo em seu navegador."));
	}
	if(Ann == 6)
	{
		TextDrawSetString(buttomAnnounce[0], ConverterTexto("~r~~h~~h~~h~PainelZW~w~: www.tssabr.org/painel"));
		TextDrawSetString(buttomAnnounce[1], ConverterTexto("Acesse nosso painel e confira todos os itens em sua conta."));
        Ann = 0;
	}*/
	/*for(new I = 0; I < MAX_FOGUEIRAS; I++)
	{
	    if(Fogueira[I][Tempo] != 0)
	    {
	        Fogueira[I][Tempo]--;
			if(Fogueira[I][Tempo] == 0)
			{
			    DestroyObject(Fogueira[I][Object]);
			    DestroyObject(Fogueira[I][ObjectFogo]);
			    Fogueira[I][gX] = 0.0;
			    Fogueira[I][gY] = 0.0;
			    Fogueira[I][gZ] = 0.0;
			    Fogueira[I][Aceso] = 0;
			}
		}
	}*/
	/*for(new I = 0; I < MAX_SINALIZADORES; I++)
	{
	    if(SinalizadorI[I][Tempo] != 0)
	    {
	        SinalizadorI[I][Tempo]--;
	        if(SinalizadorI[I][Tempo] == 0)
	        {
	            DestroyObject(SinalizadorI[I][Object]);
			}
		}
	}*/
	/*if(SpawnMilitar == 0)
	{
	    for(new I = 0; I < MAX_MILITARES; I++)
		{
	    	FCNPC_Spawn(Militar[I][ID], 287, MilitarPositions[I][0], MilitarPositions[I][1], MilitarPositions[I][2]);
	    	FCNPC_SetWeapon(Militar[I][ID], 31);
	    	FCNPC_SetAmmo(Militar[I][ID], 99999);
		}
		SpawnMilitar = 1;
	}
	UpdateServerButtom();
	return 1;
}*/

/*public FCNPC_OnTakeDamage(npcid, damagerid, weaponid, bodypart, Float:health_loss)
{
    new Float:HP = FCNPC_GetHealth(npcid), damage = 2;
	if(health_loss >= 3)
	{
    	if(weaponid >= 1 && weaponid <= 15) damage = 5;     //valor or 15
    	if(weaponid == 22 || weaponid == 23) damage = 5;        //valor or 15
    	if(weaponid == 24 || weaponid == 25) damage = 7;       //valor or 20
    	if(weaponid == 26 || weaponid == 27) damage = 8;       //valor or 25
    	if(weaponid == 28 || weaponid == 29) damage = 7;       //calor or 20
    	if(weaponid == 30 || weaponid == 31) damage = 10;       //valor or 30
    	if(weaponid == 32) damage = 7; //valor original 21
    	if(weaponid == 33) damage = 20;     //valor original 60
		if(weaponid == 34) damage = 33;  // valor original 99
		//if(weaponid == 49) damage = 33;
   // 	if(IsPlayerAimingTargetBodyPart(damagerid, npcid, BODY_PART_HEAD)) damage += damage * 5;
    	if(IsPlayerAimingTargetBodyPart(damagerid, npcid, BODY_PART_TORSO)) damage += 5;
		FCNPC_setearvida(npcid, (HP - damage) + health_loss);
	}
	else FCNPC_setearvida(npcid, (HP - 3) + health_loss);
	return 1;
}*/

/*public FCNPC_OnDeath(npcid, killerid, weaponid)
{
	if(killerid != INVALID_PLAYER_ID) Player[killerid][tSpawnZ] = 180, GivePlayerMoney(killerid, 5000), SendDeathMessage(killerid, npcid, weaponid);   // senddeath agregado
	if(IsPlayerAimingTargetBodyPart(killerid, npcid, BODY_PART_HEAD)) Player[killerid][tHeadS]++;
	UpdateServerButtom();
	return 1;
}*/

/*public FCNPC_OnSpawn(npcid)
{
    UpdateServerButtom();
	for(new I = 0; I < MAX_MILITARES; I++)
	{
	    if(Militar[I][ID] == npcid) return 1;
	}
	SetPlayerColor(npcid,COLOR_bred);
	ShowPlayerMarkers(2);
//	SetPlayerAttachedObject(npcid, 1, 2908, 2, 0.064999,0.045000,0.000999, 176.500000, 5.699998, 95.000007, 0.941999, 1.082999, 1.075000 );
	SetPlayerAttachedObject(npcid, 2, 2907, 1, 0.038000,0.051000,0.027000,-94.999984, -0.299995, 89.399932, 1.0, 0.739000, 1.211000 );
	SetPlayerAttachedObject(npcid, 3, 2906, 5, -0.146000,0.000000,-0.007000,10.299988,1.500002, -89.800010, 1.0, 1.0, 1.0 );
	SetPlayerAttachedObject(npcid, 4, 2905, 10, -0.176999,0.082000,0.005000, 0.000000, 0.000000, -92.700004,1.067999, 0.662999, 0.998000 );
	//SetPlayerAttachedObject(npcid, 5, 2804, 8, 0.240999,0.034000,0.000000, 0.000000, 0.000000,91.499977, 0.757999, 1.000000, 1.214999 );
	//SetPlayerAttachedObject(npcid, 5, 2803, 1,0.132999,-0.161000,0.000000, 0.000000,91.599998,102.699989, 0.259000,0.369999, 0.719000 );
	return 1;
}*/
public Listo (playerid)
{
UsarCMD[playerid] = 0;
return 1;
}
public ListoNombre (playerid)
{
UsarCMDNOMBRE[playerid] = 0;
return 1;
}
public RegeneracionHP(playerid)
{
	new Float:HP; GetPlayerHealth(playerid, HP);
	new Float:Health;
	GetPlayerHealth(playerid,Health);
//	new Float:Falta = 100 - Health;
	if(HP < 90)
	{
	SetPlayerHealth(playerid,Health+5);
   	}
	if(HP == 95)
	{
	SetPlayerHealth(playerid,Health+5);
   	}		
	if(HP == 96)
	{
	SetPlayerHealth(playerid,Health+4);
   	}	
	if(HP == 97)
	{
	SetPlayerHealth(playerid,Health+3);
   	}	
	if(HP == 98)
	{
	SetPlayerHealth(playerid,Health+3);
   	}	
	if(HP == 99)
	{
	SetPlayerHealth(playerid,Health+3);
   	}				
	return 1;
}

public RegeneracionARMADURA(playerid)
{
	new Float:HP; GetPlayerArmour(playerid, HP);
	new Float:Health;
	GetPlayerArmour(playerid,Health);
//	new Float:Falta = 100 - Health;
	if(HP < 90)
	{
	SetPlayerArmour(playerid,Health+10);
   	}
	if(HP == 90)
	{
	SetPlayerArmour(playerid,Health+10);
   	}		
	if(HP == 91)
	{
	SetPlayerArmour(playerid,Health+9);
   	}	
	if(HP == 92)
	{
	SetPlayerArmour(playerid,Health+8);
   	}	
	if(HP == 93)
	{
	SetPlayerArmour(playerid,Health+7);
   	}		
	if(HP == 94)
	{
	SetPlayerArmour(playerid,Health+6);
   	}			
	if(HP == 95)
	{
	SetPlayerArmour(playerid,Health+5);
   	}		
	if(HP == 96)
	{
	SetPlayerArmour(playerid,Health+4);
   	}	
	if(HP == 97)
	{
	SetPlayerArmour(playerid,Health+3);
   	}	
	if(HP == 98)
	{
	SetPlayerArmour(playerid,Health+3);
   	}	
	if(HP == 99)
	{
	SetPlayerArmour(playerid,Health+3);
   	}				
	return 1;

}
public RegeneracionHPPATREON(playerid)
{
	new Float:HP; GetPlayerHealth(playerid, HP);
	new Float:Health;
	GetPlayerHealth(playerid,Health);
//	new Float:Falta = 100 - Health;
	if(HP < 90)
	{
	SetPlayerHealth(playerid,Health+10);
   	}
	if(HP == 90)
	{
	SetPlayerHealth(playerid,Health+10);
   	}		
	if(HP == 91)
	{
	SetPlayerHealth(playerid,Health+9);
   	}	
	if(HP == 92)
	{
	SetPlayerHealth(playerid,Health+8);
   	}	
	if(HP == 93)
	{
	SetPlayerHealth(playerid,Health+7);
   	}		
	if(HP == 94)
	{
	SetPlayerHealth(playerid,Health+6);
   	}			
	if(HP == 95)
	{
	SetPlayerHealth(playerid,Health+5);
   	}		
	if(HP == 96)
	{
	SetPlayerHealth(playerid,Health+4);
   	}	
	if(HP == 97)
	{
	SetPlayerHealth(playerid,Health+3);
   	}	
	if(HP == 98)
	{
	SetPlayerHealth(playerid,Health+3);
   	}	
	if(HP == 99)
	{
	SetPlayerHealth(playerid,Health+3);
   	}				
	return 1;

}
public EventoTimer()
{
Event[Trancado] = true;
//GameTextAll("~w~EVENTO\n~b~CERRADO", 4000, 3);
if(Event[Masacre] == true)
{
		//	KillTimer(VariableEventoTimer);
		//	KillTimer(VariableEventoTimerIntermedio);
		GameTextAll("~w~EVENTO\n~n~~b~MASACRE EN EL DESIERTO \n~n~~r~HA COMENZADO", 4000, 3);	
	  		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			SendClientMessage(i,red,"War Blood: {33FF33}Evento Masacre en el desierto comenzo.");
			SendClientMessage(i,red,"War Blood: {33FF33}No te alejes mucho de la zona de guerra ya que es motivo para spawnearte.");
			//PlayAudioStreamForPlayer(i,"https://dl.dropboxusercontent.com/s/fi/4dihzwrc79blda0k1cs2z/Masacre1.mp3?rlkey=hu0jo5jf1g8j91r7uuzpo2a5j&dl=0");
			if(PlayerInfo[i][VIP_TIENE] == 0 || PlayerInfo[i][VIP_TIENE] == 3)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico","Seleccionar","Cerrar");
			}
			if(PlayerInfo[i][VIP_TIENE] == 4)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS1,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime","Seleccionar","Salir");
				
			}	
			if(PlayerInfo[i][VIP_TIENE] == 5)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS2,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime\nKit {FF0000}Patreon","Seleccionar","Salir");
				
			}	
			PlayerPlaySound(i,1057,0.0,0.0,0.0);				
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
			if(PlayerInfo[i][CLAN_TIENE] == 0)
			{
			gTeam[i] = NO_TEAM;
			SetPlayerTeam(i, gTeam[i]);
		//	SetPlayerColor(i,COLOR_WHITE);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 1)
			{
			gTeam[i] = TEAM_SD;
			SetPlayerTeam(i, gTeam[i]);
		//	SetPlayerColor(i,color_ltc);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 2)
			{
			gTeam[i] = TEAM_MID;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_MID);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 3)
			{
			gTeam[i] = TEAM_SWO;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_weareone);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 4)
			{
			gTeam[i] = TEAM_GOD;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_GOD);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 5)
			{
	  		gTeam[i] = TEAM_OG;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_og);
			}
			//}
	//		format(string2,sizeof(string2),"{FF0000}STAFF {FFFFFF}%s {FFFFFF}entrego su correspondiente equipamiento a cada jugador.", n);
      //      return SendClientMessageToAll(red, string2);
		}
}
if(Event[MasacreDocks] == true)
{
		//	KillTimer(VariableEventoTimer);
		//	KillTimer(VariableEventoTimerIntermedio);
		GameTextAll("~w~EVENTO\n~n~~b~MASACRE EN OCEAN DOCKS \n~n~~r~HA COMENZADO", 4000, 3);	
	  		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			SendClientMessage(i,red,"War Blood: {33FF33}Evento Masacre en Ocean Docks comenzo.");
			SendClientMessage(i,red,"War Blood: {33FF33}No te alejes mucho de la zona de guerra ya que es motivo para spawnearte.");

			if(PlayerInfo[i][VIP_TIENE] == 0 || PlayerInfo[i][VIP_TIENE] == 3)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico","Seleccionar","Cerrar");
			}
			if(PlayerInfo[i][VIP_TIENE] == 4)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS1,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime","Seleccionar","Salir");
				
			}	
			if(PlayerInfo[i][VIP_TIENE] == 5)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS2,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime\nKit {FF0000}Patreon","Seleccionar","Salir");
				
			}	
			PlayerPlaySound(i,1057,0.0,0.0,0.0);				
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
			gTeam[i] = NO_TEAM;
			SetPlayerTeam(i, gTeam[i]);
		}
}
if(Event[WoodBury] == true)
{
		//	KillTimer(VariableEventoTimer);
		//	KillTimer(VariableEventoTimerIntermedio);
	  		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			SendClientMessage(i,red,"War Blood: {33FF33}Evento Masacre en WoodBury comenzo.");
			SendClientMessage(i,red,"War Blood: {33FF33}No te alejes mucho de la zona de juego ya que es motivo para spawnearte.");

			if(PlayerInfo[i][VIP_TIENE] == 0 || PlayerInfo[i][VIP_TIENE] == 3)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico","Seleccionar","Cerrar");
			}
			if(PlayerInfo[i][VIP_TIENE] == 4)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS1,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime","Seleccionar","Salir");
				
			}	
			if(PlayerInfo[i][VIP_TIENE] == 5)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS2,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime\nKit {FF0000}Patreon","Seleccionar","Salir");
				
			}	
			PlayerPlaySound(i,1057,0.0,0.0,0.0);				
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
			gTeam[i] = NO_TEAM;
			SetPlayerTeam(i, gTeam[i]);
		}
		GameTextAll("~w~EVENTO\n~n~~b~MASACRE EN WOODBURY \n~n~~r~HA COMENZADO", 4000, 3);	
}
if(Event[PurgaLS] == true)
{
		//	KillTimer(VariableEventoTimer);
		//	KillTimer(VariableEventoTimerIntermedio);
	  		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			SendClientMessage(i,red,"War Blood: {33FF33}Evento Purga en Los Santos comenzo.");
			SendClientMessage(i,red,"War Blood: {33FF33}No te vayas de Los Santos o seras spawneado.");
			if(PlayerInfo[i][VIP_TIENE] == 0 || PlayerInfo[i][VIP_TIENE] == 3)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico","Seleccionar","Cerrar");
			}
			if(PlayerInfo[i][VIP_TIENE] == 4)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS1,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime","Seleccionar","Salir");
				
			}	
			if(PlayerInfo[i][VIP_TIENE] == 5)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS2,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime\nKit {FF0000}Patreon","Seleccionar","Salir");
				
			}	
			PlayerPlaySound(i,1057,0.0,0.0,0.0);			
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
			gTeam[i] = NO_TEAM;
			SetPlayerTeam(i, gTeam[i]);
		}
		GameTextAll("~w~EVENTO\n~n~~b~PURGA EN LOS SANTOS \n~n~~r~HA COMENZADO", 4000, 3);		
}
if(Event[Supervivencia])
{

    for(new i, p = GetMaxPlayers(); i < p; i++)
    {
        if(!EstaEnEvento[i]) continue;

		SendClientMessage(i,red,"War Blood: {33FF33}Evento Supervivencia del nemesis.");
		SendClientMessage(i,red,"War Blood: {33FF33}¡Se el ultimo en píe!");
    }

    GameTextAll("~w~EVENTO\n~n~~b~Supervivencia del nemesis \n~n~~r~HA COMENZADO", 4000, 3);
}
if(Event[Royal_1])
{

    for(new i, p = GetMaxPlayers(); i < p; i++)
    {
        if(!EstaEnEvento[i]) continue;

		SendClientMessage(i,red,"War Blood: {33FF33}Evento Royal Rumble comenzo.");
		SendClientMessage(i,red,"War Blood: {33FF33}¡No te caigas!");

        new weaponID = meleeWeapons[random(sizeof(meleeWeapons))];
        GivePlayerWeapon(i, weaponID, 1); // Solo se da una unidad de cada arma
        SetPlayerArmour(i, 100);
        SetPlayerHealth(i, 100);
        gTeam[i] = NO_TEAM;
        SetPlayerTeam(i, gTeam[i]);
    }

    GameTextAll("~w~EVENTO\n~n~~b~Royal Rumble \n~n~~r~HA COMENZADO", 4000, 3);
}
if(Event[Royal_2])
{

    for(new i, p = GetMaxPlayers(); i < p; i++)
    {
        if(!EstaEnEvento[i]) continue;

		SendClientMessage(i,red,"War Blood: {33FF33}Evento Royal Rumble 2 comenzo.");
		SendClientMessage(i,red,"War Blood: {33FF33}¡No te caigas!");

        new weaponID = meleeWeapons[random(sizeof(meleeWeapons))];
        GivePlayerWeapon(i, weaponID, 1); // Solo se da una unidad de cada arma
        SetPlayerArmour(i, 100);
        SetPlayerHealth(i, 100);
        gTeam[i] = NO_TEAM;
        SetPlayerTeam(i, gTeam[i]);
    }

    GameTextAll("~w~EVENTO\n~n~~b~Royal Rumble 2 \n~n~~r~HA COMENZADO", 4000, 3);
}

if(Event[HarryPotter] == true)
{
		//	KillTimer(VariableEventoTimer);
		//	KillTimer(VariableEventoTimerIntermedio);
	  		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			SendClientMessage(i,red,"War Blood: {33FF33}Evento Sobrevive a Harry Potter comenzo.");
			SendClientMessage(i,red,"War Blood: {33FF33}Si te caes del edificio pierdes.");
			TogglePlayerControllable(i,true);
			PlayerPlaySound(i,1057,0.0,0.0,0.0);			

   			}
		}
		GameTextAll("~w~EVENTO\n~n~~b~SOBREVIVE A HARRY POTTER \n~n~~r~HA COMENZADO", 4000, 3);		
}
if(Event[TDM] == true)
{
		//	KillTimer(VariableEventoTimer);
		//	KillTimer(VariableEventoTimerIntermedio);
	  		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			SendClientMessage(i,red,"War Blood: {33FF33}Evento TDM comenzo.");
			SendClientMessage(i,red,"War Blood: {33FF33}No te alejes mucho de la zona de juego ya que es motivo para spawnearte.");

			if(PlayerInfo[i][VIP_TIENE] == 0 || PlayerInfo[i][VIP_TIENE] == 3)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico","Seleccionar","Cerrar");
			}
			if(PlayerInfo[i][VIP_TIENE] == 4)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS1,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime","Seleccionar","Salir");
				
			}	
			if(PlayerInfo[i][VIP_TIENE] == 5)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS2,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime\nKit {FF0000}Patreon","Seleccionar","Salir");
				
			}	
			PlayerPlaySound(i,1057,0.0,0.0,0.0);				
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
		}
		GameTextAll("~w~EVENTO\n~n~~b~HUMANOS VS EXTERMINADORES \n~n~~r~HA COMENZADO", 4000, 3);	
}
if(Event[TDM2] == true)
{
		//	KillTimer(VariableEventoTimer);
		//	KillTimer(VariableEventoTimerIntermedio);
	  		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			SendClientMessage(i,red,"War Blood: {33FF33}Evento TDM 2 comenzo.");
			SendClientMessage(i,red,"War Blood: {33FF33}No te alejes mucho de la zona de juego ya que es motivo para spawnearte.");

			if(PlayerInfo[i][VIP_TIENE] == 0 || PlayerInfo[i][VIP_TIENE] == 3)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico","Seleccionar","Cerrar");
			}
			if(PlayerInfo[i][VIP_TIENE] == 4)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS1,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime","Seleccionar","Salir");
				
			}	
			if(PlayerInfo[i][VIP_TIENE] == 5)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS2,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime\nKit {FF0000}Patreon","Seleccionar","Salir");
				
			}	
			PlayerPlaySound(i,1057,0.0,0.0,0.0);				
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
		}
		GameTextAll("~w~EVENTO\n~n~~b~HUMANOS VS EXTERMINADORES \n~n~~r~HA COMENZADO", 4000, 3);	
}
if(Event[Escondidas] == true)
{
		//	KillTimer(VariableEventoTimer);
		//	KillTimer(VariableEventoTimerIntermedio);
	  		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			SendClientMessage(i,red,"War Blood: {33FF33}Evento Escondidas en el casino comenzo.");
			SendClientMessage(i,red,"War Blood: {33FF33}¡Que la bestia no te encuentre!.");

			PlayerPlaySound(i,1057,0.0,0.0,0.0);
							
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
		}
		GameTextAll("~w~EVENTO\n~n~~b~ESCONDIDAS EN EL CASINO \n~n~~r~HA COMENZADO", 4000, 3);	
} 
if(Event[EscapeAvion] == true)
{
		//	KillTimer(VariableEventoTimer);
		//	KillTimer(VariableEventoTimerIntermedio);
	  		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			SendClientMessage(i,red,"War Blood: {33FF33}Evento avion asesino comenzo.");
			SendClientMessage(i,red,"War Blood: {33FF33}¡Abrochate el cinturon!.");

			PlayerPlaySound(i,1057,0.0,0.0,0.0);
						
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
		}
		GameTextAll("~w~EVENTO\n~n~~b~avion asesino \n~n~~r~HA COMENZADO", 4000, 3);		
}
if(Event[Oceanside] == true)
{
		//	KillTimer(VariableEventoTimer);
		//	KillTimer(VariableEventoTimerIntermedio);
	  		for(new i, p = GetMaxPlayers(); i < p; i ++)
		{
		    if(!EstaEnEvento[i]) continue;
			{
			SendClientMessage(i,red,"War Blood: {33FF33}Evento Masacre en Oceanside comenzo.");
			SendClientMessage(i,red,"War Blood: {33FF33}No te alejes mucho de la zona de juego ya que es motivo para spawnearte.");

			if(PlayerInfo[i][VIP_TIENE] == 0 || PlayerInfo[i][VIP_TIENE] == 3)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico","Seleccionar","Cerrar");
			}
			
			if(PlayerInfo[i][VIP_TIENE] == 4)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS1,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime","Seleccionar","Salir");
				
			}	
			if(PlayerInfo[i][VIP_TIENE] == 5)
			{
				ShowPlayerDialog(i,DIALOG_EVENTOARMAS2,DIALOG_STYLE_LIST,"{FF0000}Kits {FFFFFF}Evento","Kit {FFFF00}Basico\nKit {00F7FF}Prime\nKit {FF0000}Patreon","Seleccionar","Salir");
				
			}	
			PlayerPlaySound(i,1057,0.0,0.0,0.0);
							
			SetPlayerArmour(i, 100);
			SetPlayerHealth(i, 100);
   			}
			if(PlayerInfo[i][CLAN_TIENE] == 0)
			{
			gTeam[i] = NO_TEAM;
			SetPlayerTeam(i, gTeam[i]);
		//	SetPlayerColor(i,COLOR_WHITE);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 1)
			{
			gTeam[i] = TEAM_SD;
			SetPlayerTeam(i, gTeam[i]);
		//	SetPlayerColor(i,color_ltc);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 2)
			{
			gTeam[i] = TEAM_MID;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_MID);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 3)
			{
			gTeam[i] = TEAM_SWO;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_weareone);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 4)
			{
			gTeam[i] = TEAM_GOD;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_GOD);
			}
			if(PlayerInfo[i][CLAN_TIENE] == 5)
			{
	  		gTeam[i] = TEAM_OG;
			SetPlayerTeam(i, gTeam[i]);
	//		SetPlayerColor(playerid,color_og);
			}
			//}
	//		format(string2,sizeof(string2),"{FF0000}STAFF {FFFFFF}%s {FFFFFF}entrego su correspondiente equipamiento a cada jugador.", n);
      //      return SendClientMessageToAll(red, string2);
		}
		GameTextAll("~w~EVENTO\n~n~~b~MASACRE EN Oceanside\n~n~~r~HA COMENZADO", 4000, 3);	
}
			KillTimer(VariableEventoTimer);
			KillTimer(VariableEventoTimerIntermedio);
}
public EventoTimerIntermedio()
{
	if(Event[Masacre] == true)
	{
		GameTextAll("~w~MASACRE EN EL DESIERTO\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}
	if(Event[MasacreDocks] == true)
	{
		GameTextAll("~w~MASACRE EN OCEAN DOCKS\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[EscapeAvion] == true)
	{
		GameTextAll("~w~avion asesino\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[PurgaLS] == true)
	{
		GameTextAll("~w~PURGA EN LOS SANTOS\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[Supervivencia] == true)
	{
		GameTextAll("~w~SUPERVIVENCIA DEL NEMESIS\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[Royal_1] == true)
	{
		GameTextAll("~w~ROYAL RUMBLE\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}
	if(Event[Royal_2] == true)
	{
		GameTextAll("~w~ROYAL RUMBLE\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}			
	if(Event[HarryPotter] == true)
	{
		GameTextAll("~w~SOBREVIVE A HARRY POTTER\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}		
	if(Event[Oceanside] == true)
	{
		GameTextAll("~w~MASACRE EN OCEANSIDE\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[WoodBury] == true)
	{
		GameTextAll("~w~MASACRE EN WOODBURY\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[Personalizado] == true)
	{
		GameTextAll("~w~EVENTO CUSTOMIZADO\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}	
	if(Event[Escondidas] == true)
	{
		GameTextAll("~w~ESCONDIDAS EN EL CASINO\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}
	if(Event[TDM] == true)
	{
		GameTextAll("~w~HUMANOS VS EXTERMINADORES - TDM\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}
	if(Event[TDM2] == true)
	{
		GameTextAll("~w~HUMANOS VS EXTERMINADORES - TDM\n~n~~b~/EVENTO\n~r~PARA INGRESAR", 4000, 3);
		VariableEventoTimer = SetTimer("EventoTimer",60000,1);
		KillTimer(VariableEventoTimerIntermedio);
	}							
}
/*public ReseteoZonas()
{
    for(new i = 0; i < sizeof(ZoneInfo); i++)
    {
        // Detener el destello de la zona
        GangZoneStopFlashForAll(ZoneID[i]);

        // Reiniciar el tiempo de ataque a cero
        ZoneAttackTime[i] = 0;

        // Restablecer el color de la zona a neutral (0x9B9B9BAA)
        GangZoneShowForAll(ZoneID[i], 0x9B9B9BAA);

        // Restablecer al clan atacante a CLAN_SIN_CONQUISTAR
        ZoneInfo[i][zTeam] = CLAN_SIN_CONQUISTAR;
        ZoneAttacker[i] = CLAN_SIN_CONQUISTAR;
    }

    // Mensaje de notificación
    SendClientMessageToAll(COLOR_WHITE, "AVISO: {FF0000}Se han reseteado las zonas de captura.");
}*/
/*public ReseteoZonas()
{
    for(new i = 0; i < sizeof(ZoneInfo); i++)
    {
        // Detener el destello de la zona
        GangZoneStopFlashForAll(ZoneID[i]);

        // Reiniciar el tiempo de ataque a cero
        ZoneAttackTime[i] = 0;

        // Restablecer el color de la zona a neutral (0x9B9B9BAA)
        GangZoneShowForAll(ZoneID[i], 0x9B9B9BAA);

        // Restablecer al clan atacante a CLAN_SIN_CONQUISTAR
        ZoneInfo[i][zTeam] = CLAN_SIN_CONQUISTAR;
        ZoneAttacker[i] = -1;
    }

    // Mensaje de notificación
    SendClientMessageToAll(COLOR_WHITE, "AVISO: {FF0000}Se han reseteado las zonas de captura.");
}*/

public ReseteoZonas()
{
    for (new i = 0; i < sizeof(ZoneInfo); i++)
    {
        // Detener el destello de la zona
        GangZoneStopFlashForAll(ZoneID[i]);

        // Reiniciar el tiempo de ataque a cero
        ZoneAttackTime[i] = 0;

        // Restablecer el color de la zona a neutral (0x9B9B9BAA)
        GangZoneShowForAll(ZoneID[i], 0x9B9B9BAA);

        // Restablecer al clan atacante a CLAN_SIN_CONQUISTAR
        ZoneInfo[i][zTeam] = CLAN_SIN_CONQUISTAR;
        ZoneAttacker[i] = -1;

        // Restablecer el tiempo de captura para permitir la captura inmediata
        ZoneCaptureTime[i] = 0;
    }

    // Mensaje de notificación
    SendClientMessageToAll(COLOR_WHITE, "AVISO: {FF0000}Se han reseteado las zonas de captura.");
}



public RandomMsg()
{
    switch(random(13))//<---- change the value depending on how much cases you got under
    {
    case 0: SendClientMessageToAll(COLOR_GREEN,"Lil.Tr4p:{FFFFFF}¿Eres zombie? para curarte utiliza /park y dirigete hacia el hospital y pasa sobre el pickup.");
    case 1: SendClientMessageToAll(COLOR_GREEN,"Pac0: {FFFFFF}¿Estas bugueado / inmovil o congelado?, utiliza /desbug para solucionarlo.");
    case 2: SendClientMessageToAll(COLOR_GREEN,"T1N0: {FFFFFF}¿Eres nuevo?, utiliza /ayuda para guiarte y /comandos para ver los comandos disponibles.");
    case 3: SendClientMessageToAll(COLOR_GREEN,"Lil.Tr4p: {FFFFFF}Utliza /park para teletrasportarte a una posición cercana de la cura.");
    case 5: SendClientMessageToAll(COLOR_GREEN,"Pac0: {FFFFFF}Ingresa a nuestro discord oficial https://discord.gg/vM2vHvtfzZ para informate de las nuevas novedades ");
    case 6: SendClientMessageToAll(COLOR_GREEN,"T1N0: {FFFFFF}Recuerda respetar todas las reglas.");
    case 7: SendClientMessageToAll(COLOR_GREEN,"War Blood: {FFFFFF}¿Viste algun hacker?, utiliza /reportar.");
    case 8: SendClientMessageToAll(COLOR_GREEN,"War Blood: {FFFFFF}Gracias por formar parte de esta comunidad War Blood: 2024 - /admins para ver los activos.");
    case 9: SendClientMessageToAll(COLOR_GREEN,"War Blood: {FFFFFF}¿Estas bugueado / inmovil o congelado?, utiliza /desbug para solucionarlo.");
    case 10: SendClientMessageToAll(COLOR_GREEN,"War Blood: {FFFFFF}Productos VIP en nuestro discord oficial.");
    case 11: SendClientMessageToAll(COLOR_GREEN,"War Blood: {FFFFFF}Utiliza /items para comprar el virus/antidoto.");
    case 12: SendClientMessageToAll(COLOR_GREEN,"War Blood: {FFFFFF}Si eres zombie, muerdes con click derecho y pegas con click izquierdo.");

    }
}

stock ReproducirCancionParaTodos(link[]){

        for(new i, l = GetMaxPlayers();i<l;i++) if(IsPlayerConnected(i))
        PlayAudioStreamForPlayer(i, link);
}
//----------------------stocks y publics de afk




stock pnome(playerid)
{
    new nome[32];
    GetPlayerName(playerid, nome, sizeof(nome));
    return nome;
}

//-------------------random music

stock RandomMusic(playerid)
{
        new rand = random(4);
        switch(rand)
        {
            case 0:
            {
                PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_nfnt6b3AF21tekv5xo1.mp3");
            }
            case 1:
            {
                PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_nfnt08EXTG1tekv5xo1.mp3");
            }
            case 2:
            {
                PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_nfntd3twLk1tekv5xo1.mp3");
            }
            case 3:
            {
                PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_ngucgdlhG61tekv5xo1.mp3");
            }
            case 4:
            {
                PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_nfntoexvTD1tekv5xo1.mp3");
            }

    }
        return 1;
}


//----------------------------red screen ---------------------------------------

forward ShowRedScreen(playerid);
public ShowRedScreen(playerid)
{
    TextDrawHideForPlayer(playerid, FWhite);
	TextDrawShowForPlayer(playerid, FRed);
	SetTimerEx("CleanScreen", 100, false, "i", playerid);
	return 1;
}
forward CleanScreen(playerid);
public CleanScreen(playerid)
{
	TextDrawHideForPlayer(playerid, FRed);
	return 1;
}


stock AreAllZonesCapturedByTeam(team)
{
    for (new i = 0; i < sizeof(ZoneInfo); i++)
    {
        if (ZoneInfo[i][zTeam] != team)
        {
            return false;
        }
    }
    return true;
}


/*
public ZoneTimer(playerid)
{
    for(new i = 0; i < sizeof(ZoneInfo); i++) // Bucle todas las zonas
    {
        if(IsZoneBlocked(i)) // Comprueba si la zona está bloqueada    
        {
            for(new zon, zon2 = GetMaxPlayers(); zon < zon2; zon++)
            {
                if(IsPlayerInZone(zon, i))
                {    
                    if(!MessageShown[zon][0])
                    {
                        ShowTDN(zon, 20000, "Esta zona esta bloqueada temporalmente porque fue recientemente capturada.");
                        MessageShown[zon][0] = true; // Marcar mensaje como mostrado
                    }
                }
            }
            continue; // Si está bloqueada, pasa a la siguiente zona sin procesarla    
        }                        
        if(ZoneAttacker[i] != -1) // Zona está siendo atacada
        {
            if(GetPlayersInZone(i, ZoneAttacker[i]) >= MIN_MEMBERS_TO_START_WAR)
            {
                ZoneAttackTime[i]++;
                if(ZoneAttackTime[i] == TAKEOVER_TIME)
                {
                    GangZoneStopFlashForAll(ZoneID[i]);
                    ZoneInfo[i][zTeam] = ZoneAttacker[i];
                    GangZoneShowForAll(ZoneID[i], GetTeamZoneColor(ZoneInfo[i][zTeam]));
                    ZoneAttacker[i] = -1;
                    ZoneCaptureTime[i] = gettime();

                    for(new u, p = GetMaxPlayers(); u < p; u++)
                    {
                        if(IsPlayerInZone(u, i))
                        {
                            if(PlayerInfo[u][CLAN_TIENE] == ZoneInfo[i][zTeam])
                            {
                                if(GetPlayerState(u) == PLAYER_STATE_ONFOOT)
                                {
                                    if(PlayerInfo[u][VIP_TIENE] == 0)
                                    {
                                        if(GetPlayerTeam(u) == NO_TEAM)
                                        {
                                            GameTextForPlayer(u, "~r~Capturaste una zona ~n~~w~+30 XP +$10.000 ~n~~w~+6 Puntos de rango", 6000, 1);
                                            PlayerInfo[u][PUNTOS_PLAYER_2] += 6;
                                            PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                            SetPlayerScore(u, (GetPlayerScore(u)) + 30);
                                            PlayerInfo[u][Kills] += 30;
                                            ELOY9N_GivePlayerMoney(u, 10000);
                                        }    

                                        if(GetPlayerTeam(u) == TEAM_ZOMBIES)
                                        {
                                            GameTextForPlayer(u, "~r~Capturaste una zona ~n~~w~+10 XP +$1.000 ~n~~w~+2 Puntos de rango (conquistar siendo zombie te disminuye las recompensas)", 6000, 1);
                                            PlayerInfo[u][PUNTOS_PLAYER_2] += 2;
                                            PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                            SetPlayerScore(u, (GetPlayerScore(u)) + 10);
                                            PlayerInfo[u][Kills] += 10;
                                            ELOY9N_GivePlayerMoney(u, 1000);
                                        }    
                                    }    
                                    if(PlayerInfo[u][VIP_TIENE] == 4)
                                    {
                                        if(GetPlayerTeam(u) == NO_TEAM)
                                        {
                                            GameTextForPlayer(u, "~r~Capturaste una zona ~n~~w~+60 XP +$20.000 ~n~~w~+12 Puntos de rango", 6000, 1);
                                            PlayerInfo[u][PUNTOS_PLAYER_2] += 12;
                                            PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                            SetPlayerScore(u, (GetPlayerScore(u)) + 60);
                                            PlayerInfo[u][Kills] += 60;
                                            ELOY9N_GivePlayerMoney(u, 20000);
                                        }    

                                        if(GetPlayerTeam(u) == TEAM_ZOMBIES)
                                        {
                                            GameTextForPlayer(u, "~r~Capturaste una zona ~n~~w~+30 XP +$10.000 ~n~~w~+6 Puntos de rango (conquistar siendo zombie te disminuye las recompensas)", 6000, 1);
                                            PlayerInfo[u][PUNTOS_PLAYER_2] += 6;
                                            PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                            SetPlayerScore(u, (GetPlayerScore(u)) + 30);
                                            PlayerInfo[u][Kills] += 30;
                                            ELOY9N_GivePlayerMoney(u, 10000);
                                        }    
                                    }    
                                    if(PlayerInfo[u][VIP_TIENE] == 5)
                                    {
                                        if(GetPlayerTeam(u) == NO_TEAM)
                                        {
                                            GameTextForPlayer(u, "~r~Capturaste una zona ~n~~w~+150 XP +$50.000 ~n~~w~+20 Puntos de rango", 6000, 1);
                                            PlayerInfo[u][PUNTOS_PLAYER_2] += 20;
                                            PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                            SetPlayerScore(u, (GetPlayerScore(u)) + 150);
                                            PlayerInfo[u][Kills] += 150;
                                            ELOY9N_GivePlayerMoney(u, 50000);
                                        }    

                                        if(GetPlayerTeam(u) == TEAM_ZOMBIES)
                                        {
                                            GameTextForPlayer(u, "~r~Capturaste una zona ~n~~w~+30 XP +$10.000 ~n~~w~+6 Puntos de rango (conquistar siendo zombie te disminuye las recompensas)", 6000, 1);
                                            PlayerInfo[u][PUNTOS_PLAYER_2] += 6;
                                            PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                            SetPlayerScore(u, (GetPlayerScore(u)) + 30);
                                            PlayerInfo[u][Kills] += 30;
                                            ELOY9N_GivePlayerMoney(u, 10000);
                                        }    
                                    }                                                                                                            
                                }
                                else
                                {
                                    GameTextForPlayer(u, "~r~Capturaste una zona (sin recompensas por estar en un vehículo)", 6000, 1);
                                    PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                }
                            }
                        }
                    }

                    // Comprobar si todas las zonas fueron capturadas por el mismo equipo
                    if (AreAllZonesCapturedByTeam(ZoneInfo[i][zTeam]))
                    {
                        ReseteoZonas();
                    }
                }
            }
            else // Los atacantes no lograron tomar la zona
            {
                GangZoneStopFlashForAll(ZoneID[i]);
                ZoneAttacker[i] = -1;
            }
        }
        else // Compruebo si alguien está atacando
        {
            for(new t = 0; t < sizeof(Clans); t++)
            {
                if(Clans[t] != ZoneInfo[i][zTeam] && GetPlayersInZone(i, Clans[t]) >= MIN_MEMBERS_TO_START_WAR)
                {
                    ZoneAttacker[i] = Clans[t];
                    ZoneAttackTime[i] = 0;
                    GangZoneFlashForAll(ZoneID[i], GetTeamZoneColor(ZoneAttacker[i]));
                }
            }
        }
    }
}*/

public ZoneTimer(playerid)
{
    for(new i = 0; i < sizeof(ZoneInfo); i++) // Bucle todas las zonas
    {
        if(IsZoneBlocked(i)) // Comprueba si la zona está bloqueada    
        {
            for(new zon, zon2 = GetMaxPlayers(); zon < zon2; zon++)
            {
                if(IsPlayerInZone(zon, i))
                {    
                    if(!MessageShown[zon][0])
                    {
                        ShowTDN(zon, 20000, "Esta zona esta bloqueada temporalmente porque fue recientemente capturada.");
                        MessageShown[zon][0] = true; // Marcar mensaje como mostrado
                    }
                }
            }
            continue; // Si está bloqueada, pasa a la siguiente zona sin procesarla    
        }                        

        if(ZoneAttacker[i] != -1) // Zona está siendo atacada
        {
            if(GetPlayersInZone(i, ZoneAttacker[i]) >= MIN_MEMBERS_TO_START_WAR)
            {
                ZoneAttackTime[i]++;
                if(ZoneAttackTime[i] == TAKEOVER_TIME)
                {
                    GangZoneStopFlashForAll(ZoneID[i]);
                    ZoneInfo[i][zTeam] = ZoneAttacker[i];
                    GangZoneShowForAll(ZoneID[i], GetTeamZoneColor(ZoneInfo[i][zTeam]));
                    ZoneAttacker[i] = -1;
                    ZoneCaptureTime[i] = gettime();

                    for(new u, p = GetMaxPlayers(); u < p; u++)
                    {
                        if(IsPlayerInZone(u, i))
                        {
                            if(PlayerInfo[u][CLAN_TIENE] == ZoneInfo[i][zTeam])
                            {
                                if(GetPlayerState(u) == PLAYER_STATE_ONFOOT)
                                {
                                    if(PlayerInfo[u][VIP_TIENE] == 0)
                                    {
                                        GameTextForPlayer(u, "~r~Capturaste una zona ~n~~w~+30 XP +$10.000 ~n~~w~+6 Puntos de rango", 6000, 1);
                                        PlayerInfo[u][PUNTOS_PLAYER_2] += 6;
                                        PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                        SetPlayerScore(u, (GetPlayerScore(u)) + 30);
                                        PlayerInfo[u][Kills] += 30;
                                        ELOY9N_GivePlayerMoney(u, 10000);
                                    }    
                                    else if(PlayerInfo[u][VIP_TIENE] == 4)
                                    {
                                        GameTextForPlayer(u, "~r~Capturaste una zona ~n~~w~+60 XP +$20.000 ~n~~w~+12 Puntos de rango", 6000, 1);
                                        PlayerInfo[u][PUNTOS_PLAYER_2] += 12;
                                        PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                        SetPlayerScore(u, (GetPlayerScore(u)) + 60);
                                        PlayerInfo[u][Kills] += 60;
                                        ELOY9N_GivePlayerMoney(u, 20000);
                                    }    
                                    else if(PlayerInfo[u][VIP_TIENE] == 5)
                                    {
                                        GameTextForPlayer(u, "~r~Capturaste una zona ~n~~w~+150 XP +$50.000 ~n~~w~+20 Puntos de rango", 6000, 1);
                                        PlayerInfo[u][PUNTOS_PLAYER_2] += 20;
                                        PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                        SetPlayerScore(u, (GetPlayerScore(u)) + 150);
                                        PlayerInfo[u][Kills] += 150;
                                        ELOY9N_GivePlayerMoney(u, 50000);
                                    }    
                                }
                                else
                                {
                                    GameTextForPlayer(u, "~r~Capturaste una zona (sin recompensas por estar en un vehículo)", 6000, 1);
                                    PlayerInfo[u][CONQUISTAS_PLAYER] += 1;
                                }
                            }
                        }
                    }

                    // Aquí se suma la conquista al clan correspondiente
                    if(ZoneInfo[i][zTeam] == CLAN_SD)
                    {
                        VariablesInfo[SD_CONQUISTAS] += 1;
                        format(file,sizeof(file),"ladmin/config/VariablesConfig.ini");
                        dini_IntSet(file, "SD_CONQUISTAS", VariablesInfo[SD_CONQUISTAS]);
                    }
                    else if(ZoneInfo[i][zTeam] == CLAN_SWO)
                    {
                        VariablesInfo[SWO_CONQUISTAS] += 1;
                        format(file,sizeof(file),"ladmin/config/VariablesConfig.ini");
                        dini_IntSet(file, "SWO_CONQUISTAS", VariablesInfo[SWO_CONQUISTAS]);
                    }
                    else if(ZoneInfo[i][zTeam] == CLAN_GOD)
                    {
                        VariablesInfo[GOD_CONQUISTAS] += 1;
                        format(file,sizeof(file),"ladmin/config/VariablesConfig.ini");
                        dini_IntSet(file, "GOD_CONQUISTAS", VariablesInfo[GOD_CONQUISTAS]);
                    }					

                    // Comprobar si todas las zonas fueron capturadas por el mismo equipo
                    if (AreAllZonesCapturedByTeam(ZoneInfo[i][zTeam]))
                    {
                        ReseteoZonas();
                    }
                }
            }
            else // Los atacantes no lograron tomar la zona
            {
                GangZoneStopFlashForAll(ZoneID[i]);
                ZoneAttacker[i] = -1;
            }
        }
        else // Compruebo si alguien está atacando
        {
            for(new t = 0; t < sizeof(Clans); t++)
            {
                if(Clans[t] != ZoneInfo[i][zTeam] && GetPlayersInZone(i, Clans[t]) >= MIN_MEMBERS_TO_START_WAR)
                {
                    ZoneAttacker[i] = Clans[t];
                    ZoneAttackTime[i] = 0;
                    GangZoneFlashForAll(ZoneID[i], GetTeamZoneColor(ZoneAttacker[i]));
                }
            }
        }
    }
}



//---------------armas en la espalda

stock GetWeaponModel(weaponid)
{
        switch(weaponid)
        {
            case 1:
                return 331;

                case 2..8:
                    return weaponid+331;

        		case 9:
                    return 341;

                case 10..15:
                        return weaponid+311;

                case 16..18:
                    return weaponid+326;

                case 22..29:
                    return weaponid+324;

                case 30,31:
                    return weaponid+325;

                case 32:
                    return 372;

                case 33..45:
                    return weaponid+324;

                case 46:
                    return 371;
        }
        return 0;
}

//-------------conteo

public CountDown2(){
	if (Count2 > 0)
	{
	GameTextForAll( CountText[Count2-1], 2500, 3);
	SoundForAll(1056);
	Count2--;
	SetTimer("CountDown2", 1000, 0);
	}
	else
	{
 	SoundForAll(1057);
	//GameTextForAll("~g~¡GOGOGOGO!~r~", 2500, 3);
	GameTextForAll("~g~GO~ r~!",1000,6);
	Count2 = 5;
	}
	return 0;
	}
	
	forward countdown();
public countdown()
{
	if(CountDown==6) GameTextAll("~p~Comenzando...",1000,6);

	CountDown--;
	if(CountDown==0)
	{
		GameTextAll("~g~GO~ r~!",1000,6);
		CountDown = -1;
		for(new i = 0; i < MAX_PLAYERS; i++) {
			PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
		}
		return 0;
	}
	else
	{
		new text[7]; format(text,sizeof(text),"~w~%d",CountDown);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
		}
	 	GameTextAll(text,1000,6);
	}

	SetTimer("countdown",1000,0);
	return 0;
}
//------------------habilidades----------------------------------

public Float:GetDistanceBetweenPlayers(p1,p2)
{
    new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
    if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) {
        return -1.00;
    }
    GetPlayerPos(p1,x1,y1,z1);
    GetPlayerPos(p2,x2,y2,z2);
    return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

public GetClosestPlayer(p1)
{
    new x,Float:dis,Float:dis2,player;
    player = -1;
    dis = 99999.99;
    for (x=0;x<MAX_PLAYERS;x++) {
        if(IsPlayerConnected(x)) {
            if(x != p1) {
                dis2 = GetDistanceBetweenPlayers(x,p1);
                if(dis2 < dis && dis2 != -1.00) {
                    dis = dis2;
                    player = x;
                }
            }
        }
    }
    return player;
}


//--------------

public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	if(listid == skinlist1)
	{
	    if(response)
	    {
		    SendClientMessage(playerid, 0xFF0000FF, "Skin cambiado.");
	    	SetPlayerSkin(playerid, modelid);
			Skin_Humano[playerid] = modelid;
	    }
	    else SendClientMessage(playerid, 0xFF0000FF, "Cambio de Skin Cancelado.");
    	return 1;
	}
	if(listid == skinlist2)
	{
	    if(response)
	    {
		    SendClientMessage(playerid, 0xFF0000FF, "Skin cambiado.");
	    	SetPlayerSkin(playerid, modelid);
			Skin_Zombie[playerid] = modelid;
	    }
	    else SendClientMessage(playerid, 0xFF0000FF, "Cambio de Skin Cancelado.");
    	return 1;
	}
	if(listid == skinlist3)
	{
	    if(response)
	    {
		    SendClientMessage(playerid, 0xFF0000FF, "Skin cambiado.");
	    	SetPlayerSkin(playerid, modelid);
	    }
	    else SendClientMessage(playerid, 0xFF0000FF, "Cambio de Skin Cancelado.");
    	return 1;
	}
	if(listid == skinlist4)
	{
	    if(response)
	    {
		    SendClientMessage(playerid, 0xFF0000FF, "Skin cambiado.");
	    	SetPlayerSkin(playerid, modelid);
	    }
	    else SendClientMessage(playerid, 0xFF0000FF, "Cambio de Skin Cancelado.");
    	return 1;
	}
    return 1;  
}
//--------------anti moneyhack
// Función para cargar las conquistas de los jugadores desde los archivos .sav














stock ELOY9N_GivePlayerMoney(playerid, money)
{
    pMoney[playerid] += money;
    GivePlayerMoney(playerid, money);
    return 1;
}
stock ELOY9N_SetPlayerMoney(playerid, money)
{
    pMoney[playerid] = money;
    ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid, money);
    return 1;
}

stock ELOY9N_ResetMoney(playerid)
{
    pMoney[playerid] = 0;
	ResetPlayerMoney(playerid);
	return 1;
}

GetVehicleWithinDistance( playerid, Float:x1, Float:y1, Float:z1, Float:dist, &vehic){
	for(new i = 1; i < MAX_VEHICLES; i++){
		if(GetVehicleModel(i) > 0){
			if(GetPlayerVehicleID(playerid) != i ){
	        	new Float:x, Float:y, Float:z;
	        	new Float:x2, Float:y2, Float:z2;
				GetVehiclePos(i, x, y, z);
				x2 = x1 - x; y2 = y1 - y; z2 = z1 - z;
				new Float:iDist = (x2*x2+y2*y2+z2*z2);
				printf("Vehicle %d is %f", i, iDist);

				if( iDist < dist){
					vehic = i;
				}
			}
		}
	}
}
#pragma unused GetVehicleWithinDistance

forward ModCar(playerid);
public ModCar(playerid) { // changed to switch method to reduce processor load on server
//	new modelid = GetVehicleModel(GetPlayerVehicleID(playerid)); // this executes a fair amt of stuff, so running it once to populate variable (modelid),THEN checking variable, makes more sense
	switch(pmodelid[playerid]) {
        case 562,565,559,561,560,575,534,567,536,535,576,411,579,602,496,518,527,589,597,419,
		533,526,474,545,517,410,600,436,580,439,549,491,445,604,507,585,587,466,492,546,551,516,
		426, 547, 405, 409, 550, 566, 540, 421,	529,431,438,437,420,525,552,416,433,427,490,528,
		407,544,470,598,596,599,601,428,499,609,524,578,486,406,573,455,588,403,514,423,
		414,443,515,456,422,482,530,418,572,413,440,543,583,478,554,402,542,603,475,568,504,457,
        483,508,429,541,415,480,434,506,451,555,477,400,404,489,479,442,458,467,558,444: {
		    TogglePlayerControllable(playerid,0);
 			return SendClientMessage(playerid, COLOR_WHITE, "Select an item and push the SPACEBAR to approve.");
		}
		default: return SendClientMessage(playerid,COLOR_RED,"[WARNING] You are not allowed to modify/tune this vehicle");
	}
	return 1;
}

stock HumanSetup(playerid)
{
    gTeam[playerid] = NO_TEAM;
	SetPlayerTeam(playerid, gTeam[playerid]);
	InfeccionEnprogreso[playerid]=0;
	Skins[playerid] = skinsh[random(213)];
	if(Skin_Humano[playerid] == 0)
	{
	SetPlayerSkin(playerid,Skins[playerid]);
	}
			else {
			SetPlayerSkin(playerid,Skin_Humano[playerid]);
		}
	SetPlayerHealth(playerid,100.0);
    	  ELOY9N_GivePlayerWeapon(playerid, 25, 20);  //escopeta
	  ELOY9N_GivePlayerWeapon(playerid, 29, 114);   //mp5
	  ELOY9N_GivePlayerWeapon(playerid, 24, 75);
	  ELOY9N_GivePlayerWeapon(playerid, 31, 250);  //m4
	SetPlayerColor(playerid, 0x218C07FF);
//	TextDrawShowForPlayer(playerid, Textdraw0);
 //	TextDrawHideForPlayer(playerid, Textdraw2);
	  TextDrawHideForPlayer(playerid, VistaZombie0);
	  TextDrawHideForPlayer(playerid, VistaZombie1);
	  TextDrawHideForPlayer(playerid, VistaZombie2);
	  TextDrawHideForPlayer(playerid, VistaZombie3);
	  TextDrawHideForPlayer(playerid, VistaZombie4);
	  KillTimer(VidaTimer[playerid]);
	for(new i=0; i<19; i++) TextDrawHideForPlayer(playerid,HealthBar[i]);
	return 1;
}
FixTextDrawString(message[], bool:space = false) {
	for(new len = strlen(message), pos; pos < len; pos ++)
	{
		switch(message[pos])
		{
			case 'à': message[pos] = 151;
			case 'á': message[pos] = 152;
			case 'â': message[pos] = 153;
			case 'ä': message[pos] = 154;
			case 'À': message[pos] = 128;
			case 'Á': message[pos] = 129;
			case 'Â': message[pos] = 130;
			case 'Ä': message[pos] = 131;
			case 'è': message[pos] = 157;
			case 'é': message[pos] = 158;
			case 'ê': message[pos] = 159;
			case 'ë': message[pos] = 160;
			case 'È': message[pos] = 134;
			case 'É': message[pos] = 135;
			case 'Ê': message[pos] = 136;
			case 'Ë': message[pos] = 137;
			case 'ì': message[pos] = 161;
			case 'í': message[pos] = 162;
			case 'î': message[pos] = 163;
			case 'ï': message[pos] = 164;
			case 'Ì': message[pos] = 138;
			case 'Í': message[pos] = 139;
			case 'Î': message[pos] = 140;
			case 'Ï': message[pos] = 141;
			case 'ò': message[pos] = 165;
			case 'ó': message[pos] = 166;
			case 'ô': message[pos] = 167;
			case 'ö': message[pos] = 168;
			case 'Ò': message[pos] = 142;
			case 'Ó': message[pos] = 143;
			case 'Ô': message[pos] = 144;
			case 'Ö': message[pos] = 145;
			case 'ù': message[pos] = 169;
			case 'ú': message[pos] = 170;
			case 'û': message[pos] = 171;
			case 'ü': message[pos] = 172;
			case 'Ù': message[pos] = 146;
			case 'Ú': message[pos] = 147;
			case 'Û': message[pos] = 148;
			case 'Ü': message[pos] = 149;
			case 'ñ': message[pos] = 174;
			case 'Ñ': message[pos] = 173;
			case '¡': message[pos] = 64;
			case '¿': message[pos] = 175;
			case '`': message[pos] = 177;
			case '&': message[pos] = 38;
			case ' ': {
				if(space) {
					message[pos] = '_';
				}
			}
			default:  message[pos] = message[pos];
		}
	}
}

